(function() {var implementors = {};
implementors["test_generator"] = [{"text":"impl UnwindSafe for Testsuite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Test","synthetic":true,"types":[]}];
implementors["wasmer"] = [{"text":"impl UnwindSafe for HostEnvInitError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for LazyInit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Exports","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; UnwindSafe for ExportsIterator&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WithEnv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WithoutEnv","synthetic":true,"types":[]},{"text":"impl&lt;Args, Rets&gt; UnwindSafe for Function&lt;Args, Rets&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Args: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rets: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for S0","synthetic":true,"types":[]},{"text":"impl&lt;A1&gt; UnwindSafe for S1&lt;A1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2&gt; UnwindSafe for S2&lt;A1, A2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3&gt; UnwindSafe for S3&lt;A1, A2, A3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4&gt; UnwindSafe for S4&lt;A1, A2, A3, A4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5&gt; UnwindSafe for S5&lt;A1, A2, A3, A4, A5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6&gt; UnwindSafe for S6&lt;A1, A2, A3, A4, A5, A6&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7&gt; UnwindSafe for S7&lt;A1, A2, A3, A4, A5, A6, A7&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8&gt; UnwindSafe for S8&lt;A1, A2, A3, A4, A5, A6, A7, A8&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9&gt; UnwindSafe for S9&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10&gt; UnwindSafe for S10&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11&gt; UnwindSafe for S11&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12&gt; UnwindSafe for S12&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13&gt; UnwindSafe for S13&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14&gt; UnwindSafe for S14&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15&gt; UnwindSafe for S15&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16&gt; UnwindSafe for S16&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17&gt; UnwindSafe for S17&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18&gt; UnwindSafe for S18&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19&gt; UnwindSafe for S19&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20&gt; UnwindSafe for S20&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21&gt; UnwindSafe for S21&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22&gt; UnwindSafe for S22&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23&gt; UnwindSafe for S23&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24&gt; UnwindSafe for S24&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25&gt; UnwindSafe for S25&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A25 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26&gt; UnwindSafe for S26&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A25 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A26 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmFunctionDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HostFunctionDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DynamicFunctionWithoutEnv","synthetic":true,"types":[]},{"text":"impl&lt;Env&gt; !UnwindSafe for DynamicFunctionWithEnv&lt;Env&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Global","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Memory","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportObject","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ImportObjectIterator","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InstantiationError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for IoCompileError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl&lt;Args&nbsp;=&nbsp;(), Rets&nbsp;=&nbsp;()&gt; !UnwindSafe for NativeFunc&lt;Args, Rets&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Array","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl&lt;T, Ty&gt; UnwindSafe for WasmPtr&lt;T, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Store","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseTunables","synthetic":true,"types":[]}];
implementors["wasmer_c_api"] = [{"text":"impl UnwindSafe for wasmer_export_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_export_func_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_exports_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_export_descriptor_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamedExportDescriptors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_export_descriptors_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_export_value","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_export_kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_global_descriptor_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_global_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_wasi_map_dir_entry_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_object_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_func_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_descriptor_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_descriptors_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_import_object_iter_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NamedImportDescriptors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_instance_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_instance_context_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_memory_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_module_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_serialized_module_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_table_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_value_tag","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_value","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_value_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_result_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_limits_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_limit_option_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_byte_array","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CApiError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_compiler_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_engine_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_config_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_engine_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_func_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_global_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_memory_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_table_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_extern_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_extern_vec_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_instance_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_module_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_store_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasm_trap_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_exporttype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_exporttype_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_externkind_enum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_externtype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternTypeConversionError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_frame_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_frame_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_functype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_functype_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_globaltype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_globaltype_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_importtype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_importtype_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_memorytype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_memorytype_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_limits_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_mutability_enum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_tabletype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_tabletype_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_valkind_enum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_valtype_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_valtype_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_byte_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for owned_wasm_name_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_ref_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_features_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasmer_metering_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasmer_middleware_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_parser_operator_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_target_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_triple_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasmer_cpu_features_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasmer_named_extern_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasmer_named_extern_vec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_val_inner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_val_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasm_val_vec_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasi_config_t","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for wasi_env_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasi_version_t","synthetic":true,"types":[]}];
implementors["wasmer_cache"] = [{"text":"impl UnwindSafe for FileSystemCache","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Hash","synthetic":true,"types":[]}];
implementors["wasmer_cli"] = [{"text":"impl UnwindSafe for Cache","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inspect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Wasi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Run","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelfUpdate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Validate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Wast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmFeatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrettyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, D&gt; !UnwindSafe for Indented&lt;'a, D&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmerCLIOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StoreOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompilerOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompilerType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EngineType","synthetic":true,"types":[]}];
implementors["wasmer_compiler"] = [{"text":"impl UnwindSafe for InstructionAddressMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionAddressMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompileError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MiddlewareError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseCpuFeatureError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledFunction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Dwarf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Compilation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JumpTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompileModuleInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedCompileModuleInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompileModuleInfoResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelocationKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Relocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelocationTarget","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CpuFeature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Target","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrapInformation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledFunctionUnwindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for FunctionBodyData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; UnwindSafe for ModuleInfoTranslation&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; UnwindSafe for ModuleEnvironment&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for MiddlewareBinaryReader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MiddlewareReaderState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleTranslationState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SectionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CustomSectionProtection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CustomSection","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SectionBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceLoc","synthetic":true,"types":[]}];
implementors["wasmer_compiler_cranelift"] = [{"text":"impl !UnwindSafe for CraneliftCompiler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CraneliftOptLevel","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Cranelift","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleInfoMemoryOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleInfoVmctxInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriterRelocate","synthetic":true,"types":[]},{"text":"impl&lt;'module_environment&gt; UnwindSafe for FuncEnvironment&lt;'module_environment&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for RelocSink&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrapSink","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrampolineRelocSink","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalVariable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReturnMode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ElseData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlStackFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueExtraInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuncTranslationState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuncTranslator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CraneliftUnwindInfo","synthetic":true,"types":[]}];
implementors["wasmer_compiler_llvm"] = [{"text":"impl UnwindSafe for Aarch64SystemV","synthetic":true,"types":[]},{"text":"impl UnwindSafe for X86_64SystemV","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LLVMCompiler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShortNames","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LLVM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ElfSectionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompiledFunction","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FuncTrampoline","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FuncTranslator","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, 'a&gt; !UnwindSafe for LLVMFunctionCodeGenerator&lt;'ctx, 'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; UnwindSafe for Intrinsics&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; UnwindSafe for MemoryCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; UnwindSafe for TableCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; UnwindSafe for GlobalCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; UnwindSafe for FunctionCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, 'a&gt; !UnwindSafe for CtxType&lt;'ctx, 'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; UnwindSafe for ControlFrame&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfElseState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtraInfo","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; UnwindSafe for State&lt;'ctx&gt;","synthetic":true,"types":[]}];
implementors["wasmer_compiler_singlepass"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for FuncGen&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpecialLabelSet","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrapTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloatValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CanonicalizeType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ControlFrame","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfElseState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CodegenError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for I2O1","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegisterIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmAbstractValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MachineState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MachineStateDiff","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MachineValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionStateMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SuspendOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OffsetInfo","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SinglepassCompiler","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Singlepass","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Location","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Condition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Size","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMMOrMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPROrMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MachineStackOffset","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Machine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GPR","synthetic":true,"types":[]},{"text":"impl UnwindSafe for XMM","synthetic":true,"types":[]},{"text":"impl UnwindSafe for X64Register","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArgumentRegisterAllocator","synthetic":true,"types":[]}];
implementors["wasmer_derive"] = [{"text":"impl UnwindSafe for WasmerAttr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportExpr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportOptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmerAttrInner","synthetic":true,"types":[]}];
implementors["wasmer_emscripten"] = [{"text":"impl UnwindSafe for EmAddrInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmSockAddr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LongJumpRet","synthetic":true,"types":[]},{"text":"impl&lt;T, Ty&gt; UnwindSafe for WasmPtr&lt;T, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmPollFd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for guest_tm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GuestStat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VarArgs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmEnv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LibcDirWrapper","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmscriptenData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EmscriptenGlobalsData","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for EmscriptenGlobals","synthetic":true,"types":[]}];
implementors["wasmer_engine"] = [{"text":"impl UnwindSafe for EngineId","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for SerializeError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for DeserializeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for LinkError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InstantiationError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Export","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportFunctionMetadata","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExportFunction","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExportTable","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExportMemory","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExportGlobal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NullResolver","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; UnwindSafe for NamedResolverChain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnprocessedFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerializableFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionFrameInfoVisitor","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RuntimeError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RuntimeErrorSource","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RuntimeErrorInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FRAME_INFO","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalFrameInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalFrameInfoRegistration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleInfoFrameInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionExtent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameInfo","synthetic":true,"types":[]}];
implementors["wasmer_engine_dummy"] = [{"text":"impl UnwindSafe for DummyArtifactMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyArtifact","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyEngine","synthetic":true,"types":[]}];
implementors["wasmer_engine_jit"] = [{"text":"impl UnwindSafe for JITArtifact","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for JIT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CodeMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JITEngine","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for JITEngineInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerializableCompilation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SerializableModule","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnwindRegistry","synthetic":true,"types":[]}];
implementors["wasmer_engine_native"] = [{"text":"impl UnwindSafe for NativeArtifact","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Native","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NativeEngine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Linker","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for NativeEngineInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedModuleMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleMetadataResolver","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ModuleMetadataSymbolRegistry&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wasmer_engine_object_file"] = [{"text":"impl UnwindSafe for ObjectFileArtifact","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ObjectFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectFileEngine","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ObjectFileEngineInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleMetadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleMetadataSymbolRegistry","synthetic":true,"types":[]}];
implementors["wasmer_integration_tests_cli"] = [{"text":"impl UnwindSafe for LinkCode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Compiler","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Engine","synthetic":true,"types":[]}];
implementors["wasmer_middlewares"] = [{"text":"impl UnwindSafe for MeteringGlobalIndexes","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Metering&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for FunctionMetering&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MeteringPoints","synthetic":true,"types":[]}];
implementors["wasmer_object"] = [{"text":"impl UnwindSafe for ObjectError","synthetic":true,"types":[]}];
implementors["wasmer_types"] = [{"text":"impl&lt;K, V&gt; UnwindSafe for ArchivedPrimaryMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for ArchivableIndexMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; !UnwindSafe for ArchivedArchivableIndexMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; !UnwindSafe for ArchivableIndexMapResolver&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMExternRef","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMExternRefInner","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ExternRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Features","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedFeatures","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FeaturesResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalFunctionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedLocalFunctionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalFunctionIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalTableIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalMemoryIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalGlobalIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedLocalGlobalIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LocalGlobalIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedFunctionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedTableIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedGlobalIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedMemoryIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedSignatureIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedDataIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ElemIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedElemIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ElemIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CustomSectionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedCustomSectionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CustomSectionIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedExportIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedImportIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportIndexResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableInitializer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedTableInitializer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableInitializerResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataInitializerLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedDataInitializerLocation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataInitializerLocationResolver","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; UnwindSafe for DataInitializer&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedDataInitializer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedOwnedDataInitializer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OwnedDataInitializerResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Atomically","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NonAtomically","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, A&nbsp;=&nbsp;NonAtomically&gt; !UnwindSafe for MemoryView&lt;'a, T, A&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for V128","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedV128","synthetic":true,"types":[]},{"text":"impl UnwindSafe for V128Resolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedFunctionType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionTypeResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mutability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedMutability","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MutabilityResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedGlobalType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalTypeResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalInit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedGlobalInit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalInitResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedTableType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableTypeResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedMemoryType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryTypeResolver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ImportType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ExportType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedPages","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PagesResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bytes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PageCountOutOfRange","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Value&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for PackedOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for BoxedSlice&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; UnwindSafe for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; !UnwindSafe for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe + UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; UnwindSafe for Keys&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for PrimaryMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for SecondaryMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wasmer_vm"] = [{"text":"impl !UnwindSafe for VMExport","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMExportFunction","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMExportTable","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMExportMemory","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMExportGlobal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuncDataRegistry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMFuncRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inner","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Global","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Imports","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InstanceAllocator","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InstanceRef","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Instance","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImportFunctionEnv","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InstanceHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedMemoryStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MemoryStyleResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearMemory","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMMemoryDefinitionOwnership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasmMmap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mmap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedModuleId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleIdResolver","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModuleInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivableModuleInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedArchivableModuleInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivableModuleInfoResolver","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for ExportsIterator&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; UnwindSafe for ImportsIterator&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignatureRegistry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Inner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArchivedTableStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TableStyleResolver","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for TableElement","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for RawTableElement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinearTable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMTableDefinitionOwnership","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TrapCode","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Trap","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CallThreadState","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for UnwindReason","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMFunctionEnvironment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMFunctionImport","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for VMDynamicFunctionContext&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMFunctionBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMFunctionKind","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMTableImport","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMMemoryImport","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMGlobalImport","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMMemoryDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMTableDefinition","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMGlobalDefinitionStorage","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for VMGlobalDefinition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMCallerCheckedAnyfunc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMBuiltinFunctionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMBuiltinFunctionsArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VMOffsets","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LibCall","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionBodyPtr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SectionBodyPtr","synthetic":true,"types":[]}];
implementors["wasmer_wasi"] = [{"text":"impl&lt;T, Ty&gt; UnwindSafe for WasmPtr&lt;T, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WasiStateBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasiStateCreationError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreopenDirBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreopenedDir","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasiFsError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollEventBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollEventIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HostFile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stdout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stderr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Stdin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pipe","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for InodeVal","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Kind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fd","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WasiFs","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WasiState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_subscription_u","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_ciovec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_dirent_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_event_fd_readwrite_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_event_u","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_event_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_prestat_u_dir_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_prestat_u","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_prestat_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrestatEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_fdstat_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_iovec_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_subscription_fs_readwrite_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_subscription_u","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EventType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasiSubscription","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubscriptionEnum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasiVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WasiError","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for WasiEnv","synthetic":true,"types":[]}];
implementors["wasmer_wasi_experimental_io_devices"] = [{"text":"impl UnwindSafe for InputEvent","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameBufferFileType","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for FrameBufferState","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FrameBuffer","synthetic":true,"types":[]}];
implementors["wasmer_wast"] = [{"text":"impl UnwindSafe for DirectiveError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DirectiveErrors","synthetic":true,"types":[]},{"text":"impl UnwindSafe for wasi_test","synthetic":true,"types":[]},{"text":"impl UnwindSafe for envs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for args","synthetic":true,"types":[]},{"text":"impl UnwindSafe for preopens","synthetic":true,"types":[]},{"text":"impl UnwindSafe for map_dirs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for temp_dirs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for assert_return","synthetic":true,"types":[]},{"text":"impl UnwindSafe for stdin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for assert_stdout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for assert_stderr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for fake_i64_const","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for WasiTest&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Envs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Args&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Preopens&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for MapDirs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for TempDirs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssertReturn","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Stdin&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AssertStdout&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for AssertStderr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OutputCapturerer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Wast","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()