(function() {var implementors = {};
implementors["test_generator"] = [{"text":"impl Send for Testsuite","synthetic":true,"types":[]},{"text":"impl Send for Test","synthetic":true,"types":[]}];
implementors["wasmer"] = [{"text":"impl Send for HostEnvInitError","synthetic":true,"types":[]},{"text":"impl Send for ExportError","synthetic":true,"types":[]},{"text":"impl Send for Exports","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Send for ExportsIterator&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for WithEnv","synthetic":true,"types":[]},{"text":"impl Send for WithoutEnv","synthetic":true,"types":[]},{"text":"impl Send for S0","synthetic":true,"types":[]},{"text":"impl&lt;A1&gt; Send for S1&lt;A1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2&gt; Send for S2&lt;A1, A2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3&gt; Send for S3&lt;A1, A2, A3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4&gt; Send for S4&lt;A1, A2, A3, A4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5&gt; Send for S5&lt;A1, A2, A3, A4, A5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6&gt; Send for S6&lt;A1, A2, A3, A4, A5, A6&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7&gt; Send for S7&lt;A1, A2, A3, A4, A5, A6, A7&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8&gt; Send for S8&lt;A1, A2, A3, A4, A5, A6, A7, A8&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9&gt; Send for S9&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10&gt; Send for S10&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11&gt; Send for S11&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12&gt; Send for S12&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13&gt; Send for S13&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14&gt; Send for S14&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15&gt; Send for S15&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16&gt; Send for S16&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17&gt; Send for S17&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18&gt; Send for S18&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19&gt; Send for S19&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20&gt; Send for S20&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21&gt; Send for S21&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22&gt; Send for S22&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23&gt; Send for S23&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24&gt; Send for S24&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25&gt; Send for S25&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A25 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26&gt; Send for S26&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A25 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A26 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for WasmFunctionDefinition","synthetic":true,"types":[]},{"text":"impl Send for HostFunctionDefinition","synthetic":true,"types":[]},{"text":"impl Send for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl Send for Function","synthetic":true,"types":[]},{"text":"impl Send for DynamicFunctionWithoutEnv","synthetic":true,"types":[]},{"text":"impl&lt;Env&gt; Send for DynamicFunctionWithEnv&lt;Env&gt;","synthetic":true,"types":[]},{"text":"impl Send for Global","synthetic":true,"types":[]},{"text":"impl Send for Memory","synthetic":true,"types":[]},{"text":"impl Send for Table","synthetic":true,"types":[]},{"text":"impl Send for Extern","synthetic":true,"types":[]},{"text":"impl !Send for ImportObject","synthetic":true,"types":[]},{"text":"impl Send for ImportObjectIterator","synthetic":true,"types":[]},{"text":"impl Send for Instance","synthetic":true,"types":[]},{"text":"impl Send for InstantiationError","synthetic":true,"types":[]},{"text":"impl Send for IoCompileError","synthetic":true,"types":[]},{"text":"impl Send for Module","synthetic":true,"types":[]},{"text":"impl Send for Array","synthetic":true,"types":[]},{"text":"impl Send for Item","synthetic":true,"types":[]},{"text":"impl&lt;T, Ty&gt; Send for WasmPtr&lt;T, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Store","synthetic":true,"types":[]},{"text":"impl Send for BaseTunables","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Send for LazyInit&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Args, Rets&gt; Send for Function&lt;Args, Rets&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Args, Rets&gt; Send for NativeFunc&lt;Args, Rets&gt;","synthetic":false,"types":[]}];
implementors["wasmer_c_api"] = [{"text":"impl Send for wasmer_export_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_export_func_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_exports_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_export_descriptor_t","synthetic":true,"types":[]},{"text":"impl Send for NamedExportDescriptors","synthetic":true,"types":[]},{"text":"impl Send for wasmer_export_descriptors_t","synthetic":true,"types":[]},{"text":"impl !Send for wasmer_import_export_value","synthetic":true,"types":[]},{"text":"impl Send for wasmer_import_export_kind","synthetic":true,"types":[]},{"text":"impl Send for wasmer_global_descriptor_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_global_t","synthetic":true,"types":[]},{"text":"impl Send for Version","synthetic":true,"types":[]},{"text":"impl !Send for wasmer_wasi_map_dir_entry_t","synthetic":true,"types":[]},{"text":"impl !Send for wasmer_import_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_import_object_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_import_func_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_import_descriptor_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_import_descriptors_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_import_object_iter_t","synthetic":true,"types":[]},{"text":"impl Send for NamedImportDescriptors","synthetic":true,"types":[]},{"text":"impl Send for wasmer_instance_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_instance_context_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_memory_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_module_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_serialized_module_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_table_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_value_tag","synthetic":true,"types":[]},{"text":"impl Send for wasmer_value","synthetic":true,"types":[]},{"text":"impl Send for wasmer_value_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_result_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_limits_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_limit_option_t","synthetic":true,"types":[]},{"text":"impl !Send for wasmer_byte_array","synthetic":true,"types":[]},{"text":"impl Send for CApiError","synthetic":true,"types":[]},{"text":"impl Send for wasmer_compiler_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_engine_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_config_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_engine_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_func_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_global_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_memory_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_table_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_extern_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_extern_vec_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_instance_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_module_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_store_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_trap_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_exporttype_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_exporttype_vec_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_externkind_enum","synthetic":true,"types":[]},{"text":"impl !Send for wasm_externtype_t","synthetic":true,"types":[]},{"text":"impl Send for ExternTypeConversionError","synthetic":true,"types":[]},{"text":"impl Send for wasm_frame_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_frame_vec_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_functype_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_functype_vec_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_globaltype_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_globaltype_vec_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_importtype_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_importtype_vec_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_memorytype_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_memorytype_vec_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_limits_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_mutability_enum","synthetic":true,"types":[]},{"text":"impl !Send for wasm_tabletype_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_tabletype_vec_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_valkind_enum","synthetic":true,"types":[]},{"text":"impl Send for wasm_valtype_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_valtype_vec_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_byte_vec_t","synthetic":true,"types":[]},{"text":"impl !Send for owned_wasm_name_t","synthetic":true,"types":[]},{"text":"impl Send for wasm_ref_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_features_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_metering_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_middleware_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_parser_operator_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_target_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_triple_t","synthetic":true,"types":[]},{"text":"impl Send for wasmer_cpu_features_t","synthetic":true,"types":[]},{"text":"impl !Send for wasmer_named_extern_t","synthetic":true,"types":[]},{"text":"impl !Send for wasmer_named_extern_vec_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_val_inner","synthetic":true,"types":[]},{"text":"impl !Send for wasm_val_t","synthetic":true,"types":[]},{"text":"impl !Send for wasm_val_vec_t","synthetic":true,"types":[]},{"text":"impl Send for wasi_config_t","synthetic":true,"types":[]},{"text":"impl Send for wasi_env_t","synthetic":true,"types":[]},{"text":"impl Send for wasi_version_t","synthetic":true,"types":[]}];
implementors["wasmer_cache"] = [{"text":"impl Send for FileSystemCache","synthetic":true,"types":[]},{"text":"impl Send for Hash","synthetic":true,"types":[]}];
implementors["wasmer_cli"] = [{"text":"impl Send for Cache","synthetic":true,"types":[]},{"text":"impl Send for Config","synthetic":true,"types":[]},{"text":"impl Send for Inspect","synthetic":true,"types":[]},{"text":"impl Send for Wasi","synthetic":true,"types":[]},{"text":"impl Send for Run","synthetic":true,"types":[]},{"text":"impl Send for SelfUpdate","synthetic":true,"types":[]},{"text":"impl Send for Validate","synthetic":true,"types":[]},{"text":"impl Send for Wast","synthetic":true,"types":[]},{"text":"impl Send for WasmFeatures","synthetic":true,"types":[]},{"text":"impl Send for PrettyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, D&gt; Send for Indented&lt;'a, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CType","synthetic":true,"types":[]},{"text":"impl Send for CStatement","synthetic":true,"types":[]},{"text":"impl Send for WasmerCLIOptions","synthetic":true,"types":[]},{"text":"impl Send for StoreOptions","synthetic":true,"types":[]},{"text":"impl Send for CompilerOptions","synthetic":true,"types":[]},{"text":"impl Send for CompilerType","synthetic":true,"types":[]},{"text":"impl Send for EngineType","synthetic":true,"types":[]}];
implementors["wasmer_compiler"] = [{"text":"impl Send for InstructionAddressMap","synthetic":true,"types":[]},{"text":"impl Send for FunctionAddressMap","synthetic":true,"types":[]},{"text":"impl Send for Symbol","synthetic":true,"types":[]},{"text":"impl Send for CompileError","synthetic":true,"types":[]},{"text":"impl Send for MiddlewareError","synthetic":true,"types":[]},{"text":"impl Send for WasmError","synthetic":true,"types":[]},{"text":"impl Send for ParseCpuFeatureError","synthetic":true,"types":[]},{"text":"impl Send for CompiledFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl Send for FunctionBody","synthetic":true,"types":[]},{"text":"impl Send for CompiledFunction","synthetic":true,"types":[]},{"text":"impl Send for Dwarf","synthetic":true,"types":[]},{"text":"impl Send for Compilation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for JumpTable","synthetic":true,"types":[]},{"text":"impl Send for CompileModuleInfo","synthetic":true,"types":[]},{"text":"impl Send for ArchivedCompileModuleInfo","synthetic":true,"types":[]},{"text":"impl Send for CompileModuleInfoResolver","synthetic":true,"types":[]},{"text":"impl Send for RelocationKind","synthetic":true,"types":[]},{"text":"impl Send for Relocation","synthetic":true,"types":[]},{"text":"impl Send for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Send for CpuFeature","synthetic":true,"types":[]},{"text":"impl Send for Target","synthetic":true,"types":[]},{"text":"impl Send for TrapInformation","synthetic":true,"types":[]},{"text":"impl Send for CompiledFunctionUnwindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for FunctionBodyData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for ModuleInfoTranslation&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Send for ModuleEnvironment&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for MiddlewareBinaryReader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MiddlewareReaderState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ModuleTranslationState","synthetic":true,"types":[]},{"text":"impl Send for SectionIndex","synthetic":true,"types":[]},{"text":"impl Send for CustomSectionProtection","synthetic":true,"types":[]},{"text":"impl Send for CustomSection","synthetic":true,"types":[]},{"text":"impl Send for SectionBody","synthetic":true,"types":[]},{"text":"impl Send for SourceLoc","synthetic":true,"types":[]}];
implementors["wasmer_compiler_cranelift"] = [{"text":"impl Send for CraneliftCompiler","synthetic":true,"types":[]},{"text":"impl Send for CraneliftOptLevel","synthetic":true,"types":[]},{"text":"impl Send for Cranelift","synthetic":true,"types":[]},{"text":"impl Send for ModuleInfoMemoryOffset","synthetic":true,"types":[]},{"text":"impl Send for ModuleInfoVmctxInfo","synthetic":true,"types":[]},{"text":"impl Send for WriterRelocate","synthetic":true,"types":[]},{"text":"impl&lt;'module_environment&gt; Send for FuncEnvironment&lt;'module_environment&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for RelocSink&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for TrapSink","synthetic":true,"types":[]},{"text":"impl Send for TrampolineRelocSink","synthetic":true,"types":[]},{"text":"impl Send for GlobalVariable","synthetic":true,"types":[]},{"text":"impl Send for ReturnMode","synthetic":true,"types":[]},{"text":"impl Send for ElseData","synthetic":true,"types":[]},{"text":"impl Send for ControlStackFrame","synthetic":true,"types":[]},{"text":"impl Send for ValueExtraInfo","synthetic":true,"types":[]},{"text":"impl Send for FuncTranslationState","synthetic":true,"types":[]},{"text":"impl Send for FuncTranslator","synthetic":true,"types":[]},{"text":"impl Send for CraneliftUnwindInfo","synthetic":true,"types":[]}];
implementors["wasmer_compiler_llvm"] = [{"text":"impl Send for Aarch64SystemV","synthetic":true,"types":[]},{"text":"impl Send for X86_64SystemV","synthetic":true,"types":[]},{"text":"impl Send for LLVMCompiler","synthetic":true,"types":[]},{"text":"impl Send for ShortNames","synthetic":true,"types":[]},{"text":"impl Send for CompiledKind","synthetic":true,"types":[]},{"text":"impl Send for LLVM","synthetic":true,"types":[]},{"text":"impl Send for ElfSectionIndex","synthetic":true,"types":[]},{"text":"impl Send for CompiledFunction","synthetic":true,"types":[]},{"text":"impl !Send for FuncTrampoline","synthetic":true,"types":[]},{"text":"impl !Send for FuncTranslator","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, 'a&gt; !Send for LLVMFunctionCodeGenerator&lt;'ctx, 'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; !Send for Intrinsics&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; !Send for MemoryCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; !Send for TableCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; !Send for GlobalCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; !Send for FunctionCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, 'a&gt; !Send for CtxType&lt;'ctx, 'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; !Send for ControlFrame&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl Send for IfElseState","synthetic":true,"types":[]},{"text":"impl Send for ExtraInfo","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; !Send for State&lt;'ctx&gt;","synthetic":true,"types":[]}];
implementors["wasmer_compiler_singlepass"] = [{"text":"impl&lt;'a&gt; Send for FuncGen&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SpecialLabelSet","synthetic":true,"types":[]},{"text":"impl Send for TrapTable","synthetic":true,"types":[]},{"text":"impl Send for FloatValue","synthetic":true,"types":[]},{"text":"impl Send for CanonicalizeType","synthetic":true,"types":[]},{"text":"impl Send for ControlFrame","synthetic":true,"types":[]},{"text":"impl Send for IfElseState","synthetic":true,"types":[]},{"text":"impl Send for CodegenError","synthetic":true,"types":[]},{"text":"impl Send for I2O1","synthetic":true,"types":[]},{"text":"impl Send for RegisterIndex","synthetic":true,"types":[]},{"text":"impl Send for WasmAbstractValue","synthetic":true,"types":[]},{"text":"impl Send for MachineState","synthetic":true,"types":[]},{"text":"impl Send for MachineStateDiff","synthetic":true,"types":[]},{"text":"impl Send for MachineValue","synthetic":true,"types":[]},{"text":"impl Send for FunctionStateMap","synthetic":true,"types":[]},{"text":"impl Send for SuspendOffset","synthetic":true,"types":[]},{"text":"impl Send for OffsetInfo","synthetic":true,"types":[]},{"text":"impl Send for SinglepassCompiler","synthetic":true,"types":[]},{"text":"impl Send for Singlepass","synthetic":true,"types":[]},{"text":"impl Send for Location","synthetic":true,"types":[]},{"text":"impl Send for Condition","synthetic":true,"types":[]},{"text":"impl Send for Size","synthetic":true,"types":[]},{"text":"impl Send for XMMOrMemory","synthetic":true,"types":[]},{"text":"impl Send for GPROrMemory","synthetic":true,"types":[]},{"text":"impl Send for MachineStackOffset","synthetic":true,"types":[]},{"text":"impl Send for Machine","synthetic":true,"types":[]},{"text":"impl Send for GPR","synthetic":true,"types":[]},{"text":"impl Send for XMM","synthetic":true,"types":[]},{"text":"impl Send for X64Register","synthetic":true,"types":[]},{"text":"impl Send for ArgumentRegisterAllocator","synthetic":true,"types":[]}];
implementors["wasmer_derive"] = [{"text":"impl !Send for WasmerAttr","synthetic":true,"types":[]},{"text":"impl !Send for ExportExpr","synthetic":true,"types":[]},{"text":"impl !Send for ExportOptions","synthetic":true,"types":[]},{"text":"impl !Send for WasmerAttrInner","synthetic":true,"types":[]}];
implementors["wasmer_emscripten"] = [{"text":"impl Send for EmAddrInfo","synthetic":true,"types":[]},{"text":"impl Send for EmSockAddr","synthetic":true,"types":[]},{"text":"impl Send for LongJumpRet","synthetic":true,"types":[]},{"text":"impl&lt;T, Ty&gt; Send for WasmPtr&lt;T, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for EmPollFd","synthetic":true,"types":[]},{"text":"impl Send for guest_tm","synthetic":true,"types":[]},{"text":"impl Send for GuestStat","synthetic":true,"types":[]},{"text":"impl Send for VarArgs","synthetic":true,"types":[]},{"text":"impl Send for EmEnv","synthetic":true,"types":[]},{"text":"impl Send for OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG","synthetic":true,"types":[]},{"text":"impl Send for EmscriptenData","synthetic":true,"types":[]},{"text":"impl Send for EmscriptenGlobalsData","synthetic":true,"types":[]},{"text":"impl Send for EmscriptenGlobals","synthetic":true,"types":[]},{"text":"impl Send for LibcDirWrapper","synthetic":false,"types":[]}];
implementors["wasmer_engine"] = [{"text":"impl Send for EngineId","synthetic":true,"types":[]},{"text":"impl Send for SerializeError","synthetic":true,"types":[]},{"text":"impl Send for DeserializeError","synthetic":true,"types":[]},{"text":"impl Send for ImportError","synthetic":true,"types":[]},{"text":"impl Send for LinkError","synthetic":true,"types":[]},{"text":"impl Send for InstantiationError","synthetic":true,"types":[]},{"text":"impl Send for Export","synthetic":true,"types":[]},{"text":"impl Send for ExportFunction","synthetic":true,"types":[]},{"text":"impl Send for ExportTable","synthetic":true,"types":[]},{"text":"impl Send for ExportMemory","synthetic":true,"types":[]},{"text":"impl Send for ExportGlobal","synthetic":true,"types":[]},{"text":"impl Send for NullResolver","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Send for NamedResolverChain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for UnprocessedFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl Send for SerializableFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl Send for FunctionFrameInfoVisitor","synthetic":true,"types":[]},{"text":"impl Send for RuntimeError","synthetic":true,"types":[]},{"text":"impl Send for RuntimeErrorSource","synthetic":true,"types":[]},{"text":"impl Send for RuntimeErrorInner","synthetic":true,"types":[]},{"text":"impl Send for FRAME_INFO","synthetic":true,"types":[]},{"text":"impl Send for GlobalFrameInfo","synthetic":true,"types":[]},{"text":"impl Send for GlobalFrameInfoRegistration","synthetic":true,"types":[]},{"text":"impl Send for ModuleInfoFrameInfo","synthetic":true,"types":[]},{"text":"impl Send for FunctionInfo","synthetic":true,"types":[]},{"text":"impl Send for FunctionExtent","synthetic":true,"types":[]},{"text":"impl Send for FrameInfo","synthetic":true,"types":[]},{"text":"impl Send for ExportFunctionMetadata","synthetic":false,"types":[]}];
implementors["wasmer_engine_dummy"] = [{"text":"impl Send for DummyArtifactMetadata","synthetic":true,"types":[]},{"text":"impl Send for DummyArtifact","synthetic":true,"types":[]},{"text":"impl Send for DummyEngine","synthetic":true,"types":[]}];
implementors["wasmer_engine_jit"] = [{"text":"impl Send for JITArtifact","synthetic":true,"types":[]},{"text":"impl !Send for JIT","synthetic":true,"types":[]},{"text":"impl Send for CodeMemory","synthetic":true,"types":[]},{"text":"impl Send for JITEngine","synthetic":true,"types":[]},{"text":"impl Send for JITEngineInner","synthetic":true,"types":[]},{"text":"impl Send for SerializableCompilation","synthetic":true,"types":[]},{"text":"impl Send for SerializableModule","synthetic":true,"types":[]},{"text":"impl Send for UnwindRegistry","synthetic":true,"types":[]}];
implementors["wasmer_engine_native"] = [{"text":"impl Send for NativeArtifact","synthetic":true,"types":[]},{"text":"impl !Send for Native","synthetic":true,"types":[]},{"text":"impl Send for NativeEngine","synthetic":true,"types":[]},{"text":"impl Send for Linker","synthetic":true,"types":[]},{"text":"impl Send for NativeEngineInner","synthetic":true,"types":[]},{"text":"impl Send for ModuleMetadata","synthetic":true,"types":[]},{"text":"impl Send for ArchivedModuleMetadata","synthetic":true,"types":[]},{"text":"impl Send for ModuleMetadataResolver","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ModuleMetadataSymbolRegistry&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wasmer_engine_object_file"] = [{"text":"impl Send for ObjectFileArtifact","synthetic":true,"types":[]},{"text":"impl !Send for ObjectFile","synthetic":true,"types":[]},{"text":"impl Send for ObjectFileEngine","synthetic":true,"types":[]},{"text":"impl Send for ObjectFileEngineInner","synthetic":true,"types":[]},{"text":"impl Send for ModuleMetadata","synthetic":true,"types":[]},{"text":"impl Send for ModuleMetadataSymbolRegistry","synthetic":true,"types":[]}];
implementors["wasmer_integration_tests_cli"] = [{"text":"impl Send for LinkCode","synthetic":true,"types":[]},{"text":"impl Send for Compiler","synthetic":true,"types":[]},{"text":"impl Send for Engine","synthetic":true,"types":[]}];
implementors["wasmer_middlewares"] = [{"text":"impl Send for MeteringGlobalIndexes","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for Metering&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Send for FunctionMetering&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Send for MeteringPoints","synthetic":true,"types":[]}];
implementors["wasmer_object"] = [{"text":"impl Send for ObjectError","synthetic":true,"types":[]}];
implementors["wasmer_vm"] = [{"text":"impl Send for VMExport","synthetic":true,"types":[]},{"text":"impl !Send for Inner","synthetic":true,"types":[]},{"text":"impl Send for GlobalError","synthetic":true,"types":[]},{"text":"impl !Send for Imports","synthetic":true,"types":[]},{"text":"impl !Send for InstanceAllocator","synthetic":true,"types":[]},{"text":"impl !Send for Instance","synthetic":true,"types":[]},{"text":"impl !Send for ImportFunctionEnv","synthetic":true,"types":[]},{"text":"impl Send for InstanceHandle","synthetic":true,"types":[]},{"text":"impl Send for MemoryError","synthetic":true,"types":[]},{"text":"impl Send for MemoryStyle","synthetic":true,"types":[]},{"text":"impl Send for ArchivedMemoryStyle","synthetic":true,"types":[]},{"text":"impl Send for MemoryStyleResolver","synthetic":true,"types":[]},{"text":"impl !Send for VMMemoryDefinitionOwnership","synthetic":true,"types":[]},{"text":"impl Send for WasmMmap","synthetic":true,"types":[]},{"text":"impl Send for Mmap","synthetic":true,"types":[]},{"text":"impl Send for ModuleId","synthetic":true,"types":[]},{"text":"impl Send for ArchivedModuleId","synthetic":true,"types":[]},{"text":"impl Send for ModuleIdResolver","synthetic":true,"types":[]},{"text":"impl Send for ModuleInfo","synthetic":true,"types":[]},{"text":"impl Send for ArchivableModuleInfo","synthetic":true,"types":[]},{"text":"impl Send for ArchivedArchivableModuleInfo","synthetic":true,"types":[]},{"text":"impl Send for ArchivableModuleInfoResolver","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for ExportsIterator&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Send for ImportsIterator&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for SignatureRegistry","synthetic":true,"types":[]},{"text":"impl Send for Inner","synthetic":true,"types":[]},{"text":"impl Send for TableStyle","synthetic":true,"types":[]},{"text":"impl Send for ArchivedTableStyle","synthetic":true,"types":[]},{"text":"impl Send for TableStyleResolver","synthetic":true,"types":[]},{"text":"impl !Send for TableElement","synthetic":true,"types":[]},{"text":"impl !Send for RawTableElement","synthetic":true,"types":[]},{"text":"impl !Send for VMTableDefinitionOwnership","synthetic":true,"types":[]},{"text":"impl Send for TrapCode","synthetic":true,"types":[]},{"text":"impl Send for Trap","synthetic":true,"types":[]},{"text":"impl !Send for CallThreadState","synthetic":true,"types":[]},{"text":"impl Send for UnwindReason","synthetic":true,"types":[]},{"text":"impl !Send for VMFunctionEnvironment","synthetic":true,"types":[]},{"text":"impl !Send for VMFunctionImport","synthetic":true,"types":[]},{"text":"impl Send for VMFunctionBody","synthetic":true,"types":[]},{"text":"impl Send for VMFunctionKind","synthetic":true,"types":[]},{"text":"impl !Send for VMTableImport","synthetic":true,"types":[]},{"text":"impl !Send for VMMemoryImport","synthetic":true,"types":[]},{"text":"impl !Send for VMTableDefinition","synthetic":true,"types":[]},{"text":"impl !Send for VMGlobalDefinitionStorage","synthetic":true,"types":[]},{"text":"impl !Send for VMGlobalDefinition","synthetic":true,"types":[]},{"text":"impl Send for VMSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl !Send for VMCallerCheckedAnyfunc","synthetic":true,"types":[]},{"text":"impl Send for VMBuiltinFunctionIndex","synthetic":true,"types":[]},{"text":"impl Send for VMBuiltinFunctionsArray","synthetic":true,"types":[]},{"text":"impl Send for VMContext","synthetic":true,"types":[]},{"text":"impl Send for VMOffsets","synthetic":true,"types":[]},{"text":"impl Send for TargetSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Send for LibCall","synthetic":true,"types":[]},{"text":"impl !Send for SectionBodyPtr","synthetic":true,"types":[]},{"text":"impl Send for VMExportFunction","synthetic":false,"types":[]},{"text":"impl Send for VMExportTable","synthetic":false,"types":[]},{"text":"impl Send for VMExportMemory","synthetic":false,"types":[]},{"text":"impl Send for VMExportGlobal","synthetic":false,"types":[]},{"text":"impl Send for FuncDataRegistry","synthetic":false,"types":[]},{"text":"impl Send for VMFuncRef","synthetic":false,"types":[]},{"text":"impl Send for Global","synthetic":false,"types":[]},{"text":"impl Send for InstanceRef","synthetic":false,"types":[]},{"text":"impl Send for LinearMemory","synthetic":false,"types":[]},{"text":"impl Send for LinearTable","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Sized + Send + Sync&gt; Send for VMDynamicFunctionContext&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for VMGlobalImport","synthetic":false,"types":[]},{"text":"impl Send for VMMemoryDefinition","synthetic":false,"types":[]},{"text":"impl Send for FunctionBodyPtr","synthetic":false,"types":[]}];
implementors["wasmer_wasi"] = [{"text":"impl&lt;T, Ty&gt; Send for WasmPtr&lt;T, Ty&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ty: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for WasiStateBuilder","synthetic":true,"types":[]},{"text":"impl Send for WasiStateCreationError","synthetic":true,"types":[]},{"text":"impl Send for PreopenDirBuilder","synthetic":true,"types":[]},{"text":"impl Send for PreopenedDir","synthetic":true,"types":[]},{"text":"impl Send for WasiFsError","synthetic":true,"types":[]},{"text":"impl Send for PollEvent","synthetic":true,"types":[]},{"text":"impl Send for PollEventBuilder","synthetic":true,"types":[]},{"text":"impl Send for PollEventIter","synthetic":true,"types":[]},{"text":"impl Send for HostFile","synthetic":true,"types":[]},{"text":"impl Send for Stdout","synthetic":true,"types":[]},{"text":"impl Send for Stderr","synthetic":true,"types":[]},{"text":"impl Send for Stdin","synthetic":true,"types":[]},{"text":"impl Send for Pipe","synthetic":true,"types":[]},{"text":"impl Send for InodeVal","synthetic":true,"types":[]},{"text":"impl Send for Kind","synthetic":true,"types":[]},{"text":"impl Send for Fd","synthetic":true,"types":[]},{"text":"impl Send for WasiFs","synthetic":true,"types":[]},{"text":"impl Send for WasiState","synthetic":true,"types":[]},{"text":"impl Send for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_subscription_u","synthetic":true,"types":[]},{"text":"impl Send for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_ciovec_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_dirent_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_event_fd_readwrite_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_event_u","synthetic":true,"types":[]},{"text":"impl Send for EventEnum","synthetic":true,"types":[]},{"text":"impl Send for __wasi_event_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_prestat_u_dir_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_prestat_u","synthetic":true,"types":[]},{"text":"impl Send for __wasi_prestat_t","synthetic":true,"types":[]},{"text":"impl Send for PrestatEnum","synthetic":true,"types":[]},{"text":"impl Send for __wasi_fdstat_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_iovec_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_subscription_fs_readwrite_t","synthetic":true,"types":[]},{"text":"impl Send for __wasi_subscription_u","synthetic":true,"types":[]},{"text":"impl Send for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl Send for EventType","synthetic":true,"types":[]},{"text":"impl Send for WasiSubscription","synthetic":true,"types":[]},{"text":"impl Send for SubscriptionEnum","synthetic":true,"types":[]},{"text":"impl Send for WasiVersion","synthetic":true,"types":[]},{"text":"impl Send for WasiError","synthetic":true,"types":[]},{"text":"impl Send for WasiEnv","synthetic":true,"types":[]}];
implementors["wasmer_wasi_experimental_io_devices"] = [{"text":"impl Send for InputEvent","synthetic":true,"types":[]},{"text":"impl Send for FrameBufferFileType","synthetic":true,"types":[]},{"text":"impl !Send for FrameBufferState","synthetic":true,"types":[]},{"text":"impl Send for FrameBuffer","synthetic":true,"types":[]}];
implementors["wasmer_wast"] = [{"text":"impl Send for DirectiveError","synthetic":true,"types":[]},{"text":"impl Send for DirectiveErrors","synthetic":true,"types":[]},{"text":"impl Send for wasi_test","synthetic":true,"types":[]},{"text":"impl Send for envs","synthetic":true,"types":[]},{"text":"impl Send for args","synthetic":true,"types":[]},{"text":"impl Send for preopens","synthetic":true,"types":[]},{"text":"impl Send for map_dirs","synthetic":true,"types":[]},{"text":"impl Send for temp_dirs","synthetic":true,"types":[]},{"text":"impl Send for assert_return","synthetic":true,"types":[]},{"text":"impl Send for stdin","synthetic":true,"types":[]},{"text":"impl Send for assert_stdout","synthetic":true,"types":[]},{"text":"impl Send for assert_stderr","synthetic":true,"types":[]},{"text":"impl Send for fake_i64_const","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for WasiTest&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Envs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Args&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Preopens&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MapDirs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for TempDirs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for AssertReturn","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Stdin&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AssertStdout&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for AssertStderr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for OutputCapturerer","synthetic":true,"types":[]},{"text":"impl !Send for Wast","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()