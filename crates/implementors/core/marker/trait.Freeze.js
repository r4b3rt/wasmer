(function() {var implementors = {};
implementors["test_generator"] = [{"text":"impl Freeze for Testsuite","synthetic":true,"types":[]},{"text":"impl Freeze for Test","synthetic":true,"types":[]}];
implementors["wasmer"] = [{"text":"impl Freeze for HostEnvInitError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LazyInit&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ExportError","synthetic":true,"types":[]},{"text":"impl Freeze for Exports","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Freeze for ExportsIterator&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for WithEnv","synthetic":true,"types":[]},{"text":"impl Freeze for WithoutEnv","synthetic":true,"types":[]},{"text":"impl&lt;Args, Rets&gt; Freeze for Function&lt;Args, Rets&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for S0","synthetic":true,"types":[]},{"text":"impl&lt;A1&gt; Freeze for S1&lt;A1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2&gt; Freeze for S2&lt;A1, A2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3&gt; Freeze for S3&lt;A1, A2, A3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4&gt; Freeze for S4&lt;A1, A2, A3, A4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5&gt; Freeze for S5&lt;A1, A2, A3, A4, A5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6&gt; Freeze for S6&lt;A1, A2, A3, A4, A5, A6&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7&gt; Freeze for S7&lt;A1, A2, A3, A4, A5, A6, A7&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8&gt; Freeze for S8&lt;A1, A2, A3, A4, A5, A6, A7, A8&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9&gt; Freeze for S9&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10&gt; Freeze for S10&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11&gt; Freeze for S11&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12&gt; Freeze for S12&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13&gt; Freeze for S13&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14&gt; Freeze for S14&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15&gt; Freeze for S15&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16&gt; Freeze for S16&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17&gt; Freeze for S17&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18&gt; Freeze for S18&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19&gt; Freeze for S19&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20&gt; Freeze for S20&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21&gt; Freeze for S21&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22&gt; Freeze for S22&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23&gt; Freeze for S23&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24&gt; Freeze for S24&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25&gt; Freeze for S25&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A25 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26&gt; Freeze for S26&lt;A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A1 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A10 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A11 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A12 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A13 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A14 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A15 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A16 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A17 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A18 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A19 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A2 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A20 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A21 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A22 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A23 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A24 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A25 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A26 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A3 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A4 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A5 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A6 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A7 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A8 as FromToNativeWasmType&gt;::Native: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A9 as FromToNativeWasmType&gt;::Native: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for WasmFunctionDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for HostFunctionDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for Function","synthetic":true,"types":[]},{"text":"impl Freeze for DynamicFunctionWithoutEnv","synthetic":true,"types":[]},{"text":"impl&lt;Env&gt; Freeze for DynamicFunctionWithEnv&lt;Env&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Global","synthetic":true,"types":[]},{"text":"impl Freeze for Memory","synthetic":true,"types":[]},{"text":"impl Freeze for Table","synthetic":true,"types":[]},{"text":"impl Freeze for Extern","synthetic":true,"types":[]},{"text":"impl Freeze for ImportObject","synthetic":true,"types":[]},{"text":"impl Freeze for ImportObjectIterator","synthetic":true,"types":[]},{"text":"impl Freeze for Instance","synthetic":true,"types":[]},{"text":"impl Freeze for InstantiationError","synthetic":true,"types":[]},{"text":"impl Freeze for IoCompileError","synthetic":true,"types":[]},{"text":"impl Freeze for Module","synthetic":true,"types":[]},{"text":"impl&lt;Args, Rets&gt; Freeze for NativeFunc&lt;Args, Rets&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Array","synthetic":true,"types":[]},{"text":"impl Freeze for Item","synthetic":true,"types":[]},{"text":"impl&lt;T, Ty&gt; Freeze for WasmPtr&lt;T, Ty&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Store","synthetic":true,"types":[]},{"text":"impl Freeze for BaseTunables","synthetic":true,"types":[]}];
implementors["wasmer_c_api"] = [{"text":"impl Freeze for wasmer_export_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_export_func_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_exports_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_export_descriptor_t","synthetic":true,"types":[]},{"text":"impl Freeze for NamedExportDescriptors","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_export_descriptors_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_export_value","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_export_kind","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_global_descriptor_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_global_t","synthetic":true,"types":[]},{"text":"impl Freeze for Version","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_wasi_map_dir_entry_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_object_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_func_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_descriptor_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_descriptors_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_import_object_iter_t","synthetic":true,"types":[]},{"text":"impl Freeze for NamedImportDescriptors","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_instance_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_instance_context_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_memory_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_module_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_serialized_module_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_table_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_value_tag","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_value","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_value_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_result_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_limits_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_limit_option_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_byte_array","synthetic":true,"types":[]},{"text":"impl Freeze for CApiError","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_compiler_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_engine_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_config_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_engine_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_func_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_global_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_memory_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_table_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_extern_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_extern_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_instance_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_module_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_store_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_trap_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_exporttype_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_exporttype_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_externkind_enum","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_externtype_t","synthetic":true,"types":[]},{"text":"impl Freeze for ExternTypeConversionError","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_frame_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_frame_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_functype_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_functype_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_globaltype_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_globaltype_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_importtype_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_importtype_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_memorytype_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_memorytype_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_limits_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_mutability_enum","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_tabletype_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_tabletype_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_valkind_enum","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_valtype_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_valtype_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_byte_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for owned_wasm_name_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_ref_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_features_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_metering_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_middleware_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_parser_operator_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_target_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_triple_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_cpu_features_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_named_extern_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasmer_named_extern_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_val_inner","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_val_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasm_val_vec_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasi_config_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasi_env_t","synthetic":true,"types":[]},{"text":"impl Freeze for wasi_version_t","synthetic":true,"types":[]}];
implementors["wasmer_cache"] = [{"text":"impl Freeze for FileSystemCache","synthetic":true,"types":[]},{"text":"impl Freeze for Hash","synthetic":true,"types":[]}];
implementors["wasmer_cli"] = [{"text":"impl Freeze for Cache","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Inspect","synthetic":true,"types":[]},{"text":"impl Freeze for Wasi","synthetic":true,"types":[]},{"text":"impl Freeze for Run","synthetic":true,"types":[]},{"text":"impl Freeze for SelfUpdate","synthetic":true,"types":[]},{"text":"impl Freeze for Validate","synthetic":true,"types":[]},{"text":"impl Freeze for Wast","synthetic":true,"types":[]},{"text":"impl Freeze for WasmFeatures","synthetic":true,"types":[]},{"text":"impl Freeze for PrettyError","synthetic":true,"types":[]},{"text":"impl&lt;'a, D&gt; Freeze for Indented&lt;'a, D&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CType","synthetic":true,"types":[]},{"text":"impl Freeze for CStatement","synthetic":true,"types":[]},{"text":"impl Freeze for WasmerCLIOptions","synthetic":true,"types":[]},{"text":"impl Freeze for StoreOptions","synthetic":true,"types":[]},{"text":"impl Freeze for CompilerOptions","synthetic":true,"types":[]},{"text":"impl Freeze for CompilerType","synthetic":true,"types":[]},{"text":"impl Freeze for EngineType","synthetic":true,"types":[]}];
implementors["wasmer_compiler"] = [{"text":"impl Freeze for InstructionAddressMap","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionAddressMap","synthetic":true,"types":[]},{"text":"impl Freeze for Symbol","synthetic":true,"types":[]},{"text":"impl Freeze for CompileError","synthetic":true,"types":[]},{"text":"impl Freeze for MiddlewareError","synthetic":true,"types":[]},{"text":"impl Freeze for WasmError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseCpuFeatureError","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBody","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledFunction","synthetic":true,"types":[]},{"text":"impl Freeze for Dwarf","synthetic":true,"types":[]},{"text":"impl Freeze for Compilation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for JumpTable","synthetic":true,"types":[]},{"text":"impl Freeze for CompileModuleInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedCompileModuleInfo","synthetic":true,"types":[]},{"text":"impl Freeze for CompileModuleInfoResolver","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationKind","synthetic":true,"types":[]},{"text":"impl Freeze for Relocation","synthetic":true,"types":[]},{"text":"impl Freeze for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Freeze for CpuFeature","synthetic":true,"types":[]},{"text":"impl Freeze for Target","synthetic":true,"types":[]},{"text":"impl Freeze for TrapInformation","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledFunctionUnwindInfo","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FunctionBodyData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ModuleInfoTranslation&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for ModuleEnvironment&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MiddlewareBinaryReader&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MiddlewareReaderState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleTranslationState","synthetic":true,"types":[]},{"text":"impl Freeze for SectionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for CustomSectionProtection","synthetic":true,"types":[]},{"text":"impl Freeze for CustomSection","synthetic":true,"types":[]},{"text":"impl Freeze for SectionBody","synthetic":true,"types":[]},{"text":"impl Freeze for SourceLoc","synthetic":true,"types":[]}];
implementors["wasmer_compiler_cranelift"] = [{"text":"impl Freeze for CraneliftCompiler","synthetic":true,"types":[]},{"text":"impl Freeze for CraneliftOptLevel","synthetic":true,"types":[]},{"text":"impl Freeze for Cranelift","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleInfoMemoryOffset","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleInfoVmctxInfo","synthetic":true,"types":[]},{"text":"impl Freeze for WriterRelocate","synthetic":true,"types":[]},{"text":"impl&lt;'module_environment&gt; Freeze for FuncEnvironment&lt;'module_environment&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RelocSink&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TrapSink","synthetic":true,"types":[]},{"text":"impl Freeze for TrampolineRelocSink","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalVariable","synthetic":true,"types":[]},{"text":"impl Freeze for ReturnMode","synthetic":true,"types":[]},{"text":"impl Freeze for ElseData","synthetic":true,"types":[]},{"text":"impl Freeze for ControlStackFrame","synthetic":true,"types":[]},{"text":"impl Freeze for ValueExtraInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FuncTranslationState","synthetic":true,"types":[]},{"text":"impl Freeze for FuncTranslator","synthetic":true,"types":[]},{"text":"impl Freeze for CraneliftUnwindInfo","synthetic":true,"types":[]}];
implementors["wasmer_compiler_llvm"] = [{"text":"impl Freeze for Aarch64SystemV","synthetic":true,"types":[]},{"text":"impl Freeze for X86_64SystemV","synthetic":true,"types":[]},{"text":"impl Freeze for LLVMCompiler","synthetic":true,"types":[]},{"text":"impl Freeze for ShortNames","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledKind","synthetic":true,"types":[]},{"text":"impl Freeze for LLVM","synthetic":true,"types":[]},{"text":"impl Freeze for ElfSectionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledFunction","synthetic":true,"types":[]},{"text":"impl Freeze for FuncTrampoline","synthetic":true,"types":[]},{"text":"impl Freeze for FuncTranslator","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, 'a&gt; Freeze for LLVMFunctionCodeGenerator&lt;'ctx, 'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for Intrinsics&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for MemoryCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for TableCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for GlobalCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for FunctionCache&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, 'a&gt; Freeze for CtxType&lt;'ctx, 'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for ControlFrame&lt;'ctx&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for IfElseState","synthetic":true,"types":[]},{"text":"impl Freeze for ExtraInfo","synthetic":true,"types":[]},{"text":"impl&lt;'ctx&gt; Freeze for State&lt;'ctx&gt;","synthetic":true,"types":[]}];
implementors["wasmer_compiler_singlepass"] = [{"text":"impl&lt;'a&gt; Freeze for FuncGen&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SpecialLabelSet","synthetic":true,"types":[]},{"text":"impl Freeze for TrapTable","synthetic":true,"types":[]},{"text":"impl Freeze for FloatValue","synthetic":true,"types":[]},{"text":"impl Freeze for CanonicalizeType","synthetic":true,"types":[]},{"text":"impl Freeze for ControlFrame","synthetic":true,"types":[]},{"text":"impl Freeze for IfElseState","synthetic":true,"types":[]},{"text":"impl Freeze for CodegenError","synthetic":true,"types":[]},{"text":"impl Freeze for I2O1","synthetic":true,"types":[]},{"text":"impl Freeze for RegisterIndex","synthetic":true,"types":[]},{"text":"impl Freeze for WasmAbstractValue","synthetic":true,"types":[]},{"text":"impl Freeze for MachineState","synthetic":true,"types":[]},{"text":"impl Freeze for MachineStateDiff","synthetic":true,"types":[]},{"text":"impl Freeze for MachineValue","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionStateMap","synthetic":true,"types":[]},{"text":"impl Freeze for SuspendOffset","synthetic":true,"types":[]},{"text":"impl Freeze for OffsetInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SinglepassCompiler","synthetic":true,"types":[]},{"text":"impl Freeze for Singlepass","synthetic":true,"types":[]},{"text":"impl Freeze for Location","synthetic":true,"types":[]},{"text":"impl Freeze for Condition","synthetic":true,"types":[]},{"text":"impl Freeze for Size","synthetic":true,"types":[]},{"text":"impl Freeze for XMMOrMemory","synthetic":true,"types":[]},{"text":"impl Freeze for GPROrMemory","synthetic":true,"types":[]},{"text":"impl Freeze for MachineStackOffset","synthetic":true,"types":[]},{"text":"impl Freeze for Machine","synthetic":true,"types":[]},{"text":"impl Freeze for GPR","synthetic":true,"types":[]},{"text":"impl Freeze for XMM","synthetic":true,"types":[]},{"text":"impl Freeze for X64Register","synthetic":true,"types":[]},{"text":"impl Freeze for ArgumentRegisterAllocator","synthetic":true,"types":[]}];
implementors["wasmer_derive"] = [{"text":"impl Freeze for WasmerAttr","synthetic":true,"types":[]},{"text":"impl Freeze for ExportExpr","synthetic":true,"types":[]},{"text":"impl Freeze for ExportOptions","synthetic":true,"types":[]},{"text":"impl Freeze for WasmerAttrInner","synthetic":true,"types":[]}];
implementors["wasmer_emscripten"] = [{"text":"impl Freeze for EmAddrInfo","synthetic":true,"types":[]},{"text":"impl Freeze for EmSockAddr","synthetic":true,"types":[]},{"text":"impl Freeze for LongJumpRet","synthetic":true,"types":[]},{"text":"impl&lt;T, Ty&gt; Freeze for WasmPtr&lt;T, Ty&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EmPollFd","synthetic":true,"types":[]},{"text":"impl Freeze for guest_tm","synthetic":true,"types":[]},{"text":"impl Freeze for GuestStat","synthetic":true,"types":[]},{"text":"impl Freeze for VarArgs","synthetic":true,"types":[]},{"text":"impl Freeze for EmEnv","synthetic":true,"types":[]},{"text":"impl Freeze for LibcDirWrapper","synthetic":true,"types":[]},{"text":"impl Freeze for OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG","synthetic":true,"types":[]},{"text":"impl Freeze for EmscriptenData","synthetic":true,"types":[]},{"text":"impl Freeze for EmscriptenGlobalsData","synthetic":true,"types":[]},{"text":"impl Freeze for EmscriptenGlobals","synthetic":true,"types":[]}];
implementors["wasmer_engine"] = [{"text":"impl Freeze for EngineId","synthetic":true,"types":[]},{"text":"impl Freeze for SerializeError","synthetic":true,"types":[]},{"text":"impl Freeze for DeserializeError","synthetic":true,"types":[]},{"text":"impl Freeze for ImportError","synthetic":true,"types":[]},{"text":"impl Freeze for LinkError","synthetic":true,"types":[]},{"text":"impl Freeze for InstantiationError","synthetic":true,"types":[]},{"text":"impl Freeze for Export","synthetic":true,"types":[]},{"text":"impl Freeze for ExportFunctionMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for ExportFunction","synthetic":true,"types":[]},{"text":"impl Freeze for ExportTable","synthetic":true,"types":[]},{"text":"impl Freeze for ExportMemory","synthetic":true,"types":[]},{"text":"impl Freeze for ExportGlobal","synthetic":true,"types":[]},{"text":"impl Freeze for NullResolver","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Freeze for NamedResolverChain&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for UnprocessedFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl Freeze for SerializableFunctionFrameInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionFrameInfoVisitor","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeError","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeErrorSource","synthetic":true,"types":[]},{"text":"impl Freeze for RuntimeErrorInner","synthetic":true,"types":[]},{"text":"impl Freeze for FRAME_INFO","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalFrameInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalFrameInfoRegistration","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleInfoFrameInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionInfo","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionExtent","synthetic":true,"types":[]},{"text":"impl Freeze for FrameInfo","synthetic":true,"types":[]}];
implementors["wasmer_engine_dummy"] = [{"text":"impl Freeze for DummyArtifactMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for DummyArtifact","synthetic":true,"types":[]},{"text":"impl Freeze for DummyEngine","synthetic":true,"types":[]}];
implementors["wasmer_engine_jit"] = [{"text":"impl !Freeze for JITArtifact","synthetic":true,"types":[]},{"text":"impl Freeze for JIT","synthetic":true,"types":[]},{"text":"impl Freeze for CodeMemory","synthetic":true,"types":[]},{"text":"impl Freeze for JITEngine","synthetic":true,"types":[]},{"text":"impl !Freeze for JITEngineInner","synthetic":true,"types":[]},{"text":"impl Freeze for SerializableCompilation","synthetic":true,"types":[]},{"text":"impl Freeze for SerializableModule","synthetic":true,"types":[]},{"text":"impl Freeze for UnwindRegistry","synthetic":true,"types":[]}];
implementors["wasmer_engine_native"] = [{"text":"impl Freeze for NativeArtifact","synthetic":true,"types":[]},{"text":"impl Freeze for Native","synthetic":true,"types":[]},{"text":"impl Freeze for NativeEngine","synthetic":true,"types":[]},{"text":"impl Freeze for Linker","synthetic":true,"types":[]},{"text":"impl !Freeze for NativeEngineInner","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedModuleMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleMetadataResolver","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ModuleMetadataSymbolRegistry&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["wasmer_engine_object_file"] = [{"text":"impl Freeze for ObjectFileArtifact","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectFile","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectFileEngine","synthetic":true,"types":[]},{"text":"impl !Freeze for ObjectFileEngineInner","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleMetadataSymbolRegistry","synthetic":true,"types":[]}];
implementors["wasmer_integration_tests_cli"] = [{"text":"impl Freeze for LinkCode","synthetic":true,"types":[]},{"text":"impl Freeze for Compiler","synthetic":true,"types":[]},{"text":"impl Freeze for Engine","synthetic":true,"types":[]}];
implementors["wasmer_middlewares"] = [{"text":"impl Freeze for MeteringGlobalIndexes","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; !Freeze for Metering&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for FunctionMetering&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MeteringPoints","synthetic":true,"types":[]}];
implementors["wasmer_object"] = [{"text":"impl Freeze for ObjectError","synthetic":true,"types":[]}];
implementors["wasmer_types"] = [{"text":"impl&lt;K, V&gt; Freeze for ArchivedPrimaryMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for ArchivableIndexMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; !Freeze for ArchivedArchivableIndexMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; !Freeze for ArchivableIndexMapResolver&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for VMExternRef","synthetic":true,"types":[]},{"text":"impl !Freeze for VMExternRefInner","synthetic":true,"types":[]},{"text":"impl Freeze for ExternRef","synthetic":true,"types":[]},{"text":"impl Freeze for Features","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedFeatures","synthetic":true,"types":[]},{"text":"impl Freeze for FeaturesResolver","synthetic":true,"types":[]},{"text":"impl Freeze for LocalFunctionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedLocalFunctionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for LocalFunctionIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for LocalTableIndex","synthetic":true,"types":[]},{"text":"impl Freeze for LocalMemoryIndex","synthetic":true,"types":[]},{"text":"impl Freeze for LocalGlobalIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedLocalGlobalIndex","synthetic":true,"types":[]},{"text":"impl Freeze for LocalGlobalIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedFunctionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for TableIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedTableIndex","synthetic":true,"types":[]},{"text":"impl Freeze for TableIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedGlobalIndex","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedMemoryIndex","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for DataIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedDataIndex","synthetic":true,"types":[]},{"text":"impl Freeze for DataIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for ElemIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedElemIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ElemIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for CustomSectionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedCustomSectionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for CustomSectionIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for ExportIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedExportIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ExportIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for ImportIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedImportIndex","synthetic":true,"types":[]},{"text":"impl Freeze for ImportIndexResolver","synthetic":true,"types":[]},{"text":"impl Freeze for TableInitializer","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedTableInitializer","synthetic":true,"types":[]},{"text":"impl Freeze for TableInitializerResolver","synthetic":true,"types":[]},{"text":"impl Freeze for DataInitializerLocation","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedDataInitializerLocation","synthetic":true,"types":[]},{"text":"impl Freeze for DataInitializerLocationResolver","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Freeze for DataInitializer&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedDataInitializer","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedOwnedDataInitializer","synthetic":true,"types":[]},{"text":"impl Freeze for OwnedDataInitializerResolver","synthetic":true,"types":[]},{"text":"impl Freeze for Atomically","synthetic":true,"types":[]},{"text":"impl Freeze for NonAtomically","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, A&gt; Freeze for MemoryView&lt;'a, T, A&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Type","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedType","synthetic":true,"types":[]},{"text":"impl Freeze for TypeResolver","synthetic":true,"types":[]},{"text":"impl Freeze for V128","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedV128","synthetic":true,"types":[]},{"text":"impl Freeze for V128Resolver","synthetic":true,"types":[]},{"text":"impl Freeze for ExternType","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionType","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedFunctionType","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionTypeResolver","synthetic":true,"types":[]},{"text":"impl Freeze for Mutability","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedMutability","synthetic":true,"types":[]},{"text":"impl Freeze for MutabilityResolver","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalType","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedGlobalType","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalTypeResolver","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalInit","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedGlobalInit","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalInitResolver","synthetic":true,"types":[]},{"text":"impl Freeze for TableType","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedTableType","synthetic":true,"types":[]},{"text":"impl Freeze for TableTypeResolver","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryType","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedMemoryType","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryTypeResolver","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ImportType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for ExportType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Pages","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedPages","synthetic":true,"types":[]},{"text":"impl Freeze for PagesResolver","synthetic":true,"types":[]},{"text":"impl Freeze for Bytes","synthetic":true,"types":[]},{"text":"impl Freeze for PageCountOutOfRange","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Value&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PackedOption&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for BoxedSlice&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for Keys&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for PrimaryMap&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for SecondaryMap&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wasmer_vm"] = [{"text":"impl Freeze for VMExport","synthetic":true,"types":[]},{"text":"impl Freeze for VMExportFunction","synthetic":true,"types":[]},{"text":"impl Freeze for VMExportTable","synthetic":true,"types":[]},{"text":"impl Freeze for VMExportMemory","synthetic":true,"types":[]},{"text":"impl Freeze for VMExportGlobal","synthetic":true,"types":[]},{"text":"impl !Freeze for FuncDataRegistry","synthetic":true,"types":[]},{"text":"impl Freeze for VMFuncRef","synthetic":true,"types":[]},{"text":"impl Freeze for Inner","synthetic":true,"types":[]},{"text":"impl !Freeze for Global","synthetic":true,"types":[]},{"text":"impl Freeze for GlobalError","synthetic":true,"types":[]},{"text":"impl Freeze for Imports","synthetic":true,"types":[]},{"text":"impl Freeze for InstanceAllocator","synthetic":true,"types":[]},{"text":"impl Freeze for InstanceRef","synthetic":true,"types":[]},{"text":"impl !Freeze for Instance","synthetic":true,"types":[]},{"text":"impl Freeze for ImportFunctionEnv","synthetic":true,"types":[]},{"text":"impl Freeze for InstanceHandle","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryError","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryStyle","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedMemoryStyle","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryStyleResolver","synthetic":true,"types":[]},{"text":"impl !Freeze for LinearMemory","synthetic":true,"types":[]},{"text":"impl Freeze for VMMemoryDefinitionOwnership","synthetic":true,"types":[]},{"text":"impl Freeze for WasmMmap","synthetic":true,"types":[]},{"text":"impl Freeze for Mmap","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleId","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedModuleId","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleIdResolver","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivableModuleInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedArchivableModuleInfo","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivableModuleInfoResolver","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for ExportsIterator&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Freeze for ImportsIterator&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for SignatureRegistry","synthetic":true,"types":[]},{"text":"impl Freeze for Inner","synthetic":true,"types":[]},{"text":"impl Freeze for TableStyle","synthetic":true,"types":[]},{"text":"impl Freeze for ArchivedTableStyle","synthetic":true,"types":[]},{"text":"impl Freeze for TableStyleResolver","synthetic":true,"types":[]},{"text":"impl Freeze for TableElement","synthetic":true,"types":[]},{"text":"impl Freeze for RawTableElement","synthetic":true,"types":[]},{"text":"impl !Freeze for LinearTable","synthetic":true,"types":[]},{"text":"impl Freeze for VMTableDefinitionOwnership","synthetic":true,"types":[]},{"text":"impl Freeze for TrapCode","synthetic":true,"types":[]},{"text":"impl Freeze for Trap","synthetic":true,"types":[]},{"text":"impl !Freeze for CallThreadState","synthetic":true,"types":[]},{"text":"impl Freeze for UnwindReason","synthetic":true,"types":[]},{"text":"impl Freeze for VMFunctionEnvironment","synthetic":true,"types":[]},{"text":"impl Freeze for VMFunctionImport","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for VMDynamicFunctionContext&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for VMFunctionBody","synthetic":true,"types":[]},{"text":"impl Freeze for VMFunctionKind","synthetic":true,"types":[]},{"text":"impl Freeze for VMTableImport","synthetic":true,"types":[]},{"text":"impl Freeze for VMMemoryImport","synthetic":true,"types":[]},{"text":"impl Freeze for VMGlobalImport","synthetic":true,"types":[]},{"text":"impl Freeze for VMMemoryDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for VMTableDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for VMGlobalDefinitionStorage","synthetic":true,"types":[]},{"text":"impl Freeze for VMGlobalDefinition","synthetic":true,"types":[]},{"text":"impl Freeze for VMSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for VMCallerCheckedAnyfunc","synthetic":true,"types":[]},{"text":"impl Freeze for VMBuiltinFunctionIndex","synthetic":true,"types":[]},{"text":"impl Freeze for VMBuiltinFunctionsArray","synthetic":true,"types":[]},{"text":"impl Freeze for VMContext","synthetic":true,"types":[]},{"text":"impl Freeze for VMOffsets","synthetic":true,"types":[]},{"text":"impl Freeze for TargetSharedSignatureIndex","synthetic":true,"types":[]},{"text":"impl Freeze for LibCall","synthetic":true,"types":[]},{"text":"impl Freeze for FunctionBodyPtr","synthetic":true,"types":[]},{"text":"impl Freeze for SectionBodyPtr","synthetic":true,"types":[]}];
implementors["wasmer_wasi"] = [{"text":"impl&lt;T, Ty&gt; Freeze for WasmPtr&lt;T, Ty&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for WasiStateBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for WasiStateCreationError","synthetic":true,"types":[]},{"text":"impl Freeze for PreopenDirBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for PreopenedDir","synthetic":true,"types":[]},{"text":"impl Freeze for WasiFsError","synthetic":true,"types":[]},{"text":"impl Freeze for PollEvent","synthetic":true,"types":[]},{"text":"impl Freeze for PollEventBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for PollEventIter","synthetic":true,"types":[]},{"text":"impl Freeze for HostFile","synthetic":true,"types":[]},{"text":"impl Freeze for Stdout","synthetic":true,"types":[]},{"text":"impl Freeze for Stderr","synthetic":true,"types":[]},{"text":"impl Freeze for Stdin","synthetic":true,"types":[]},{"text":"impl Freeze for Pipe","synthetic":true,"types":[]},{"text":"impl Freeze for InodeVal","synthetic":true,"types":[]},{"text":"impl Freeze for Kind","synthetic":true,"types":[]},{"text":"impl Freeze for Fd","synthetic":true,"types":[]},{"text":"impl !Freeze for WasiFs","synthetic":true,"types":[]},{"text":"impl !Freeze for WasiState","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_u","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_ciovec_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_dirent_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_event_fd_readwrite_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_event_u","synthetic":true,"types":[]},{"text":"impl Freeze for EventEnum","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_event_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_prestat_u_dir_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_prestat_u","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_prestat_t","synthetic":true,"types":[]},{"text":"impl Freeze for PrestatEnum","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_fdstat_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_filestat_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_iovec_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_clock_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_fs_readwrite_t","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_u","synthetic":true,"types":[]},{"text":"impl Freeze for __wasi_subscription_t","synthetic":true,"types":[]},{"text":"impl Freeze for EventType","synthetic":true,"types":[]},{"text":"impl Freeze for WasiSubscription","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriptionEnum","synthetic":true,"types":[]},{"text":"impl Freeze for WasiVersion","synthetic":true,"types":[]},{"text":"impl Freeze for WasiError","synthetic":true,"types":[]},{"text":"impl Freeze for WasiEnv","synthetic":true,"types":[]}];
implementors["wasmer_wasi_experimental_io_devices"] = [{"text":"impl Freeze for InputEvent","synthetic":true,"types":[]},{"text":"impl Freeze for FrameBufferFileType","synthetic":true,"types":[]},{"text":"impl !Freeze for FrameBufferState","synthetic":true,"types":[]},{"text":"impl Freeze for FrameBuffer","synthetic":true,"types":[]}];
implementors["wasmer_wast"] = [{"text":"impl Freeze for DirectiveError","synthetic":true,"types":[]},{"text":"impl Freeze for DirectiveErrors","synthetic":true,"types":[]},{"text":"impl Freeze for wasi_test","synthetic":true,"types":[]},{"text":"impl Freeze for envs","synthetic":true,"types":[]},{"text":"impl Freeze for args","synthetic":true,"types":[]},{"text":"impl Freeze for preopens","synthetic":true,"types":[]},{"text":"impl Freeze for map_dirs","synthetic":true,"types":[]},{"text":"impl Freeze for temp_dirs","synthetic":true,"types":[]},{"text":"impl Freeze for assert_return","synthetic":true,"types":[]},{"text":"impl Freeze for stdin","synthetic":true,"types":[]},{"text":"impl Freeze for assert_stdout","synthetic":true,"types":[]},{"text":"impl Freeze for assert_stderr","synthetic":true,"types":[]},{"text":"impl Freeze for fake_i64_const","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WasiTest&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Envs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Args&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Preopens&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MapDirs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for TempDirs&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AssertReturn","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Stdin&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AssertStdout&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for AssertStderr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OutputCapturerer","synthetic":true,"types":[]},{"text":"impl Freeze for Wast","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()