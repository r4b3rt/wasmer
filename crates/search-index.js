var searchIndex = JSON.parse('{\
"test_generator":{"doc":"Build library to generate a program which runs all the…","i":[[3,"Testsuite","test_generator","",null,null],[12,"buffer","","",0,null],[12,"path","","",0,null],[12,"ignores","","",0,null],[3,"Test","","",null,null],[12,"name","","",1,null],[12,"body","","",1,null],[5,"emscripten_processor","","Given a Testsuite and a path, process the path in case is…",null,[[["testsuite",3],["pathbuf",3]],[["test",3],["option",4]]]],[5,"wasi_processor","","Given a Testsuite and a path, process the path in case is…",null,[[["testsuite",3],["pathbuf",3]],[["test",3],["option",4]]]],[5,"wast_processor","","Given a Testsuite and a path, process the path in case is…",null,[[["testsuite",3],["pathbuf",3]],[["test",3],["option",4]]]],[5,"build_ignores_from_textfile","","Generates an Ignores struct from a text file",null,[[["pathbuf",3]],[["ignores",6],["result",6]]]],[5,"test_directory_module","","",null,[[["testsuite",3],["processortype",6]],["result",6]]],[5,"write_test","","",null,[[["testsuite",3]],["result",6]]],[5,"test_directory","","",null,[[["testsuite",3],["processortype",6]],["result",6]]],[5,"extract_name","","Extract a valid Rust identifier from the stem of a path.",null,[[],["string",3]]],[5,"with_test_module","","",null,[[["testsuite",3]],["result",6]]],[5,"with_features","","",null,[[["testsuite",3]],["result",6]]],[0,"processors","","Here we define the processors usable for each test genrator",null,null],[5,"wast_processor","test_generator::processors","Given a Testsuite and a path, process the path in case is…",null,[[["testsuite",3],["pathbuf",3]],[["test",3],["option",4]]]],[5,"emscripten_processor","","Given a Testsuite and a path, process the path in case is…",null,[[["testsuite",3],["pathbuf",3]],[["test",3],["option",4]]]],[5,"wasi_processor","","Given a Testsuite and a path, process the path in case is…",null,[[["testsuite",3],["pathbuf",3]],[["test",3],["option",4]]]],[6,"Ignores","test_generator","",null,null],[6,"ProcessorType","","",null,null],[11,"ignore_current","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"cmp","","",1,[[["test",3]],["ordering",4]]],[11,"eq","","",1,[[["test",3]]]],[11,"ne","","",1,[[["test",3]]]],[11,"partial_cmp","","",1,[[["test",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["test",3]]]],[11,"le","","",1,[[["test",3]]]],[11,"gt","","",1,[[["test",3]]]],[11,"ge","","",1,[[["test",3]]]]],"p":[[3,"Testsuite"],[3,"Test"]]},\
"wasmer":{"doc":"This crate contains the `wasmer` API. The `wasmer` API…","i":[[24,"WasmerEnv","wasmer","Implement [`WasmerEnv`] for your type with…",null,null],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",0,null],[12,"ty","","",0,null],[4,"ExternRef","","Represents an opaque reference to any data within…",null,null],[13,"Null","","A reference to no data.",1,null],[13,"Ref","","A reference to data stored internally.",1,null],[13,"Other","","A reference to data located outside.",1,null],[4,"ExternType","","A list of all possible types which can be externally…",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",2,null],[13,"Global","","This external type is the type of a WebAssembly global.",2,null],[13,"Table","","This external type is the type of a WebAssembly table.",2,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",2,null],[3,"FunctionType","","The signature of a function that is either implemented in…",null,null],[12,"params","","The parameters of the function",3,null],[12,"results","","The return values of the function",3,null],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",4,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",4,null],[8,"HostInfo","","",null,null],[11,"finalize","","",5,[[]]],[3,"HostRef","","Represents a piece of data located in the host environment.",null,null],[12,"0","","",6,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",7,null],[12,"name","","",7,null],[12,"ty","","",7,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",8,null],[12,"maximum","","The maximum number of pages in the memory.",8,null],[12,"shared","","Whether the memory may be shared between multiple threads.",8,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",9,null],[13,"Var","","The value of the global can change over time",9,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",10,null],[12,"minimum","","The minimum number of elements in the table.",10,null],[12,"maximum","","The maximum number of elements in the table.",10,null],[4,"ValType","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",11,null],[13,"I64","","Signed 64 bit integer.",11,null],[13,"F32","","Floating point 32 bit integer.",11,null],[13,"F64","","Floating point 64 bit integer.",11,null],[13,"V128","","A 128 bit number.",11,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",11,null],[13,"FuncRef","","A reference to a Wasm function.",11,null],[4,"Type","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",11,null],[13,"I64","","Signed 64 bit integer.",11,null],[13,"F32","","Floating point 32 bit integer.",11,null],[13,"F64","","Floating point 64 bit integer.",11,null],[13,"V128","","A 128 bit number.",11,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",11,null],[13,"FuncRef","","A reference to a Wasm function.",11,null],[4,"Architecture","","The \\\"architecture\\\" field, which in some cases also…",null,null],[13,"Unknown","","",12,null],[13,"Arm","","",12,null],[13,"AmdGcn","","",12,null],[13,"Aarch64","","",12,null],[13,"Asmjs","","",12,null],[13,"Avr","","",12,null],[13,"Hexagon","","",12,null],[13,"X86_32","","",12,null],[13,"Mips32","","",12,null],[13,"Mips64","","",12,null],[13,"Msp430","","",12,null],[13,"Nvptx64","","",12,null],[13,"Powerpc","","",12,null],[13,"Powerpc64","","",12,null],[13,"Powerpc64le","","",12,null],[13,"Riscv32","","",12,null],[13,"Riscv64","","",12,null],[13,"S390x","","",12,null],[13,"Sparc","","",12,null],[13,"Sparc64","","",12,null],[13,"Sparcv9","","",12,null],[13,"Wasm32","","",12,null],[13,"Wasm64","","",12,null],[13,"X86_64","","",12,null],[4,"CallingConvention","","The calling convention, which specifies things like which…",null,null],[13,"SystemV","","\\\"System V\\\", which is used on most Unix-like platfoms. Note…",13,null],[13,"WasmBasicCAbi","","The WebAssembly C ABI.…",13,null],[13,"WindowsFastcall","","\\\"Windows Fastcall\\\", which is used on Windows. Note that…",13,null],[4,"OperatingSystem","","The \\\"operating system\\\" field, which sometimes implies an…",null,null],[13,"Unknown","","",14,null],[13,"AmdHsa","","",14,null],[13,"Bitrig","","",14,null],[13,"Cloudabi","","",14,null],[13,"Cuda","","",14,null],[13,"Darwin","","",14,null],[13,"Dragonfly","","",14,null],[13,"Emscripten","","",14,null],[13,"Freebsd","","",14,null],[13,"Fuchsia","","",14,null],[13,"Haiku","","",14,null],[13,"Hermit","","",14,null],[13,"Illumos","","",14,null],[13,"Ios","","",14,null],[13,"L4re","","",14,null],[13,"Linux","","",14,null],[13,"MacOSX","","",14,null],[12,"major","wasmer::OperatingSystem","",15,null],[12,"minor","","",15,null],[12,"patch","","",15,null],[13,"Nebulet","wasmer","",14,null],[13,"Netbsd","","",14,null],[13,"None_","","",14,null],[13,"Openbsd","","",14,null],[13,"Psp","","",14,null],[13,"Redox","","",14,null],[13,"Solaris","","",14,null],[13,"Tvos","","",14,null],[13,"Uefi","","",14,null],[13,"VxWorks","","",14,null],[13,"Wasi","","",14,null],[13,"Windows","","",14,null],[3,"Triple","","A target \\\"triple\\\". Historically such things had three…",null,null],[12,"architecture","","The \\\"architecture\\\" (and sometimes the subarchitecture).",16,null],[12,"vendor","","The \\\"vendor\\\" (whatever that means).",16,null],[12,"operating_system","","The \\\"operating system\\\" (sometimes also the environment).",16,null],[12,"environment","","The \\\"environment\\\" on top of the operating system (often…",16,null],[12,"binary_format","","The \\\"binary format\\\" (rarely used).",16,null],[17,"HOST","","The `Triple` of the current host.",null,null],[8,"CompilerConfig","","The compiler configuration options.",null,null],[11,"enable_pic","","Enable Position Independent Code (PIC).",17,[[]]],[11,"enable_verifier","","Enable compiler IR verification.",17,[[]]],[10,"compiler","","Gets the custom compiler config",17,[[["global",3],["box",3]],[["global",3],["compiler",8],["box",3]]]],[11,"default_features_for_target","","Gets the default features for this compiler in the given…",17,[[["target",3]],["features",3]]],[10,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",17,[[["modulemiddleware",8],["arc",3]]]],[8,"FunctionMiddleware","","A function middleware specialized for a single function.",null,null],[11,"feed","","Processes the given operator.",18,[[["operator",4],["middlewarereaderstate",3]],[["result",4],["middlewareerror",3]]]],[3,"MiddlewareError","","A error in the middleware.",null,null],[12,"name","","The name of the middleware where the error was created",19,null],[12,"message","","The error message",19,null],[3,"MiddlewareReaderState","","The state of the binary reader. Exposed to middlewares to…",null,null],[12,"inner","","Raw binary reader.",20,null],[12,"pending_operations","","The pending operations added by the middleware.",20,null],[8,"ModuleMiddleware","","A shared builder for function middlewares.",null,null],[10,"generate_function_middleware","","Generates a `FunctionMiddleware` for a given function.",21,[[["localfunctionindex",3]],[["functionmiddleware",8],["global",3],["box",3]]]],[11,"transform_module_info","","Transforms a `ModuleInfo` struct in-place. This is called…",21,[[["moduleinfo",3]]]],[4,"CompileError","","The WebAssembly.CompileError object indicates an error…",null,null],[13,"Wasm","","A Wasm translation error occured.",22,null],[13,"Codegen","","A compilation error occured.",22,null],[13,"Validate","","The module did not pass validation.",22,null],[13,"UnsupportedFeature","","The compiler doesn\'t support a Wasm feature",22,null],[13,"UnsupportedTarget","","The compiler cannot compile for the given target. This can…",22,null],[13,"Resource","","Insufficient resources available for execution.",22,null],[4,"CpuFeature","","The nomenclature is inspired by the `cpuid` crate. The…",null,null],[13,"SSE2","","",23,null],[13,"SSE3","","",23,null],[13,"SSSE3","","",23,null],[13,"SSE41","","",23,null],[13,"SSE42","","",23,null],[13,"POPCNT","","",23,null],[13,"AVX","","",23,null],[13,"BMI1","","",23,null],[13,"BMI2","","",23,null],[13,"AVX2","","",23,null],[13,"AVX512DQ","","",23,null],[13,"AVX512VL","","",23,null],[13,"AVX512F","","",23,null],[13,"LZCNT","","",23,null],[3,"Features","","Controls which experimental features will be enabled.…",null,null],[12,"threads","","Threads proposal should be enabled",24,null],[12,"reference_types","","Reference Types proposal should be enabled",24,null],[12,"simd","","SIMD proposal should be enabled",24,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",24,null],[12,"multi_value","","Multi Value proposal should be enabled",24,null],[12,"tail_call","","Tail call proposal should be enabled",24,null],[12,"module_linking","","Module Linking proposal should be enabled",24,null],[12,"multi_memory","","Multi Memory proposal should be enabled",24,null],[12,"memory64","","64-bit Memory proposal should be enabled",24,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",24,null],[4,"ParseCpuFeatureError","","The error that can happen while parsing a `str` to…",null,null],[13,"Missing","","The provided string feature doesn\'t exist",25,null],[3,"Target","","This is the target that we will use for compiling the…",null,null],[12,"triple","","",26,null],[12,"cpu_features","","",26,null],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",27,null],[12,"message","wasmer::WasmError","A string describing the validation error.",28,null],[12,"offset","","The bytecode offset where the error occurred.",28,null],[13,"Unsupported","wasmer","A feature used by the WebAssembly code is not supported by…",27,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",27,null],[13,"Middleware","","An error from the middleware error.",27,null],[13,"Generic","","A generic error.",27,null],[6,"WasmResult","","A convenient alias for a `Result` that uses `WasmError` as…",null,null],[8,"ChainableNamedResolver","","A trait for chaining resolvers together.",null,null],[11,"chain_front","","Chain a resolver in front of the current resolver.",29,[[],["namedresolverchain",3]]],[11,"chain_back","","Chain a resolver behind the current resolver.",29,[[],["namedresolverchain",3]]],[4,"DeserializeError","","The Deserialize error can occur when loading a compiled…",null,null],[13,"Io","","An IO error",30,null],[13,"Generic","","A generic deserialization error",30,null],[13,"Incompatible","","Incompatible serialized binary",30,null],[13,"CorruptedBinary","","The provided binary is corrupted",30,null],[13,"Compiler","","The binary was valid, but we got an error when trying to…",30,null],[8,"Engine","","A unimplemented Wasmer `Engine`.",null,null],[10,"target","","Gets the target",31,[[],["target",3]]],[10,"register_signature","","Register a signature",31,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[10,"lookup_signature","","Lookup a signature",31,[[["vmsharedsignatureindex",3]],[["option",4],["functiontype",3]]]],[10,"validate","","Validates a WebAssembly module",31,[[],[["result",4],["compileerror",4]]]],[10,"compile","","Compile a WebAssembly binary",31,[[["tunables",8]],[["compileerror",4],["arc",3],["result",4]]]],[10,"deserialize","","Deserializes a WebAssembly module",31,[[],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path",31,[[["path",3]],[["deserializeerror",4],["result",4],["arc",3]]]],[10,"id","","A unique identifier for this object.",31,[[],["engineid",3]]],[10,"cloned","","Clone the engine",31,[[],[["arc",3],["engine",8]]]],[4,"Export","","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",32,null],[13,"Table","","A table export value.",32,null],[13,"Memory","","A memory export value.",32,null],[13,"Global","","A global export value.",32,null],[3,"FrameInfo","","Description of a frame in a backtrace for a…",null,null],[12,"module_name","","",33,null],[12,"func_index","","",33,null],[12,"function_name","","",33,null],[12,"func_start","","",33,null],[12,"instr","","",33,null],[4,"LinkError","","The WebAssembly.LinkError object indicates an error during…",null,null],[13,"Import","","An error occurred when checking the import types.",34,null],[13,"Trap","","A trap ocurred during linking.",34,null],[13,"Resource","","Insufficient resources available for linking.",34,null],[8,"NamedResolver","","Import resolver connects imports with available exported…",null,null],[10,"resolve_by_name","","Resolves an import a WebAssembly module to an export it\'s…",35,[[],[["option",4],["export",4]]]],[3,"NamedResolverChain","","A [`Resolver`] that links two resolvers together in a chain.",null,null],[12,"a","","",36,null],[12,"b","","",36,null],[8,"Resolver","","Import resolver connects imports with available exported…",null,null],[10,"resolve","","Resolves an import a WebAssembly module to an export it\'s…",37,[[],[["option",4],["export",4]]]],[3,"RuntimeError","","A struct representing an aborted instruction execution,…",null,null],[12,"inner","","",38,null],[4,"SerializeError","","The Serialize error can occur when serializing a compiled…",null,null],[13,"Io","","An IO error",39,null],[13,"Generic","","A generic serialization error",39,null],[8,"Tunables","","An engine delegates the creation of memories, tables, and…",null,null],[10,"memory_style","","Construct a `MemoryStyle` for the provided `MemoryType`",40,[[["memorytype",3]],["memorystyle",4]]],[10,"table_style","","Construct a `TableStyle` for the provided `TableType`",40,[[["tabletype",3]],["tablestyle",4]]],[10,"create_host_memory","","Create a memory owned by the host given a [`MemoryType`]…",40,[[["memorytype",3],["memorystyle",4]],[["arc",3],["memoryerror",4],["result",4]]]],[10,"create_vm_memory","","Create a memory owned by the VM given a [`MemoryType`] and…",40,[[["vmmemorydefinition",3],["nonnull",3],["memorytype",3],["memorystyle",4]],[["arc",3],["memoryerror",4],["result",4]]]],[10,"create_host_table","","Create a table owned by the host given a [`TableType`] and…",40,[[["tabletype",3],["tablestyle",4]],[["string",3],["result",4],["arc",3]]]],[10,"create_vm_table","","Create a table owned by the VM given a [`TableType`] and a…",40,[[["tabletype",3],["nonnull",3],["vmtabledefinition",3],["tablestyle",4]],[["string",3],["result",4],["arc",3]]]],[11,"create_global","","Create a global with an unset value.",40,[[["globaltype",3]],[["string",3],["arc",3],["result",4]]]],[11,"create_memories","","Allocate memory for just the memories of the current module.",40,[[["primarymap",3],["moduleinfo",3]],[["primarymap",3],["linkerror",4],["result",4]]]],[11,"create_tables","","Allocate memory for just the tables of the current module.",40,[[["primarymap",3],["moduleinfo",3]],[["result",4],["linkerror",4],["primarymap",3]]]],[11,"create_globals","","Allocate memory for just the globals of the current…",40,[[["moduleinfo",3]],[["result",4],["primarymap",3],["linkerror",4]]]],[3,"Atomically","","Atomically.",null,null],[3,"Bytes","","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",41,null],[4,"ExportIndex","","An entity to export.",null,null],[13,"Function","","Function export.",42,null],[13,"Table","","Table export.",42,null],[13,"Memory","","Memory export.",42,null],[13,"Global","","Global export.",42,null],[4,"GlobalInit","","Globals are initialized via the `const` operators or by…",null,null],[13,"I32Const","","An `i32.const`.",43,null],[13,"I64Const","","An `i64.const`.",43,null],[13,"F32Const","","An `f32.const`.",43,null],[13,"F64Const","","An `f64.const`.",43,null],[13,"V128Const","","A `v128.const`.",43,null],[13,"GetGlobal","","A `global.get` of another global.",43,null],[13,"RefNullConst","","A `ref.null`.",43,null],[13,"RefFunc","","A `ref.func <index>`.",43,null],[3,"LocalFunctionIndex","","Index type of a function defined locally inside the…",null,null],[12,"0","","",44,null],[3,"MemoryView","","A view into a memory.",null,null],[12,"ptr","","",45,null],[12,"length","","",45,null],[12,"_phantom","","",45,null],[3,"Pages","","Units of WebAssembly pages (as specified to be 65,536…",null,null],[12,"0","","",46,null],[8,"ValueType","","Trait for a Value type. A Value type is a type that is…",null,null],[17,"WASM_MAX_PAGES","","The number of pages we can have before we run out of byte…",null,null],[17,"WASM_MIN_PAGES","","The minimum number of pages allowed.",null,null],[17,"WASM_PAGE_SIZE","","WebAssembly page sizes are fixed to be 64KiB. Note: large…",null,null],[5,"raise_user_trap","","Raises a user-defined trap immediately.",null,[[["global",3],["error",8],["box",3]]]],[4,"MemoryError","","Error type describing things that can go wrong when…",null,null],[13,"Region","","Low level error with mmap.",47,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to exceed…",47,null],[12,"current","wasmer::MemoryError","The current size in pages.",48,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",48,null],[13,"InvalidMemory","wasmer","The operation would cause the size of the memory size…",47,null],[12,"reason","wasmer::MemoryError","The reason why the provided memory is invalid.",49,null],[13,"MinimumMemoryTooLarge","wasmer","Caller asked for more minimum memory than we can give them.",47,null],[12,"min_requested","wasmer::MemoryError","The number of pages requested as the minimum amount of…",50,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",50,null],[13,"MaximumMemoryTooLarge","wasmer","Caller asked for a maximum memory greater than we can give…",47,null],[12,"max_requested","wasmer::MemoryError","The number of pages requested as the maximum amount of…",51,null],[12,"max_allowed","","The number of pages requested as the maximum amount of…",51,null],[13,"Generic","wasmer","A user defined error value, used for error cases not…",47,null],[4,"VMExport","","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",52,null],[13,"Table","","A table export value.",52,null],[13,"Memory","","A memory export value.",52,null],[13,"Global","","A global export value.",52,null],[5,"wat2wasm","","Parses in-memory bytes as either the WebAssembly Text…",null,[[],[["result",4],["cow",4],["error",3]]]],[3,"Cranelift","","Global configuration options used to create an…",null,null],[12,"enable_nan_canonicalization","","",53,null],[12,"enable_verifier","","",53,null],[12,"enable_simd","","",53,null],[12,"enable_pic","","",53,null],[12,"opt_level","","",53,null],[12,"middlewares","","The middleware chain.",53,null],[4,"CraneliftOptLevel","","Possible optimization levels for the Cranelift codegen…",null,null],[13,"None","","No optimizations performed, minimizes compilation time by…",54,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",54,null],[13,"SpeedAndSize","","Similar to `speed`, but also performs transformations…",54,null],[3,"JITArtifact","","A compiled wasm module, ready to be instantiated.",null,null],[12,"serializable","","",55,null],[12,"finished_functions","","",55,null],[12,"finished_function_call_trampolines","","",55,null],[12,"finished_dynamic_function_trampolines","","",55,null],[12,"signatures","","",55,null],[12,"frame_info_registration","","",55,null],[12,"finished_function_lengths","","",55,null],[3,"JITEngine","","A WebAssembly `JIT` Engine.",null,null],[12,"inner","","",56,null],[12,"target","","The target for the compiler",56,null],[12,"engine_id","","",56,null],[3,"JIT","","The JIT builder",null,null],[12,"compiler_config","","",57,null],[12,"target","","",57,null],[12,"features","","",57,null],[3,"LazyInit","","Lazily init an item",null,null],[12,"data","","The data to be initialized",58,null],[12,"initialized","","Whether or not the data has been initialized",58,null],[3,"Exports","","Exports is a special kind of map that allows easily…",null,null],[12,"map","","",59,null],[3,"ExportsIterator","","An iterator over exports.",null,null],[12,"iter","","",60,null],[3,"Function","","A WebAssembly `function` instance.",null,null],[12,"store","","",61,null],[12,"definition","","",61,null],[12,"exported","","",61,null],[3,"Global","","A WebAssembly `global` instance.",null,null],[12,"store","","",62,null],[12,"global","","",62,null],[3,"Memory","","A WebAssembly `memory` instance.",null,null],[12,"store","","",63,null],[12,"memory","","",63,null],[3,"Table","","A WebAssembly `table` instance.",null,null],[12,"store","","",64,null],[12,"table","","",64,null],[3,"ImportObject","","All of the import data used when instantiating.",null,null],[12,"map","","",65,null],[3,"ImportObjectIterator","","Iterator for an `ImportObject`\'s exports.",null,null],[12,"elements","","",66,null],[3,"Instance","","A WebAssembly Instance is a stateful, executable instance…",null,null],[12,"handle","","",67,null],[12,"module","","",67,null],[12,"exports","","The exports for an instance.",67,null],[3,"Module","","A WebAssembly Module contains stateless WebAssembly code…",null,null],[12,"store","","",68,null],[12,"artifact","","",68,null],[3,"NativeFunc","","A WebAssembly function that can be called natively (using…",null,null],[12,"definition","","",69,null],[12,"store","","",69,null],[12,"exported","","",69,null],[12,"_phantom","","",69,null],[3,"Array","","The `Array` marker type. This type can be used like…",null,null],[3,"Item","","The `Item` marker type. This is the default and does not…",null,null],[3,"WasmPtr","","A zero-cost type that represents a pointer to something in…",null,null],[12,"offset","","",70,null],[12,"_phantom","","",70,null],[3,"Store","","The store represents all global state that can be…",null,null],[12,"engine","","",71,null],[12,"tunables","","",71,null],[3,"BaseTunables","","Tunable parameters for WebAssembly compilation. This is…",null,null],[12,"static_memory_bound","","For static heaps, the size in wasm pages of the heap…",72,null],[12,"static_memory_offset_guard_size","","The size in bytes of the offset guard for static heaps.",72,null],[12,"dynamic_memory_offset_guard_size","","The size in bytes of the offset guard for dynamic heaps.",72,null],[4,"HostEnvInitError","","An error while initializing the user supplied host env…",null,null],[13,"Export","","An error occurred when accessing an export",73,null],[4,"ExportError","","The `ExportError` can happen when trying to get a specific…",null,null],[13,"IncompatibleType","","An error than occurs when the exported type and the…",74,null],[13,"Missing","","This error arises when an export is missing",74,null],[4,"Extern","","An `Extern` is the runtime representation of an entity…",null,null],[13,"Function","","A external [`Function`].",75,null],[13,"Global","","A external [`Global`].",75,null],[13,"Table","","A external [`Table`].",75,null],[13,"Memory","","A external [`Memory`].",75,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",76,null],[13,"Start","","A runtime error occured while invoking the start function",76,null],[13,"HostEnvInitialization","","Error occurred when initializing the host environment.",76,null],[5,"is_wasm","","Check if the provided bytes are wasm-like",null,[[]]],[0,"env","","",null,null],[3,"LazyInit","wasmer::env","Lazily init an item",null,null],[12,"data","","The data to be initialized",58,null],[12,"initialized","","Whether or not the data has been initialized",58,null],[4,"HostEnvInitError","","An error while initializing the user supplied host env…",null,null],[13,"Export","","An error occurred when accessing an export",73,null],[8,"WasmerEnv","","Trait for initializing the environments passed to host…",null,null],[11,"init_with_instance","","The function that Wasmer will call on your type to let it…",77,[[["instance",3]],[["hostenviniterror",4],["result",4]]]],[11,"new","wasmer","Creates an unitialized value.",58,[[]]],[11,"get_unchecked","","SafetyThe data must be initialized first",58,[[]]],[11,"get_ref","","Get the inner data.",58,[[],["option",4]]],[11,"initialize","","Sets a value and marks the data as initialized.",58,[[]]],[0,"exports","","",null,null],[3,"Exports","wasmer::exports","Exports is a special kind of map that allows easily…",null,null],[12,"map","","",59,null],[3,"ExportsIterator","","An iterator over exports.",null,null],[12,"iter","","",60,null],[4,"ExportError","","The `ExportError` can happen when trying to get a specific…",null,null],[13,"IncompatibleType","","An error than occurs when the exported type and the…",74,null],[13,"Missing","","This error arises when an export is missing",74,null],[8,"Exportable","","This trait is used to mark types as gettable from an…",null,null],[10,"to_export","","This function is used when providedd the [`Extern`] as…",78,[[],["export",4]]],[10,"get_self_from_extern","","Implementation of how to get the export corresponding to…",78,[[["extern",4]],[["result",4],["exporterror",4]]]],[8,"ExportableWithGenerics","","A trait for accessing exports (like [`Exportable`]) but it…",null,null],[10,"get_self_from_extern_with_generics","","Get an export with the given generics.",79,[[["extern",4]],[["result",4],["exporterror",4]]]],[11,"new","wasmer","Creates a new `Exports`.",59,[[]]],[11,"with_capacity","","Creates a new `Exports` with capacity `n`.",59,[[]]],[11,"len","","Return the number of exports in the `Exports` map.",59,[[]]],[11,"is_empty","","Return whether or not there are no exports",59,[[]]],[11,"insert","","Insert a new export into this `Exports` map.",59,[[]]],[11,"get","","Get an export given a `name`.",59,[[],[["result",4],["exporterror",4]]]],[11,"get_global","","Get an export as a `Global`.",59,[[],[["result",4],["global",3],["exporterror",4]]]],[11,"get_memory","","Get an export as a `Memory`.",59,[[],[["result",4],["memory",3],["exporterror",4]]]],[11,"get_table","","Get an export as a `Table`.",59,[[],[["table",3],["exporterror",4],["result",4]]]],[11,"get_function","","Get an export as a `Func`.",59,[[],[["result",4],["function",3],["exporterror",4]]]],[11,"get_native_function","","Get an export as a `NativeFunc`.",59,[[],[["result",4],["nativefunc",3],["exporterror",4]]]],[11,"get_with_generics","","Hack to get this working with nativefunc too",59,[[],[["result",4],["exporterror",4]]]],[11,"get_extern","","Get an export as an `Extern`.",59,[[],[["extern",4],["option",4]]]],[11,"contains","","Returns true if the `Exports` contains the given export…",59,[[]]],[11,"iter","","Get an iterator over the exports.",59,[[],["exportsiterator",3]]],[11,"functions","","Get only the functions.",60,[[]]],[11,"memories","","Get only the memories.",60,[[]]],[11,"globals","","Get only the globals.",60,[[]]],[11,"tables","","Get only the tables.",60,[[]]],[0,"externals","","",null,null],[4,"Extern","wasmer::externals","An `Extern` is the runtime representation of an entity…",null,null],[13,"Function","","A external [`Function`].",75,null],[13,"Global","","A external [`Global`].",75,null],[13,"Table","","A external [`Table`].",75,null],[13,"Memory","","A external [`Memory`].",75,null],[0,"function","","",null,null],[3,"WasmFunctionDefinition","wasmer::externals::function","A function defined in the Wasm module",null,null],[12,"trampoline","","",80,null],[3,"HostFunctionDefinition","","A function defined in the Host",null,null],[12,"has_env","","If the host function has a custom environment attached",81,null],[3,"Function","","A WebAssembly `function` instance.",null,null],[12,"store","","",61,null],[12,"definition","","",61,null],[12,"exported","","",61,null],[3,"DynamicFunctionWithoutEnv","","",null,null],[12,"func","","",82,null],[12,"function_type","","",82,null],[3,"DynamicFunctionWithEnv","","",null,null],[12,"function_type","","",83,null],[12,"func","","",83,null],[12,"env","","",83,null],[4,"FunctionDefinition","","The inner helper",null,null],[13,"Wasm","","A function defined in the Wasm side",84,null],[13,"Host","","A function defined in the Host side",84,null],[5,"build_export_function_metadata","","",null,[[]]],[0,"inner","","This private inner module contains the low-level…",null,null],[3,"WithEnv","wasmer::externals::function::inner","An empty struct to help Rust typing to determine when a…",null,null],[3,"WithoutEnv","","An empty struct to help Rust typing to determine when a…",null,null],[3,"Function","","Represents a low-level Wasm static host function. See…",null,null],[12,"address","","",85,null],[12,"_phantom","","",85,null],[3,"S0","","A structure with a C-compatible representation that can…",null,null],[3,"S1","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",86,null],[3,"S2","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",87,null],[12,"1","","",87,null],[3,"S3","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",88,null],[12,"1","","",88,null],[12,"2","","",88,null],[3,"S4","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",89,null],[12,"1","","",89,null],[12,"2","","",89,null],[12,"3","","",89,null],[3,"S5","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",90,null],[12,"1","","",90,null],[12,"2","","",90,null],[12,"3","","",90,null],[12,"4","","",90,null],[3,"S6","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",91,null],[12,"1","","",91,null],[12,"2","","",91,null],[12,"3","","",91,null],[12,"4","","",91,null],[12,"5","","",91,null],[3,"S7","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",92,null],[12,"1","","",92,null],[12,"2","","",92,null],[12,"3","","",92,null],[12,"4","","",92,null],[12,"5","","",92,null],[12,"6","","",92,null],[3,"S8","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",93,null],[12,"1","","",93,null],[12,"2","","",93,null],[12,"3","","",93,null],[12,"4","","",93,null],[12,"5","","",93,null],[12,"6","","",93,null],[12,"7","","",93,null],[3,"S9","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",94,null],[12,"1","","",94,null],[12,"2","","",94,null],[12,"3","","",94,null],[12,"4","","",94,null],[12,"5","","",94,null],[12,"6","","",94,null],[12,"7","","",94,null],[12,"8","","",94,null],[3,"S10","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",95,null],[12,"1","","",95,null],[12,"2","","",95,null],[12,"3","","",95,null],[12,"4","","",95,null],[12,"5","","",95,null],[12,"6","","",95,null],[12,"7","","",95,null],[12,"8","","",95,null],[12,"9","","",95,null],[3,"S11","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",96,null],[12,"1","","",96,null],[12,"2","","",96,null],[12,"3","","",96,null],[12,"4","","",96,null],[12,"5","","",96,null],[12,"6","","",96,null],[12,"7","","",96,null],[12,"8","","",96,null],[12,"9","","",96,null],[12,"10","","",96,null],[3,"S12","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",97,null],[12,"1","","",97,null],[12,"2","","",97,null],[12,"3","","",97,null],[12,"4","","",97,null],[12,"5","","",97,null],[12,"6","","",97,null],[12,"7","","",97,null],[12,"8","","",97,null],[12,"9","","",97,null],[12,"10","","",97,null],[12,"11","","",97,null],[3,"S13","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",98,null],[12,"1","","",98,null],[12,"2","","",98,null],[12,"3","","",98,null],[12,"4","","",98,null],[12,"5","","",98,null],[12,"6","","",98,null],[12,"7","","",98,null],[12,"8","","",98,null],[12,"9","","",98,null],[12,"10","","",98,null],[12,"11","","",98,null],[12,"12","","",98,null],[3,"S14","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",99,null],[12,"1","","",99,null],[12,"2","","",99,null],[12,"3","","",99,null],[12,"4","","",99,null],[12,"5","","",99,null],[12,"6","","",99,null],[12,"7","","",99,null],[12,"8","","",99,null],[12,"9","","",99,null],[12,"10","","",99,null],[12,"11","","",99,null],[12,"12","","",99,null],[12,"13","","",99,null],[3,"S15","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",100,null],[12,"1","","",100,null],[12,"2","","",100,null],[12,"3","","",100,null],[12,"4","","",100,null],[12,"5","","",100,null],[12,"6","","",100,null],[12,"7","","",100,null],[12,"8","","",100,null],[12,"9","","",100,null],[12,"10","","",100,null],[12,"11","","",100,null],[12,"12","","",100,null],[12,"13","","",100,null],[12,"14","","",100,null],[3,"S16","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",101,null],[12,"1","","",101,null],[12,"2","","",101,null],[12,"3","","",101,null],[12,"4","","",101,null],[12,"5","","",101,null],[12,"6","","",101,null],[12,"7","","",101,null],[12,"8","","",101,null],[12,"9","","",101,null],[12,"10","","",101,null],[12,"11","","",101,null],[12,"12","","",101,null],[12,"13","","",101,null],[12,"14","","",101,null],[12,"15","","",101,null],[3,"S17","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",102,null],[12,"1","","",102,null],[12,"2","","",102,null],[12,"3","","",102,null],[12,"4","","",102,null],[12,"5","","",102,null],[12,"6","","",102,null],[12,"7","","",102,null],[12,"8","","",102,null],[12,"9","","",102,null],[12,"10","","",102,null],[12,"11","","",102,null],[12,"12","","",102,null],[12,"13","","",102,null],[12,"14","","",102,null],[12,"15","","",102,null],[12,"16","","",102,null],[3,"S18","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",103,null],[12,"1","","",103,null],[12,"2","","",103,null],[12,"3","","",103,null],[12,"4","","",103,null],[12,"5","","",103,null],[12,"6","","",103,null],[12,"7","","",103,null],[12,"8","","",103,null],[12,"9","","",103,null],[12,"10","","",103,null],[12,"11","","",103,null],[12,"12","","",103,null],[12,"13","","",103,null],[12,"14","","",103,null],[12,"15","","",103,null],[12,"16","","",103,null],[12,"17","","",103,null],[3,"S19","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",104,null],[12,"1","","",104,null],[12,"2","","",104,null],[12,"3","","",104,null],[12,"4","","",104,null],[12,"5","","",104,null],[12,"6","","",104,null],[12,"7","","",104,null],[12,"8","","",104,null],[12,"9","","",104,null],[12,"10","","",104,null],[12,"11","","",104,null],[12,"12","","",104,null],[12,"13","","",104,null],[12,"14","","",104,null],[12,"15","","",104,null],[12,"16","","",104,null],[12,"17","","",104,null],[12,"18","","",104,null],[3,"S20","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",105,null],[12,"1","","",105,null],[12,"2","","",105,null],[12,"3","","",105,null],[12,"4","","",105,null],[12,"5","","",105,null],[12,"6","","",105,null],[12,"7","","",105,null],[12,"8","","",105,null],[12,"9","","",105,null],[12,"10","","",105,null],[12,"11","","",105,null],[12,"12","","",105,null],[12,"13","","",105,null],[12,"14","","",105,null],[12,"15","","",105,null],[12,"16","","",105,null],[12,"17","","",105,null],[12,"18","","",105,null],[12,"19","","",105,null],[3,"S21","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",106,null],[12,"1","","",106,null],[12,"2","","",106,null],[12,"3","","",106,null],[12,"4","","",106,null],[12,"5","","",106,null],[12,"6","","",106,null],[12,"7","","",106,null],[12,"8","","",106,null],[12,"9","","",106,null],[12,"10","","",106,null],[12,"11","","",106,null],[12,"12","","",106,null],[12,"13","","",106,null],[12,"14","","",106,null],[12,"15","","",106,null],[12,"16","","",106,null],[12,"17","","",106,null],[12,"18","","",106,null],[12,"19","","",106,null],[12,"20","","",106,null],[3,"S22","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",107,null],[12,"1","","",107,null],[12,"2","","",107,null],[12,"3","","",107,null],[12,"4","","",107,null],[12,"5","","",107,null],[12,"6","","",107,null],[12,"7","","",107,null],[12,"8","","",107,null],[12,"9","","",107,null],[12,"10","","",107,null],[12,"11","","",107,null],[12,"12","","",107,null],[12,"13","","",107,null],[12,"14","","",107,null],[12,"15","","",107,null],[12,"16","","",107,null],[12,"17","","",107,null],[12,"18","","",107,null],[12,"19","","",107,null],[12,"20","","",107,null],[12,"21","","",107,null],[3,"S23","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",108,null],[12,"1","","",108,null],[12,"2","","",108,null],[12,"3","","",108,null],[12,"4","","",108,null],[12,"5","","",108,null],[12,"6","","",108,null],[12,"7","","",108,null],[12,"8","","",108,null],[12,"9","","",108,null],[12,"10","","",108,null],[12,"11","","",108,null],[12,"12","","",108,null],[12,"13","","",108,null],[12,"14","","",108,null],[12,"15","","",108,null],[12,"16","","",108,null],[12,"17","","",108,null],[12,"18","","",108,null],[12,"19","","",108,null],[12,"20","","",108,null],[12,"21","","",108,null],[12,"22","","",108,null],[3,"S24","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",109,null],[12,"1","","",109,null],[12,"2","","",109,null],[12,"3","","",109,null],[12,"4","","",109,null],[12,"5","","",109,null],[12,"6","","",109,null],[12,"7","","",109,null],[12,"8","","",109,null],[12,"9","","",109,null],[12,"10","","",109,null],[12,"11","","",109,null],[12,"12","","",109,null],[12,"13","","",109,null],[12,"14","","",109,null],[12,"15","","",109,null],[12,"16","","",109,null],[12,"17","","",109,null],[12,"18","","",109,null],[12,"19","","",109,null],[12,"20","","",109,null],[12,"21","","",109,null],[12,"22","","",109,null],[12,"23","","",109,null],[3,"S25","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",110,null],[12,"1","","",110,null],[12,"2","","",110,null],[12,"3","","",110,null],[12,"4","","",110,null],[12,"5","","",110,null],[12,"6","","",110,null],[12,"7","","",110,null],[12,"8","","",110,null],[12,"9","","",110,null],[12,"10","","",110,null],[12,"11","","",110,null],[12,"12","","",110,null],[12,"13","","",110,null],[12,"14","","",110,null],[12,"15","","",110,null],[12,"16","","",110,null],[12,"17","","",110,null],[12,"18","","",110,null],[12,"19","","",110,null],[12,"20","","",110,null],[12,"21","","",110,null],[12,"22","","",110,null],[12,"23","","",110,null],[12,"24","","",110,null],[3,"S26","","A structure with a C-compatible representation that can…",null,null],[12,"0","","",111,null],[12,"1","","",111,null],[12,"2","","",111,null],[12,"3","","",111,null],[12,"4","","",111,null],[12,"5","","",111,null],[12,"6","","",111,null],[12,"7","","",111,null],[12,"8","","",111,null],[12,"9","","",111,null],[12,"10","","",111,null],[12,"11","","",111,null],[12,"12","","",111,null],[12,"13","","",111,null],[12,"14","","",111,null],[12,"15","","",111,null],[12,"16","","",111,null],[12,"17","","",111,null],[12,"18","","",111,null],[12,"19","","",111,null],[12,"20","","",111,null],[12,"21","","",111,null],[12,"22","","",111,null],[12,"23","","",111,null],[12,"24","","",111,null],[12,"25","","",111,null],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a `WasmNativeType`…",null,null],[16,"Native","","Native Wasm type.",112,null],[10,"from_native","","Convert a value of kind `Self::Native` to `Self`.",112,[[]]],[10,"to_native","","Convert self to `Self::Native`.",112,[[]]],[8,"WasmTypeList","","The `WasmTypeList` trait represents a tuple (list) of Wasm…",null,null],[16,"CStruct","","The C type (a struct) that can hold/represent all the…",113,null],[16,"Array","","The array type that can hold all the represented values.",113,null],[10,"from_array","","Constructs `Self` based on an array of values.",113,[[]]],[10,"from_slice","","Constructs `Self` based on a slice of values.",113,[[],[["result",4],["tryfromsliceerror",3]]]],[10,"into_array","","Builds and returns an array of type `Array` from a tuple…",113,[[]]],[10,"empty_array","","Allocates and return an empty array of type `Array` that…",113,[[]]],[10,"from_c_struct","","Builds a tuple (list) of values from a C struct of type…",113,[[]]],[10,"into_c_struct","","Builds and returns a C struct of type `CStruct` from a…",113,[[]]],[10,"wasm_types","","Get the Wasm types for the tuple (list) of currently…",113,[[]]],[8,"IntoResult","","The `IntoResult` trait turns a `WasmTypeList` into a…",null,null],[16,"Error","","The error type for this trait.",114,null],[10,"into_result","","Transforms `Self` into a `Result`.",114,[[],["result",4]]],[8,"HostFunction","","The `HostFunction` trait represents the set of functions…",null,null],[10,"function_body_ptr","","Get the pointer to the function body.",115,[[]]],[11,"new","","Creates a new `Function`.",85,[[]]],[11,"ty","","Get the function type of this `Function`.",85,[[],["functiontype",3]]],[11,"address","","Get the address of this `Function`.",85,[[]]],[8,"VMDynamicFunction","wasmer::externals::function","This trait is one that all dynamic functions must fulfill.",null,null],[10,"call","","",116,[[],[["vec",3],["result",4],["runtimeerror",3]]]],[10,"function_type","","",116,[[],["functiontype",3]]],[8,"VMDynamicFunctionCall","","",null,null],[10,"from_context","","",117,[[]]],[10,"address_ptr","","",117,[[]]],[10,"func_wrapper","","",117,[[]]],[11,"new","wasmer","Creates a new host `Function` (dynamic) with the provided…",61,[[["store",3]]]],[11,"new_with_env","","Creates a new host `Function` (dynamic) with the provided…",61,[[["store",3]]]],[11,"new_native","","Creates a new host `Function` from a native function.",61,[[["store",3]]]],[11,"new_native_with_env","","Creates a new host `Function` from a native function and a…",61,[[["store",3]]]],[11,"ty","","Returns the [`FunctionType`] of the `Function`.",61,[[],["functiontype",3]]],[11,"store","","Returns the [`Store`] where the `Function` belongs.",61,[[],["store",3]]],[11,"call_wasm","","",61,[[["wasmfunctiondefinition",3]],[["result",4],["runtimeerror",3]]]],[11,"param_arity","","Returns the number of parameters that this function takes.",61,[[]]],[11,"result_arity","","Returns the number of results this function produces.",61,[[]]],[11,"call","","Call the `Function` function.",61,[[],[["runtimeerror",3],["box",3],["result",4]]]],[11,"from_vm_export","","",61,[[["store",3],["exportfunction",3]]]],[11,"checked_anyfunc","","",61,[[],["vmcallercheckedanyfunc",3]]],[11,"native","","Transform this WebAssembly function into a function with…",61,[[],[["nativefunc",3],["runtimeerror",3],["result",4]]]],[11,"closures_unsupported_panic","","",61,[[]]],[0,"global","wasmer::externals","",null,null],[3,"Global","wasmer::externals::global","A WebAssembly `global` instance.",null,null],[12,"store","","",62,null],[12,"global","","",62,null],[11,"new","wasmer","Create a new `Global` with the initial value [`Val`].",62,[[["store",3],["val",6]]]],[11,"new_mut","","Create a mutable `Global` with the initial value [`Val`].",62,[[["store",3],["val",6]]]],[11,"from_value","","Create a `Global` with the initial value [`Val`] and the…",62,[[["store",3],["val",6],["mutability",4]],[["runtimeerror",3],["result",4]]]],[11,"ty","","Returns the [`GlobalType`] of the `Global`.",62,[[],["globaltype",3]]],[11,"store","","Returns the [`Store`] where the `Global` belongs.",62,[[],["store",3]]],[11,"get","","Retrieves the current value [`Val`] that the Global has.",62,[[],["val",6]]],[11,"set","","Sets a custom value [`Val`] to the runtime Global.",62,[[["val",6]],[["result",4],["runtimeerror",3]]]],[11,"from_vm_export","","",62,[[["store",3],["exportglobal",3]]]],[11,"same","","Returns whether or not these two globals refer to the same…",62,[[]]],[0,"memory","wasmer::externals","",null,null],[3,"Memory","wasmer::externals::memory","A WebAssembly `memory` instance.",null,null],[12,"store","","",63,null],[12,"memory","","",63,null],[11,"new","wasmer","Creates a new host `Memory` from the provided…",63,[[["memorytype",3],["store",3]],[["memoryerror",4],["result",4]]]],[11,"ty","","Returns the [`MemoryType`] of the `Memory`.",63,[[],["memorytype",3]]],[11,"store","","Returns the [`Store`] where the `Memory` belongs.",63,[[],["store",3]]],[11,"data_unchecked","","Retrieve a slice of the memory contents.",63,[[]]],[11,"data_unchecked_mut","","Retrieve a mutable slice of the memory contents.",63,[[]]],[11,"data_ptr","","Returns the pointer to the raw bytes of the `Memory`.",63,[[]]],[11,"data_size","","Returns the size (in bytes) of the `Memory`.",63,[[]]],[11,"size","","Returns the size (in [`Pages`]) of the `Memory`.",63,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of WebAssembly…",63,[[],[["pages",3],["memoryerror",4],["result",4]]]],[11,"view","","Return a \\\"view\\\" of the currently accessible memory. By…",63,[[],[["memoryview",3],["valuetype",8]]]],[11,"from_vm_export","","",63,[[["store",3],["exportmemory",3]]]],[11,"same","","Returns whether or not these two memories refer to the…",63,[[]]],[0,"table","wasmer::externals","",null,null],[3,"Table","wasmer::externals::table","A WebAssembly `table` instance.",null,null],[12,"store","","",64,null],[12,"table","","",64,null],[5,"set_table_item","","",null,[[["runtimetable",8],["vmcallercheckedanyfunc",3]],[["result",4],["runtimeerror",3]]]],[11,"new","wasmer","Creates a new `Table` with the provided [`TableType`]…",64,[[["store",3],["tabletype",3],["val",6]],[["runtimeerror",3],["result",4]]]],[11,"ty","","Returns the [`TableType`] of the `Table`.",64,[[],["tabletype",3]]],[11,"store","","Returns the [`Store`] where the `Table` belongs.",64,[[],["store",3]]],[11,"get","","Retrieves an element of the table at the provided `index`.",64,[[],[["val",6],["option",4]]]],[11,"set","","Sets an element `val` in the Table at the provided `index`.",64,[[["val",6]],[["result",4],["runtimeerror",3]]]],[11,"size","","Retrieves the size of the `Table` (in elements)",64,[[]]],[11,"grow","","Grows the size of the `Table` by `delta`, initializating…",64,[[["val",6]],[["runtimeerror",3],["result",4]]]],[11,"copy","","Copies the `len` elements of `src_table` starting at…",64,[[],[["result",4],["runtimeerror",3]]]],[11,"from_vm_export","","",64,[[["store",3],["exporttable",3]]]],[11,"same","","Returns whether or not these two tables refer to the same…",64,[[]]],[11,"ty","","Return the underlying type of the inner `Extern`.",75,[[],["externtype",4]]],[11,"from_vm_export","","Create an `Extern` from an `wasmer_vm::Export`.",75,[[["store",3],["export",4]]]],[0,"import_object","","The import module contains the implementation data…",null,null],[3,"ImportObject","wasmer::import_object","All of the import data used when instantiating.",null,null],[12,"map","","",65,null],[3,"ImportObjectIterator","","Iterator for an `ImportObject`\'s exports.",null,null],[12,"elements","","",66,null],[8,"LikeNamespace","","The `LikeNamespace` trait represents objects that act as a…",null,null],[10,"get_namespace_export","","Gets an export by name.",118,[[],[["option",4],["export",4]]]],[10,"get_namespace_exports","","Gets all exports in the namespace.",118,[[],["vec",3]]],[11,"new","wasmer","Create a new `ImportObject`.",65,[[]]],[11,"get_export","","Gets an export given a module and a name",65,[[],[["option",4],["export",4]]]],[11,"contains_namespace","","Returns true if the ImportObject contains namespace with…",65,[[]]],[11,"register","","Register anything that implements `LikeNamespace` as a…",65,[[],[["box",3],["option",4]]]],[11,"get_objects","","",65,[[],["vecdeque",3]]],[0,"instance","","",null,null],[3,"Instance","wasmer::instance","A WebAssembly Instance is a stateful, executable instance…",null,null],[12,"handle","","",67,null],[12,"module","","",67,null],[12,"exports","","The exports for an instance.",67,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",76,null],[13,"Start","","A runtime error occured while invoking the start function",76,null],[13,"HostEnvInitialization","","Error occurred when initializing the host environment.",76,null],[11,"new","wasmer","Creates a new `Instance` from a WebAssembly [`Module`] and…",67,[[["module",3],["resolver",8]],[["instantiationerror",4],["result",4]]]],[11,"module","","Gets the [`Module`] associated with this instance.",67,[[],["module",3]]],[11,"store","","Returns the [`Store`] where the `Instance` belongs.",67,[[],["store",3]]],[0,"module","","",null,null],[3,"Module","wasmer::module","A WebAssembly Module contains stateless WebAssembly code…",null,null],[12,"store","","",68,null],[12,"artifact","","",68,null],[4,"IoCompileError","","",null,null],[13,"Io","","An IO error",119,null],[13,"Compile","","A compilation error",119,null],[11,"new","wasmer","Creates a new WebAssembly Module given the configuration…",68,[[["store",3]],[["result",4],["compileerror",4]]]],[11,"from_file","","Creates a new WebAssembly module from a file path.",68,[[["store",3]],[["result",4],["iocompileerror",4]]]],[11,"from_binary","","Creates a new WebAssembly module from a binary.",68,[[["store",3]],[["result",4],["compileerror",4]]]],[11,"from_binary_unchecked","","Creates a new WebAssembly module skipping any kind of…",68,[[["store",3]],[["result",4],["compileerror",4]]]],[11,"validate","","Validates a new WebAssembly Module given the configuration…",68,[[["store",3]],[["compileerror",4],["result",4]]]],[11,"compile","","",68,[[["store",3]],[["result",4],["compileerror",4]]]],[11,"serialize","","Serializes a module into a binary representation that the…",68,[[],[["result",4],["serializeerror",4],["vec",3]]]],[11,"serialize_to_file","","Serializes a module into a file that the `Engine` can…",68,[[],[["serializeerror",4],["result",4]]]],[11,"deserialize","","Deserializes a serialized Module binary into a `Module`.",68,[[["store",3]],[["deserializeerror",4],["result",4]]]],[11,"deserialize_from_file","","Deserializes a a serialized Module located in a `Path`…",68,[[["store",3]],[["deserializeerror",4],["result",4]]]],[11,"from_artifact","","",68,[[["arc",3],["store",3],["artifact",8]]]],[11,"instantiate","","",68,[[["resolver",8]],[["instancehandle",3],["result",4],["instantiationerror",4]]]],[11,"name","","Returns the name of the current module.",68,[[],["option",4]]],[11,"set_name","","Sets the name of the current module. This is normally…",68,[[]]],[11,"imports","","Returns an iterator over the imported types in the Module.",68,[[],["importsiterator",3]]],[11,"exports","","Returns an iterator over the exported types in the Module.",68,[[],["exportsiterator",3]]],[11,"custom_sections","","Get the custom sections of the module given a `name`.",68,[[]]],[11,"store","","Returns the [`Store`] where the `Instance` belongs.",68,[[],["store",3]]],[0,"native","","Native Functions.",null,null],[3,"NativeFunc","wasmer::native","A WebAssembly function that can be called natively (using…",null,null],[12,"definition","","",69,null],[12,"store","","",69,null],[12,"exported","","",69,null],[12,"_phantom","","",69,null],[11,"new","wasmer","",69,[[["functiondefinition",4],["store",3],["exportfunction",3]]]],[11,"vmctx","","",69,[[],["vmfunctionenvironment",19]]],[11,"address","","",69,[[]]],[11,"arg_kind","","",69,[[],["vmfunctionkind",4]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[11,"call","","Call the typed func and return results.",69,[[],[["result",4],["runtimeerror",3]]]],[0,"ptr","","Types for a reusable pointer abstraction for accessing…",null,null],[3,"Array","wasmer::ptr","The `Array` marker type. This type can be used like…",null,null],[3,"Item","","The `Item` marker type. This is the default and does not…",null,null],[3,"WasmPtr","","A zero-cost type that represents a pointer to something in…",null,null],[12,"offset","","",70,null],[12,"_phantom","","",70,null],[5,"align_pointer","","",null,[[]]],[11,"new","wasmer","Create a new `WasmPtr` at the given offset.",70,[[]]],[11,"offset","","Get the offset into Wasm linear memory for this `WasmPtr`.",70,[[]]],[11,"deref","","Dereference the `WasmPtr` getting access to a `&Cell<T>`…",70,[[["memory",3]],[["cell",3],["option",4]]]],[11,"deref_mut","","Mutably dereference this `WasmPtr` getting a `&mut…",70,[[["memory",3]],[["cell",3],["option",4]]]],[11,"deref","","Dereference the `WasmPtr` getting access to a `&[Cell<T>]`…",70,[[["memory",3]],["option",4]]],[11,"deref_mut","","Mutably dereference this `WasmPtr` getting a `&mut…",70,[[["memory",3]],["option",4]]],[11,"get_utf8_str","","Get a UTF-8 string from the `WasmPtr` with the given length.",70,[[["memory",3]],["option",4]]],[11,"get_utf8_string","","Get a UTF-8 `String` from the `WasmPtr` with the given…",70,[[["memory",3]],[["option",4],["string",3]]]],[11,"get_utf8_str_with_nul","","Get a UTF-8 string from the `WasmPtr`, where the string is…",70,[[["memory",3]],["option",4]]],[11,"get_utf8_string_with_nul","","Get a UTF-8 `String` from the `WasmPtr`, where the string…",70,[[["memory",3]],[["option",4],["string",3]]]],[0,"store","","",null,null],[3,"Store","wasmer::store","The store represents all global state that can be…",null,null],[12,"engine","","",71,null],[12,"tunables","","",71,null],[8,"StoreObject","","A trait represinting any object that lives in the `Store`.",null,null],[10,"comes_from_same_store","","Return true if the object `Store` is the same as the…",120,[[["store",3]]]],[11,"new","wasmer","Creates a new `Store` with a specific [`Engine`].",71,[[]]],[11,"new_with_tunables","","Creates a new `Store` with a specific [`Engine`] and…",71,[[]]],[11,"tunables","","Returns the [`Tunables`].",71,[[],["tunables",8]]],[11,"engine","","Returns the [`Engine`].",71,[[],["arc",3]]],[11,"same","","Checks whether two stores are identical. A store is…",71,[[]]],[0,"tunables","","",null,null],[3,"BaseTunables","wasmer::tunables","Tunable parameters for WebAssembly compilation. This is…",null,null],[12,"static_memory_bound","","For static heaps, the size in wasm pages of the heap…",72,null],[12,"static_memory_offset_guard_size","","The size in bytes of the offset guard for static heaps.",72,null],[12,"dynamic_memory_offset_guard_size","","The size in bytes of the offset guard for dynamic heaps.",72,null],[11,"for_target","wasmer","Get the `BaseTunables` for a specific Target",72,[[["target",3]]]],[0,"types","","",null,null],[3,"ExportType","wasmer::types","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",0,null],[12,"ty","","",0,null],[4,"ExternRef","","Represents an opaque reference to any data within…",null,null],[13,"Null","","A reference to no data.",1,null],[13,"Ref","","A reference to data stored internally.",1,null],[13,"Other","","A reference to data located outside.",1,null],[4,"ExternType","","A list of all possible types which can be externally…",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",2,null],[13,"Global","","This external type is the type of a WebAssembly global.",2,null],[13,"Table","","This external type is the type of a WebAssembly table.",2,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",2,null],[3,"FunctionType","","The signature of a function that is either implemented in…",null,null],[12,"params","","The parameters of the function",3,null],[12,"results","","The return values of the function",3,null],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",4,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",4,null],[8,"HostInfo","","",null,null],[11,"finalize","","",5,[[]]],[3,"HostRef","","Represents a piece of data located in the host environment.",null,null],[12,"0","","",6,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",7,null],[12,"name","","",7,null],[12,"ty","","",7,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",8,null],[12,"maximum","","The maximum number of pages in the memory.",8,null],[12,"shared","","Whether the memory may be shared between multiple threads.",8,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",9,null],[13,"Var","","The value of the global can change over time",9,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",10,null],[12,"minimum","","The minimum number of elements in the table.",10,null],[12,"maximum","","The maximum number of elements in the table.",10,null],[4,"ValType","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",11,null],[13,"I64","","Signed 64 bit integer.",11,null],[13,"F32","","Floating point 32 bit integer.",11,null],[13,"F64","","Floating point 64 bit integer.",11,null],[13,"V128","","A 128 bit number.",11,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",11,null],[13,"FuncRef","","A reference to a Wasm function.",11,null],[6,"Val","","WebAssembly computations manipulate values of basic value…",null,null],[8,"ValFuncRef","","It provides useful functions for converting back and forth…",null,null],[10,"into_checked_anyfunc","","",121,[[["store",3]],[["result",4],["runtimeerror",3],["vmcallercheckedanyfunc",3]]]],[10,"from_checked_anyfunc","","",121,[[["store",3],["vmcallercheckedanyfunc",3]]]],[0,"utils","wasmer","",null,null],[5,"is_wasm","wasmer::utils","Check if the provided bytes are wasm-like",null,[[]]],[0,"vm","wasmer","The vm module re-exports wasmer-vm types.",null,null],[8,"Memory","wasmer::vm","Trait for implementing Wasm Memory used by Wasmer.",null,null],[10,"ty","","Returns the memory type for this memory.",122,[[],["memorytype",3]]],[10,"style","","Returns the memory style for this memory.",122,[[],["memorystyle",4]]],[10,"size","","Returns the number of allocated wasm pages.",122,[[],["pages",3]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",122,[[["pages",3]],[["memoryerror",4],["result",4],["pages",3]]]],[10,"vmmemory","","Return a [`VMMemoryDefinition`] for exposing the memory to…",122,[[],[["nonnull",3],["vmmemorydefinition",3]]]],[4,"MemoryError","","Error type describing things that can go wrong when…",null,null],[13,"Region","","Low level error with mmap.",47,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to exceed…",47,null],[12,"current","wasmer::vm::MemoryError","The current size in pages.",48,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",48,null],[13,"InvalidMemory","wasmer::vm","The operation would cause the size of the memory size…",47,null],[12,"reason","wasmer::vm::MemoryError","The reason why the provided memory is invalid.",49,null],[13,"MinimumMemoryTooLarge","wasmer::vm","Caller asked for more minimum memory than we can give them.",47,null],[12,"min_requested","wasmer::vm::MemoryError","The number of pages requested as the minimum amount of…",50,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",50,null],[13,"MaximumMemoryTooLarge","wasmer::vm","Caller asked for a maximum memory greater than we can give…",47,null],[12,"max_requested","wasmer::vm::MemoryError","The number of pages requested as the maximum amount of…",51,null],[12,"max_allowed","","The number of pages requested as the maximum amount of…",51,null],[13,"Generic","wasmer::vm","A user defined error value, used for error cases not…",47,null],[4,"MemoryStyle","","Implementation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",123,null],[12,"offset_guard_size","wasmer::vm::MemoryStyle","Our chosen offset-guard size.",124,null],[13,"Static","wasmer::vm","Address space is allocated up front.",123,null],[12,"bound","wasmer::vm::MemoryStyle","The number of mapped and unmapped pages.",125,null],[12,"offset_guard_size","","Our chosen offset-guard size.",125,null],[8,"Table","wasmer::vm","Trait for implementing the interface of a Wasm table.",null,null],[10,"style","","Returns the style for this Table.",126,[[],["tablestyle",4]]],[10,"ty","","Returns the type for this Table.",126,[[],["tabletype",3]]],[10,"size","","Returns the number of allocated elements.",126,[[]]],[10,"grow","","Grow table by the specified amount of elements.",126,[[],["option",4]]],[10,"get","","Get reference to the specified element.",126,[[],[["option",4],["vmcallercheckedanyfunc",3]]]],[10,"set","","Set reference to the specified element.",126,[[["vmcallercheckedanyfunc",3]],[["result",4],["trap",4]]]],[10,"vmtable","","Return a `VMTableDefinition` for exposing the table to…",126,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"copy","","Copy `len` elements from `src_table[src_index..]` into…",126,[[["table",8]],[["result",4],["trap",4]]]],[4,"TableStyle","","Implementation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the…",127,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","The start address which is always valid, even if the…",128,null],[12,"current_length","","The current logical size of this linear memory in bytes.",128,null],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","Pointer to the table data.",129,null],[12,"current_elements","","The current number of elements in the table.",129,null],[6,"Val","wasmer","WebAssembly computations manipulate values of basic value…",null,null],[6,"Value","","WebAssembly computations manipulate values of basic value…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[8,"WasmerEnv","","Trait for initializing the environments passed to host…",null,null],[11,"init_with_instance","wasmer::env","The function that Wasmer will call on your type to let it…",77,[[["instance",3]],[["hostenviniterror",4],["result",4]]]],[8,"Exportable","wasmer","This trait is used to mark types as gettable from an…",null,null],[10,"to_export","","This function is used when providedd the [`Extern`] as…",78,[[],["export",4]]],[10,"get_self_from_extern","","Implementation of how to get the export corresponding to…",78,[[["extern",4]],[["result",4],["exporterror",4]]]],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a `WasmNativeType`…",null,null],[16,"Native","","Native Wasm type.",112,null],[10,"from_native","","Convert a value of kind `Self::Native` to `Self`.",112,[[]]],[10,"to_native","","Convert self to `Self::Native`.",112,[[]]],[8,"HostFunction","","The `HostFunction` trait represents the set of functions…",null,null],[10,"function_body_ptr","","Get the pointer to the function body.",115,[[]]],[8,"WasmTypeList","","The `WasmTypeList` trait represents a tuple (list) of Wasm…",null,null],[16,"CStruct","","The C type (a struct) that can hold/represent all the…",113,null],[16,"Array","","The array type that can hold all the represented values.",113,null],[10,"from_array","","Constructs `Self` based on an array of values.",113,[[]]],[10,"from_slice","","Constructs `Self` based on a slice of values.",113,[[],[["result",4],["tryfromsliceerror",3]]]],[10,"into_array","","Builds and returns an array of type `Array` from a tuple…",113,[[]]],[10,"empty_array","","Allocates and return an empty array of type `Array` that…",113,[[]]],[10,"from_c_struct","","Builds a tuple (list) of values from a C struct of type…",113,[[]]],[10,"into_c_struct","","Builds and returns a C struct of type `CStruct` from a…",113,[[]]],[10,"wasm_types","","Get the Wasm types for the tuple (list) of currently…",113,[[]]],[8,"LikeNamespace","","The `LikeNamespace` trait represents objects that act as a…",null,null],[10,"get_namespace_export","","Gets an export by name.",118,[[],[["option",4],["export",4]]]],[10,"get_namespace_exports","","Gets all exports in the namespace.",118,[[],["vec",3]]],[8,"StoreObject","","A trait represinting any object that lives in the `Store`.",null,null],[10,"comes_from_same_store","","Return true if the object `Store` is the same as the…",120,[[["store",3]]]],[14,"imports","","Generate an `ImportObject` easily with the `imports!` macro.",null,null],[11,"from","wasmer::types","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","wasmer","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"resolve","","By default this method will be calling…",36,[[],[["option",4],["export",4]]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"vzip","","",39,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"init","","",130,[[]]],[11,"deref","","",130,[[]]],[11,"deref_mut","","",130,[[]]],[11,"drop","","",130,[[]]],[11,"vzip","","",130,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"equivalent","","",41,[[]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"equivalent","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"equivalent","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"equivalent","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"vzip","","",46,[[]]],[11,"from","wasmer::vm","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"vzip","","",47,[[]]],[11,"from","wasmer","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"par_bridge","","",60,[[],["iterbridge",3]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"into_iter","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"resolve","","By default this method will be calling…",65,[[],[["option",4],["export",4]]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"into_iter","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"par_bridge","","",66,[[],["iterbridge",3]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"vzip","","",69,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"init","","",131,[[]]],[11,"deref","","",131,[[]]],[11,"deref_mut","","",131,[[]]],[11,"drop","","",131,[[]]],[11,"vzip","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"init","","",132,[[]]],[11,"deref","","",132,[[]]],[11,"deref_mut","","",132,[[]]],[11,"drop","","",132,[[]]],[11,"vzip","","",132,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"equivalent","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"vzip","","",76,[[]]],[11,"from","wasmer::externals::function","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"vzip","","",84,[[]]],[11,"from","wasmer::externals::function::inner","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"init","","",133,[[]]],[11,"deref","","",133,[[]]],[11,"deref_mut","","",133,[[]]],[11,"drop","","",133,[[]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"init","","",134,[[]]],[11,"deref","","",134,[[]]],[11,"deref_mut","","",134,[[]]],[11,"drop","","",134,[[]]],[11,"vzip","","",134,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"equivalent","","",85,[[]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"vzip","","",85,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"init","","",135,[[]]],[11,"deref","","",135,[[]]],[11,"deref_mut","","",135,[[]]],[11,"drop","","",135,[[]]],[11,"vzip","","",135,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"init","","",86,[[]]],[11,"deref","","",86,[[]]],[11,"deref_mut","","",86,[[]]],[11,"drop","","",86,[[]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"init","","",87,[[]]],[11,"deref","","",87,[[]]],[11,"deref_mut","","",87,[[]]],[11,"drop","","",87,[[]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"init","","",88,[[]]],[11,"deref","","",88,[[]]],[11,"deref_mut","","",88,[[]]],[11,"drop","","",88,[[]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"init","","",89,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",89,[[]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"init","","",90,[[]]],[11,"deref","","",90,[[]]],[11,"deref_mut","","",90,[[]]],[11,"drop","","",90,[[]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"init","","",91,[[]]],[11,"deref","","",91,[[]]],[11,"deref_mut","","",91,[[]]],[11,"drop","","",91,[[]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"init","","",92,[[]]],[11,"deref","","",92,[[]]],[11,"deref_mut","","",92,[[]]],[11,"drop","","",92,[[]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"init","","",93,[[]]],[11,"deref","","",93,[[]]],[11,"deref_mut","","",93,[[]]],[11,"drop","","",93,[[]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"init","","",98,[[]]],[11,"deref","","",98,[[]]],[11,"deref_mut","","",98,[[]]],[11,"drop","","",98,[[]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"vzip","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"vzip","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"vzip","","",111,[[]]],[11,"from","wasmer::module","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_string","","",119,[[],["string",3]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"init","","",119,[[]]],[11,"deref","","",119,[[]]],[11,"deref_mut","","",119,[[]]],[11,"drop","","",119,[[]]],[11,"vzip","","",119,[[]]],[11,"from","wasmer::vm","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"equivalent","","",123,[[]]],[11,"init","","",123,[[]]],[11,"deref","","",123,[[]]],[11,"deref_mut","","",123,[[]]],[11,"drop","","",123,[[]]],[11,"vzip","","",123,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"init","","",127,[[]]],[11,"deref","","",127,[[]]],[11,"deref_mut","","",127,[[]]],[11,"drop","","",127,[[]]],[11,"vzip","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"init","","",128,[[]]],[11,"deref","","",128,[[]]],[11,"deref_mut","","",128,[[]]],[11,"drop","","",128,[[]]],[11,"vzip","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"init","","",129,[[]]],[11,"deref","","",129,[[]]],[11,"deref_mut","","",129,[[]]],[11,"drop","","",129,[[]]],[11,"vzip","","",129,[[]]],[11,"clone","wasmer","",32,[[],["export",4]]],[11,"clone","","",36,[[],["namedresolverchain",3]]],[11,"clone","","",33,[[],["frameinfo",3]]],[11,"clone","","",38,[[],["runtimeerror",3]]],[11,"source","","",38,[[],[["option",4],["error",8]]]],[11,"source","","",30,[[],[["option",4],["error",8]]]],[11,"source","","",34,[[],[["option",4],["error",8]]]],[11,"source","","",39,[[],[["option",4],["error",8]]]],[11,"from","","",32,[[["exportglobal",3]],["export",4]]],[11,"from","","",52,[[["export",4]],["vmexport",4]]],[11,"from","","",32,[[["vmexport",4]],["export",4]]],[11,"from","","",39,[[["error",3]],["serializeerror",4]]],[11,"from","","",38,[[["trap",4]],["runtimeerror",3]]],[11,"from","","",30,[[["error",3]],["deserializeerror",4]]],[11,"from","","",32,[[["exportmemory",3]],["export",4]]],[11,"from","","",32,[[["exportfunction",3]],["export",4]]],[11,"from","","",32,[[["exporttable",3]],["export",4]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"resolve_by_name","","",36,[[],[["option",4],["export",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"extend","","",20,[[]]],[11,"extend","","",20,[[]]],[11,"default","","",26,[[],["target",3]]],[11,"bitand","","",23,[[]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_string","","",23,[[],["string",3]]],[11,"eq","","",23,[[["cpufeature",4]]]],[11,"eq","","",23,[[["enumset",3]]]],[11,"eq","","",26,[[["target",3]]]],[11,"ne","","",26,[[["target",3]]]],[11,"bitor","","",23,[[]]],[11,"from_str","","",23,[[],[["result",4],["cpufeature",4]]]],[11,"not","","",23,[[]]],[11,"clone","","",23,[[],["cpufeature",4]]],[11,"clone","","",26,[[],["target",3]]],[11,"hash","","",26,[[]]],[11,"hash","","",23,[[]]],[11,"bitxor","","",23,[[]]],[11,"sub","","",23,[[]]],[11,"from","","",22,[[["wasmerror",4]],["compileerror",4]]],[11,"from","","",27,[[["middlewareerror",3]],["wasmerror",4]]],[11,"from","","",22,[[["binaryreadererror",3]],["compileerror",4]]],[11,"from","","",27,[[["binaryreadererror",3]],["wasmerror",4]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"size_of_val","","",26,[[["memoryusagetracker",8]]]],[11,"default","","",24,[[],["features",3]]],[11,"reserved_value","","",44,[[],["localfunctionindex",3]]],[11,"is_reserved_value","","",44,[[]]],[11,"deref","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"cmp","","",42,[[["exportindex",4]],["ordering",4]]],[11,"cmp","","",44,[[["localfunctionindex",3]],["ordering",4]]],[11,"cmp","","",41,[[["bytes",3]],["ordering",4]]],[11,"cmp","","",46,[[["pages",3]],["ordering",4]]],[11,"fmt","wasmer::types","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::types","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::types","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::types","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::types","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::types","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","wasmer","",42,[[["exportindex",4]]]],[11,"ne","","",42,[[["exportindex",4]]]],[11,"eq","","",44,[[["localfunctionindex",3]]]],[11,"ne","","",44,[[["localfunctionindex",3]]]],[11,"eq","wasmer::types","",9,[[["mutability",4]]]],[11,"eq","","",10,[[["tabletype",3]]]],[11,"ne","","",10,[[["tabletype",3]]]],[11,"eq","","",4,[[["globaltype",3]]]],[11,"ne","","",4,[[["globaltype",3]]]],[11,"eq","","",3,[[["functiontype",3]]]],[11,"ne","","",3,[[["functiontype",3]]]],[11,"eq","","",0,[[["exporttype",3]]]],[11,"ne","","",0,[[["exporttype",3]]]],[11,"eq","","",7,[[["importtype",3]]]],[11,"ne","","",7,[[["importtype",3]]]],[11,"eq","wasmer","",46,[[["pages",3]]]],[11,"ne","","",46,[[["pages",3]]]],[11,"eq","","",24,[[["features",3]]]],[11,"ne","","",24,[[["features",3]]]],[11,"eq","wasmer::types","",8,[[["memorytype",3]]]],[11,"ne","","",8,[[["memorytype",3]]]],[11,"eq","","",1,[[["externref",4]]]],[11,"eq","","",11,[[["type",4]]]],[11,"eq","","",2,[[["externtype",4]]]],[11,"ne","","",2,[[["externtype",4]]]],[11,"eq","wasmer","",41,[[["bytes",3]]]],[11,"ne","","",41,[[["bytes",3]]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","wasmer::types","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","wasmer","",24,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","wasmer::types","",8,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","wasmer","",46,[[],["result",4]]],[11,"serialize","wasmer::types","",2,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","wasmer","",41,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"try_from","","",46,[[["bytes",3]],[["result",4],["pages",3]]]],[11,"clone","","",42,[[],["exportindex",4]]],[11,"clone","","",41,[[],["bytes",3]]],[11,"clone","wasmer::types","",11,[[],["type",4]]],[11,"clone","","",6,[[],["hostref",3]]],[11,"clone","","",3,[[],["functiontype",3]]],[11,"clone","","",2,[[],["externtype",4]]],[11,"clone","wasmer","",24,[[],["features",3]]],[11,"clone","wasmer::types","",0,[[],["exporttype",3]]],[11,"clone","wasmer","",44,[[],["localfunctionindex",3]]],[11,"clone","","",46,[[],["pages",3]]],[11,"clone","wasmer::types","",4,[[],["globaltype",3]]],[11,"clone","","",1,[[],["externref",4]]],[11,"clone","wasmer","",43,[[],["globalinit",4]]],[11,"clone","wasmer::types","",8,[[],["memorytype",3]]],[11,"clone","","",9,[[],["mutability",4]]],[11,"clone","","",7,[[],["importtype",3]]],[11,"clone","","",10,[[],["tabletype",3]]],[11,"hash","","",2,[[]]],[11,"hash","wasmer","",44,[[]]],[11,"hash","wasmer::types","",7,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",3,[[]]],[11,"hash","wasmer","",42,[[]]],[11,"hash","wasmer::types","",8,[[]]],[11,"hash","wasmer","",41,[[]]],[11,"hash","wasmer::types","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",0,[[]]],[11,"hash","wasmer","",46,[[]]],[11,"sub","","",46,[[],["pages",3]]],[11,"sub","","",41,[[],["bytes",3]]],[11,"deserialize","wasmer::types","",7,[[],[["result",4],["importtype",3]]]],[11,"deserialize","wasmer","",24,[[],[["result",4],["features",3]]]],[11,"deserialize","wasmer::types","",4,[[],[["globaltype",3],["result",4]]]],[11,"deserialize","wasmer","",46,[[],[["result",4],["pages",3]]]],[11,"deserialize","wasmer::types","",9,[[],[["result",4],["mutability",4]]]],[11,"deserialize","wasmer","",43,[[],[["globalinit",4],["result",4]]]],[11,"deserialize","wasmer::types","",11,[[],[["result",4],["type",4]]]],[11,"deserialize","","",3,[[],[["functiontype",3],["result",4]]]],[11,"deserialize","","",0,[[],[["result",4],["exporttype",3]]]],[11,"deserialize","wasmer","",44,[[],[["result",4],["localfunctionindex",3]]]],[11,"deserialize","wasmer::types","",2,[[],[["externtype",4],["result",4]]]],[11,"deserialize","","",10,[[],[["result",4],["tabletype",3]]]],[11,"deserialize","","",8,[[],[["result",4],["memorytype",3]]]],[11,"deserialize","wasmer","",41,[[],[["bytes",3],["result",4]]]],[11,"deserialize","","",42,[[],[["result",4],["exportindex",4]]]],[11,"from","","",46,[[],["pages",3]]],[11,"from","wasmer::types","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","wasmer","",41,[[],["bytes",3]]],[11,"from","wasmer::types","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","wasmer","",41,[[["pages",3]],["bytes",3]]],[11,"from","wasmer::types","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",9,[[],["mutability",4]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","wasmer","",41,[[],["bytes",3]]],[11,"from","wasmer::types","",3,[[],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"from","","",3,[[["functiontype",3]],["functiontype",3]]],[11,"from","","",3,[[],["functiontype",3]]],[11,"add","wasmer","",46,[[],["pages",3]]],[11,"add","","",41,[[],["bytes",3]]],[11,"partial_cmp","","",46,[[["pages",3]],[["ordering",4],["option",4]]]],[11,"lt","","",46,[[["pages",3]]]],[11,"le","","",46,[[["pages",3]]]],[11,"gt","","",46,[[["pages",3]]]],[11,"ge","","",46,[[["pages",3]]]],[11,"partial_cmp","","",41,[[["bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["bytes",3]]]],[11,"le","","",41,[[["bytes",3]]]],[11,"gt","","",41,[[["bytes",3]]]],[11,"ge","","",41,[[["bytes",3]]]],[11,"partial_cmp","","",42,[[["exportindex",4]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["exportindex",4]]]],[11,"le","","",42,[[["exportindex",4]]]],[11,"gt","","",42,[[["exportindex",4]]]],[11,"ge","","",42,[[["exportindex",4]]]],[11,"partial_cmp","","",44,[[["localfunctionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["localfunctionindex",3]]]],[11,"le","","",44,[[["localfunctionindex",3]]]],[11,"gt","","",44,[[["localfunctionindex",3]]]],[11,"ge","","",44,[[["localfunctionindex",3]]]],[11,"fmt","wasmer::types","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"new","wasmer","",44,[[],["localfunctionindex",3]]],[11,"index","","",44,[[]]],[11,"size_of_val","wasmer::types","",11,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer","",24,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer::types","",4,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",9,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer","",46,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer::types","",3,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer","",44,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer::types","",10,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer","",43,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",42,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer::types","",8,[[["memoryusagetracker",8]]]],[11,"eq","wasmer::vm","",123,[[["memorystyle",4]]]],[11,"ne","","",123,[[["memorystyle",4]]]],[11,"eq","","",47,[[["memoryerror",4]]]],[11,"ne","","",47,[[["memoryerror",4]]]],[11,"clone","","",128,[[],["vmmemorydefinition",3]]],[11,"clone","","",47,[[],["memoryerror",4]]],[11,"clone","","",127,[[],["tablestyle",4]]],[11,"clone","","",129,[[],["vmtabledefinition",3]]],[11,"clone","","",123,[[],["memorystyle",4]]],[11,"hash","","",47,[[]]],[11,"hash","","",127,[[]]],[11,"hash","","",123,[[]]],[11,"deserialize","","",127,[[],[["result",4],["tablestyle",4]]]],[11,"deserialize","","",123,[[],[["memorystyle",4],["result",4]]]],[11,"from","wasmer","",52,[[["vmexportglobal",3]],["vmexport",4]]],[11,"from","","",52,[[["vmexporttable",3]],["vmexport",4]]],[11,"from","","",52,[[["vmexportfunction",3]],["vmexport",4]]],[11,"from","","",52,[[["vmexportmemory",3]],["vmexport",4]]],[11,"fmt","wasmer::vm","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::vm","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"serialize","","",123,[[],["result",4]]],[11,"serialize","","",127,[[],["result",4]]],[11,"size_of_val","","",128,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",123,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",127,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",129,[[["memoryusagetracker",8]]]],[11,"eq","wasmer","",14,[[["operatingsystem",4]]]],[11,"ne","","",14,[[["operatingsystem",4]]]],[11,"eq","","",12,[[["architecture",4]]]],[11,"ne","","",12,[[["architecture",4]]]],[11,"eq","","",13,[[["callingconvention",4]]]],[11,"eq","","",16,[[["triple",3]]]],[11,"ne","","",16,[[["triple",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",12,[[],["architecture",4]]],[11,"clone","","",14,[[],["operatingsystem",4]]],[11,"clone","","",16,[[],["triple",3]]],[11,"clone","","",13,[[],["callingconvention",4]]],[11,"from_str","","",12,[[],[["result",4],["architecture",4]]]],[11,"from_str","","",14,[[],[["operatingsystem",4],["result",4]]]],[11,"from_str","","",16,[[],[["result",4],["triple",3]]]],[11,"hash","","",13,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",12,[[]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",54,[[],["craneliftoptlevel",4]]],[11,"clone","","",53,[[],["cranelift",3]]],[11,"default","","",53,[[],["cranelift",3]]],[11,"size_of_val","","",54,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",53,[[["memoryusagetracker",8]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"enable_pic","","",53,[[]]],[11,"enable_verifier","","",53,[[]]],[11,"compiler","","Transform it into the compiler",53,[[["global",3],["box",3],["cranelift",3]],[["global",3],["compiler",8],["box",3]]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",53,[[["modulemiddleware",8],["arc",3]]]],[11,"clone","","",56,[[],["jitengine",3]]],[11,"module","","",55,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",55,[[],["moduleinfo",3]]],[11,"module_mut","","",55,[[],[["moduleinfo",3],["option",4]]]],[11,"register_frame_info","","",55,[[]]],[11,"features","","",55,[[],["features",3]]],[11,"data_initializers","","",55,[[]]],[11,"memory_styles","","",55,[[],["primarymap",3]]],[11,"table_styles","","",55,[[],["primarymap",3]]],[11,"finished_functions","","",55,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",55,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",55,[[],["boxedslice",3]]],[11,"signatures","","",55,[[],["boxedslice",3]]],[11,"serialize","","",55,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"target","","The target",56,[[],["target",3]]],[11,"register_signature","","Register a signature",56,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"lookup_signature","","Lookup a signature",56,[[["vmsharedsignatureindex",3]],[["option",4],["functiontype",3]]]],[11,"validate","","Validates a WebAssembly module",56,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",56,[[["tunables",8]],[["compileerror",4],["arc",3],["result",4]]]],[11,"deserialize","","Deserializes a WebAssembly module",56,[[],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"id","","",56,[[],["engineid",3]]],[11,"cloned","","",56,[[],[["arc",3],["engine",8]]]],[11,"size_of_val","","",55,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",56,[[["memoryusagetracker",8]]]],[11,"to_export","","",61,[[],["export",4]]],[11,"get_self_from_extern","","",61,[[["extern",4]],[["result",4],["exporterror",4]]]],[11,"to_export","","",62,[[],["export",4]]],[11,"get_self_from_extern","","",62,[[["extern",4]],[["result",4],["exporterror",4]]]],[11,"to_export","","",63,[[],["export",4]]],[11,"get_self_from_extern","","",63,[[["extern",4]],[["result",4],["exporterror",4]]]],[11,"to_export","","",64,[[],["export",4]]],[11,"get_self_from_extern","","",64,[[["extern",4]],[["result",4],["exporterror",4]]]],[11,"to_export","","",75,[[],["export",4]]],[11,"get_self_from_extern","","",75,[[],[["result",4],["exporterror",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",69,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"call","wasmer::externals::function","",82,[[],[["vec",3],["result",4],["runtimeerror",3]]]],[11,"function_type","","",82,[[],["functiontype",3]]],[11,"call","","",83,[[],[["vec",3],["result",4],["runtimeerror",3]]]],[11,"function_type","","",83,[[],["functiontype",3]]],[11,"to_native","wasmer","",70,[[]]],[11,"from_native","","",70,[[]]],[11,"get_namespace_export","","",59,[[],[["option",4],["export",4]]]],[11,"get_namespace_exports","","",59,[[],["vec",3]]],[11,"comes_from_same_store","","",75,[[["store",3]]]],[11,"comes_from_same_store","","",136,[[["store",3]]]],[11,"into_checked_anyfunc","","",136,[[["store",3]],[["result",4],["runtimeerror",3],["vmcallercheckedanyfunc",3]]]],[11,"from_checked_anyfunc","","",136,[[["store",3],["vmcallercheckedanyfunc",3]]]],[11,"drop","","",58,[[]]],[11,"from","","",73,[[["exporterror",4]]]],[11,"from","","",75,[[["function",3]]]],[11,"from","","",75,[[["global",3]]]],[11,"from","","",75,[[["memory",3]]]],[11,"from","","",75,[[["table",3]]]],[11,"from","","",76,[[["instantiationerror",4]]]],[11,"from","","",76,[[["hostenviniterror",4]]]],[11,"from","wasmer::module","",119,[[["error",3]]]],[11,"from","","",119,[[["compileerror",4]]]],[11,"from","wasmer","",61,[[["nativefunc",3]]]],[11,"from","","",136,[[["function",3]]]],[11,"len","","",60,[[]]],[11,"into_iter","","",65,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"next","","",66,[[],["option",4]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[],["exports",3]]],[11,"clone","wasmer::externals::function","",80,[[],["wasmfunctiondefinition",3]]],[11,"clone","","",81,[[],["hostfunctiondefinition",3]]],[11,"clone","","",84,[[],["functiondefinition",4]]],[11,"clone","wasmer","",61,[[],["function",3]]],[11,"clone","wasmer::externals::function","",82,[[],["dynamicfunctionwithoutenv",3]]],[11,"clone","","",83,[[]]],[11,"clone","wasmer::externals::function::inner","",85,[[],["function",3]]],[11,"clone","wasmer","",62,[[],["global",3]]],[11,"clone","","",63,[[],["memory",3]]],[11,"clone","","",64,[[],["table",3]]],[11,"clone","","",75,[[],["extern",4]]],[11,"clone","","",65,[[],["importobject",3]]],[11,"clone","","",67,[[],["instance",3]]],[11,"clone","","",68,[[],["module",3]]],[11,"clone","","",69,[[],["nativefunc",3]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[],["store",3]]],[11,"clone","","",72,[[],["basetunables",3]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[],["exports",3]]],[11,"default","","",65,[[],["importobject",3]]],[11,"default","","",71,[[]]],[11,"eq","wasmer::externals::function","",80,[[["wasmfunctiondefinition",3]]]],[11,"ne","","",80,[[["wasmfunctiondefinition",3]]]],[11,"eq","","",81,[[["hostfunctiondefinition",3]]]],[11,"ne","","",81,[[["hostfunctiondefinition",3]]]],[11,"eq","","",84,[[["functiondefinition",4]]]],[11,"ne","","",84,[[["functiondefinition",4]]]],[11,"eq","wasmer","",61,[[["function",3]]]],[11,"ne","","",61,[[["function",3]]]],[11,"eq","wasmer::externals::function::inner","",85,[[["function",3]]]],[11,"ne","","",85,[[["function",3]]]],[11,"eq","wasmer","",70,[[]]],[11,"eq","","",71,[[]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::externals::function::inner","",85,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::module","",119,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::module","",119,[[["formatter",3]],["result",6]]],[11,"hash","wasmer::externals::function::inner","",85,[[]]],[11,"from_iter","wasmer","",59,[[["intoiterator",8]]]],[11,"source","","",76,[[],[["option",4],["error",8]]]],[11,"source","wasmer::module","",119,[[],[["option",4],["error",8]]]],[11,"size_of_val","wasmer","",59,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer::externals::function","",80,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",81,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",84,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer","",61,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",62,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",63,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",64,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",75,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",67,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",68,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",71,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",72,[[["memoryusagetracker",8]]]],[11,"memory_style","","Get a `MemoryStyle` for the provided `MemoryType`",72,[[["memorytype",3]],["memorystyle",4]]],[11,"table_style","","Get a [`TableStyle`] for the provided [`TableType`].",72,[[["tabletype",3]],["tablestyle",4]]],[11,"create_host_memory","","Create a memory owned by the host given a [`MemoryType`]…",72,[[["memorystyle",4],["memorytype",3]],[["memoryerror",4],["result",4],["arc",3]]]],[11,"create_vm_memory","","Create a memory owned by the VM given a [`MemoryType`] and…",72,[[["memorystyle",4],["nonnull",3],["vmmemorydefinition",3],["memorytype",3]],[["memoryerror",4],["result",4],["arc",3]]]],[11,"create_host_table","","Create a table owned by the host given a [`TableType`] and…",72,[[["tabletype",3],["tablestyle",4]],[["string",3],["result",4],["arc",3]]]],[11,"create_vm_table","","Create a table owned by the VM given a [`TableType`] and a…",72,[[["vmtabledefinition",3],["nonnull",3],["tabletype",3],["tablestyle",4]],[["string",3],["result",4],["arc",3]]]],[11,"resolve_by_name","","",65,[[],[["option",4],["export",4]]]],[11,"new","wasmer::types","Creates a new export which is exported with the given…",0,[[],["exporttype",3]]],[11,"name","","Returns the name by which this export is known by.",0,[[]]],[11,"ty","","Returns the type of this export.",0,[[]]],[11,"new","","Creates a new instance of `ExternRef` from `Box<dyn Any>`.",1,[[["global",3],["box",3],["any",8]],["externref",4]]],[11,"null","","Creates a `Null` reference.",1,[[],["externref",4]]],[11,"data","","Returns the data stored in the reference if available.",1,[[],[["ref",3],["box",3]]]],[11,"ptr_eq","","Returns true if the two `ExternRef<T>`\'s point to the same…",1,[[["externref",4]]]],[11,"host_info","","Returns a mutable reference to the host information if…",1,[[],[["refmut",3],["option",4]]]],[11,"set_host_info","","Sets the host information for an `ExternRef`.",1,[[["option",4],["box",3]]]],[11,"func","","Attempt to return the underlying type of this external…",2,[[],[["functiontype",3],["option",4]]]],[11,"unwrap_func","","Returns the underlying descriptor of this [`ExternType`],…",2,[[],["functiontype",3]]],[11,"global","","Attempt to return the underlying type of this external…",2,[[],[["option",4],["globaltype",3]]]],[11,"unwrap_global","","Returns the underlying descriptor of this [`ExternType`],…",2,[[],["globaltype",3]]],[11,"table","","Attempt to return the underlying type of this external…",2,[[],[["tabletype",3],["option",4]]]],[11,"unwrap_table","","Returns the underlying descriptor of this [`ExternType`],…",2,[[],["tabletype",3]]],[11,"memory","","Attempt to return the underlying type of this external…",2,[[],[["memorytype",3],["option",4]]]],[11,"unwrap_memory","","Returns the underlying descriptor of this [`ExternType`],…",2,[[],["memorytype",3]]],[11,"is_compatible_with","","Check if two externs are compatible",2,[[["externtype",4]]]],[11,"new","","Creates a new Function Type with the given parameter and…",3,[[],["functiontype",3]]],[11,"params","","Parameter types.",3,[[]]],[11,"results","","Return types.",3,[[]]],[11,"new","","Create a new Global variable",4,[[["mutability",4],["type",4]],["globaltype",3]]],[11,"new","","Creates a new `HostRef<T>` from `T`.",6,[[],["hostref",3]]],[11,"borrow","","Immutably borrows the wrapped data.",6,[[],["ref",3]]],[11,"borrow_mut","","Mutably borrows the wrapped data.",6,[[],["refmut",3]]],[11,"ptr_eq","","Returns true if the two `HostRef<T>`\'s point to the same…",6,[[["hostref",3]]]],[11,"externref","","Returns an opaque reference to the wrapped data in the…",6,[[],["externref",4]]],[11,"new","","Creates a new import descriptor which comes from `module`…",7,[[],["importtype",3]]],[11,"module","","Returns the module name that this import is expected to…",7,[[]]],[11,"name","","Returns the field name of the module that this import is…",7,[[]]],[11,"ty","","Returns the expected type of this import.",7,[[]]],[11,"new","","Creates a new descriptor for a WebAssembly memory given…",8,[[["option",4]],["memorytype",3]]],[11,"is_mutable","","Returns a boolean indicating if the enum is set to mutable.",9,[[]]],[11,"new","","Creates a new table descriptor which will contain the…",10,[[["option",4],["type",4]],["tabletype",3]]],[11,"is_num","","Returns true if `Type` matches any of the numeric types.…",11,[[]]],[11,"is_ref","","Returns true if `Type` matches either of the reference…",11,[[]]],[11,"endianness","wasmer","Return the endianness of this architecture.",12,[[],[["result",4],["endianness",4]]]],[11,"pointer_width","","Return the pointer bit width of this target\'s architecture.",12,[[],[["pointerwidth",4],["result",4]]]],[11,"host","","Return the architecture for the current host.",12,[[],["architecture",4]]],[11,"host","","Return the operating system for the current host.",14,[[],["operatingsystem",4]]],[11,"endianness","","Return the endianness of this target\'s architecture.",16,[[],[["result",4],["endianness",4]]]],[11,"pointer_width","","Return the pointer width of this target\'s architecture.",16,[[],[["pointerwidth",4],["result",4]]]],[11,"default_calling_convention","","Return the default calling convention for the given target…",16,[[],[["callingconvention",4],["result",4]]]],[11,"data_model","","The C data model for a given target. If the model is not…",16,[[],[["cdatamodel",4],["result",4]]]],[11,"unknown","","Return a `Triple` with all unknown fields.",16,[[],["triple",3]]],[11,"host","","Return the triple for the current host.",16,[[],["triple",3]]],[11,"new","","Create a new `MiddlewareError`",19,[[],["middlewareerror",3]]],[11,"push_operator","","Push an operator.",20,[[["operator",4]]]],[11,"for_host","","Retrieves the features for the current Host",23,[[],[["cpufeature",4],["enumset",3]]]],[11,"set","","Retrieves an empty set of `CpuFeature`s.",23,[[],[["cpufeature",4],["enumset",3]]]],[11,"new","","Create a new feature",24,[[],["features",3]]],[11,"threads","","Configures whether the WebAssembly threads proposal will…",24,[[],["features",3]]],[11,"reference_types","","Configures whether the WebAssembly reference types…",24,[[],["features",3]]],[11,"simd","","Configures whether the WebAssembly SIMD proposal will be…",24,[[],["features",3]]],[11,"bulk_memory","","Configures whether the WebAssembly bulk memory operations…",24,[[],["features",3]]],[11,"multi_value","","Configures whether the WebAssembly multi-value proposal…",24,[[],["features",3]]],[11,"tail_call","","Configures whether the WebAssembly tail-call proposal will…",24,[[],["features",3]]],[11,"module_linking","","Configures whether the WebAssembly tail-call proposal will…",24,[[],["features",3]]],[11,"multi_memory","","Configures whether the WebAssembly multi-memory proposal…",24,[[],["features",3]]],[11,"memory64","","Configures whether the WebAssembly 64-bit memory proposal…",24,[[],["features",3]]],[11,"new","","Creates a new target given a triple",26,[[["triple",3],["enumset",3],["cpufeature",4]],["target",3]]],[11,"triple","","The triple associated for the target.",26,[[],["triple",3]]],[11,"cpu_features","","The triple associated for the target.",26,[[],["enumset",3]]],[11,"func_index","","Returns the WebAssembly function index for this frame.",33,[[]]],[11,"module_name","","Returns the identifer of the module that this frame is for.",33,[[]]],[11,"function_name","","Returns a descriptive name of the function for this frame,…",33,[[],["option",4]]],[11,"module_offset","","Returns the offset within the original wasm module this…",33,[[]]],[11,"func_offset","","Returns the offset from the original wasm module\'s…",33,[[]]],[11,"new","","Creates a new generic `RuntimeError` with the given…",38,[[],["runtimeerror",3]]],[11,"from_trap","","Create a new RuntimeError from a Trap.",38,[[["trap",4]],["runtimeerror",3]]],[11,"raise","","Raises a custom user Error",38,[[["global",3],["error",8],["box",3]]]],[11,"message","","Returns a reference the `message` stored in `Trap`.",38,[[],["string",3]]],[11,"trace","","Returns a list of function frames in WebAssembly code that…",38,[[]]],[11,"downcast","","Attempts to downcast the `RuntimeError` to a concrete type.",38,[[],[["runtimeerror",3],["result",4]]]],[11,"to_trap","","Returns trap code, if it\'s a Trap",38,[[],[["trapcode",4],["option",4]]]],[11,"is","","Returns true if the `RuntimeError` is the same as T",38,[[]]],[11,"from_value","","Get the `GlobalInit` from a given `Value`",43,[[["value",4]],["globalinit",4]]],[11,"to_value","","Get the `Value` from the Global init value",43,[[],["value",4]]],[11,"from_u32","","Create a new instance from a `u32`.",44,[[],["localfunctionindex",3]]],[11,"as_u32","","Return the underlying index value as a `u32`.",44,[[]]],[11,"new","","Creates a new MemoryView given a `pointer` and `length`.",45,[[],[["nonatomically",3],["memoryview",3]]]],[11,"atomically","","Get atomic access to a memory view.",45,[[],[["atomically",3],["memoryview",3]]]],[11,"max_value","","Returns the largest value that can be represented by the…",46,[[],["pages",3]]],[11,"checked_add","","Checked addition. Computes `self + rhs`, returning `None`…",46,[[["pages",3]],[["option",4],["pages",3]]]],[11,"bytes","","Calculate number of bytes from pages.",46,[[],["bytes",3]]],[11,"new","","Creates a new configuration object with the default…",53,[[],["cranelift",3]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",53,[[],["cranelift",3]]],[11,"enable_simd","","Enable SIMD support.",53,[[],["cranelift",3]]],[11,"opt_level","","The optimization levels when optimizing the IR.",53,[[["craneliftoptlevel",4]],["cranelift",3]]],[11,"isa","","Generates the ISA for the provided target",53,[[["target",3]],[["global",3],["box",3],["targetisa",8]]]],[11,"flags","","Generates the flags for the compiler",53,[[],["flags",3]]],[11,"is_deserializable","","Check if the provided bytes look like a serialized…",55,[[]]],[11,"new","","Compile a data buffer into a `JITArtifact`, which may then…",55,[[["jitengine",3],["tunables",8]],[["result",4],["jitartifact",3],["compileerror",4]]]],[11,"deserialize","","Deserialize a JITArtifact",55,[[["jitengine",3]],[["deserializeerror",4],["result",4],["jitartifact",3]]]],[11,"from_parts","","Construct a `JITArtifact` from component parts.",55,[[["serializablemodule",3],["jitengineinner",3]],[["result",4],["jitartifact",3],["compileerror",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",55,[[["triple",3]]]],[11,"new","","Create a new `JITEngine` with the given config",56,[[["global",3],["target",3],["features",3],["compiler",8],["box",3]],["jitengine",3]]],[11,"headless","","Create a headless `JITEngine`",56,[[],["jitengine",3]]],[11,"new","","Create a new JIT",57,[[],["jit",3]]],[11,"headless","","Create a new headless JIT",57,[[],["jit",3]]],[11,"target","","Set the target",57,[[["target",3]],["jit",3]]],[11,"features","","Set the features",57,[[["features",3]],["jit",3]]],[11,"engine","","Build the `JITEngine` for this configuration",57,[[],["jitengine",3]]],[11,"offset_guard_size","wasmer::vm","Returns the offset-guard size",123,[[]]]],"p":[[3,"ExportType"],[4,"ExternRef"],[4,"ExternType"],[3,"FunctionType"],[3,"GlobalType"],[8,"HostInfo"],[3,"HostRef"],[3,"ImportType"],[3,"MemoryType"],[4,"Mutability"],[3,"TableType"],[4,"ValType"],[4,"Architecture"],[4,"CallingConvention"],[4,"OperatingSystem"],[13,"MacOSX"],[3,"Triple"],[8,"CompilerConfig"],[8,"FunctionMiddleware"],[3,"MiddlewareError"],[3,"MiddlewareReaderState"],[8,"ModuleMiddleware"],[4,"CompileError"],[4,"CpuFeature"],[3,"Features"],[4,"ParseCpuFeatureError"],[3,"Target"],[4,"WasmError"],[13,"InvalidWebAssembly"],[8,"ChainableNamedResolver"],[4,"DeserializeError"],[8,"Engine"],[4,"Export"],[3,"FrameInfo"],[4,"LinkError"],[8,"NamedResolver"],[3,"NamedResolverChain"],[8,"Resolver"],[3,"RuntimeError"],[4,"SerializeError"],[8,"Tunables"],[3,"Bytes"],[4,"ExportIndex"],[4,"GlobalInit"],[3,"LocalFunctionIndex"],[3,"MemoryView"],[3,"Pages"],[4,"MemoryError"],[13,"CouldNotGrow"],[13,"InvalidMemory"],[13,"MinimumMemoryTooLarge"],[13,"MaximumMemoryTooLarge"],[4,"VMExport"],[3,"Cranelift"],[4,"CraneliftOptLevel"],[3,"JITArtifact"],[3,"JITEngine"],[3,"JIT"],[3,"LazyInit"],[3,"Exports"],[3,"ExportsIterator"],[3,"Function"],[3,"Global"],[3,"Memory"],[3,"Table"],[3,"ImportObject"],[3,"ImportObjectIterator"],[3,"Instance"],[3,"Module"],[3,"NativeFunc"],[3,"WasmPtr"],[3,"Store"],[3,"BaseTunables"],[4,"HostEnvInitError"],[4,"ExportError"],[4,"Extern"],[4,"InstantiationError"],[8,"WasmerEnv"],[8,"Exportable"],[8,"ExportableWithGenerics"],[3,"WasmFunctionDefinition"],[3,"HostFunctionDefinition"],[3,"DynamicFunctionWithoutEnv"],[3,"DynamicFunctionWithEnv"],[4,"FunctionDefinition"],[3,"Function"],[3,"S1"],[3,"S2"],[3,"S3"],[3,"S4"],[3,"S5"],[3,"S6"],[3,"S7"],[3,"S8"],[3,"S9"],[3,"S10"],[3,"S11"],[3,"S12"],[3,"S13"],[3,"S14"],[3,"S15"],[3,"S16"],[3,"S17"],[3,"S18"],[3,"S19"],[3,"S20"],[3,"S21"],[3,"S22"],[3,"S23"],[3,"S24"],[3,"S25"],[3,"S26"],[8,"FromToNativeWasmType"],[8,"WasmTypeList"],[8,"IntoResult"],[8,"HostFunction"],[8,"VMDynamicFunction"],[8,"VMDynamicFunctionCall"],[8,"LikeNamespace"],[4,"IoCompileError"],[8,"StoreObject"],[8,"ValFuncRef"],[8,"Memory"],[4,"MemoryStyle"],[13,"Dynamic"],[13,"Static"],[8,"Table"],[4,"TableStyle"],[3,"VMMemoryDefinition"],[3,"VMTableDefinition"],[3,"Atomically"],[3,"Array"],[3,"Item"],[3,"WithEnv"],[3,"WithoutEnv"],[3,"S0"],[6,"Val"]]},\
"wasmer_c_api":{"doc":"Wasmer C API.","i":[[0,"deprecated","wasmer_c_api","Wasmer Runtime C APIWasmer is a standalone JIT WebAssembly…",null,null],[3,"wasmer_limits_t","wasmer_c_api::deprecated","The `wasmer_limits_t` struct is a type that describes the…",null,null],[12,"min","","The minimum number of allowed pages.",0,null],[12,"max","","The maximum number of allowed pages.",0,null],[3,"wasmer_limit_option_t","","The `wasmer_limit_option_t` struct represents an optional…",null,null],[12,"has_some","","Whether the limit is set.",1,null],[12,"some","","The limit value.",1,null],[3,"wasmer_byte_array","","",null,null],[12,"bytes","","",2,null],[12,"bytes_len","","",2,null],[4,"wasmer_result_t","","The `wasmer_result_t` enum is a type that represents…",null,null],[13,"WASMER_OK","","Represents a success.",3,null],[13,"WASMER_ERROR","","Represents a failure.",3,null],[0,"export","","Create, read, destroy export definitions (function,…",null,null],[3,"wasmer_export_t","wasmer_c_api::deprecated::export","Opaque pointer to `ImportType`.",null,null],[3,"wasmer_export_func_t","","Opaque pointer to `wasmer_export_t`.",null,null],[3,"wasmer_exports_t","","Opaque pointer to the opaque structure…",null,null],[3,"wasmer_export_descriptor_t","","Opaque pointer to `NamedExportDescriptor`.",null,null],[3,"NamedExportDescriptors","","Intermediate representation of a vector of…",null,null],[3,"wasmer_export_descriptors_t","","Opaque pointer to `NamedExportDescriptors`.",null,null],[19,"wasmer_import_export_value","","Union of import/export value.",null,null],[12,"func","","",4,null],[12,"table","","",4,null],[12,"memory","","",4,null],[12,"global","","",4,null],[4,"wasmer_import_export_kind","","List of export/import kinds.",null,null],[13,"WASM_FUNCTION","","The export/import is a function.",5,null],[13,"WASM_GLOBAL","","The export/import is a global.",5,null],[13,"WASM_MEMORY","","The export/import is a memory.",5,null],[13,"WASM_TABLE","","The export/import is a table.",5,null],[5,"wasmer_export_descriptors","","Gets export descriptors for the given module",null,[[]]],[5,"wasmer_export_descriptors_destroy","","Frees the memory for the given export descriptors",null,[[]]],[5,"wasmer_export_descriptors_len","","Gets the length of the export descriptors",null,[[],["c_int",6]]],[5,"wasmer_export_descriptors_get","","Gets export descriptor by index",null,[[["c_int",6]]]],[5,"wasmer_export_descriptor_name","","Gets name for the export descriptor",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_export_descriptor_kind","","Gets export descriptor kind",null,[[],["wasmer_import_export_kind",4]]],[5,"wasmer_exports_destroy","","Frees the memory for the given exports.",null,[[]]],[5,"wasmer_exports_len","","Gets the length of the exports",null,[[["nonnull",3],["option",4]],["c_int",6]]],[5,"wasmer_exports_get","","Gets wasmer_export by index",null,[[["nonnull",3],["option",4],["c_int",6]],[["nonnull",3],["option",4]]]],[5,"wasmer_export_kind","","Gets wasmer_export kind",null,[[],["wasmer_import_export_kind",4]]],[5,"wasmer_export_func_params_arity","","Sets the result parameter to the arity of the params of…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_func_params","","Sets the params buffer to the parameter types of the given…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_func_returns","","Sets the returns buffer to the parameter types of the…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_func_returns_arity","","Sets the result parameter to the arity of the returns of…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_to_func","","Gets export func from export",null,[[]]],[5,"wasmer_export_to_memory","","Gets a memory pointer from an export pointer.",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_name","","Gets name from wasmer_export",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_export_func_call","","Calls a `func` with the provided parameters. Results are…",null,[[["c_uint",6]],["wasmer_result_t",4]]],[11,"to_str","","",5,[[]]],[0,"global","wasmer_c_api::deprecated","Create, set, get and destroy global variables of an…",null,null],[3,"wasmer_global_descriptor_t","wasmer_c_api::deprecated::global","",null,null],[3,"wasmer_global_t","","",null,null],[5,"wasmer_global_new","","Creates a new Global and returns a pointer to it. The…",null,[[["wasmer_value_t",3]]]],[5,"wasmer_global_get","","Gets the value stored by the given Global",null,[[],["wasmer_value_t",3]]],[5,"wasmer_global_set","","Sets the value stored by the given Global",null,[[["wasmer_value_t",3]]]],[5,"wasmer_global_get_descriptor","","Returns a descriptor (type, mutability) of the given Global",null,[[],["wasmer_global_descriptor_t",3]]],[5,"wasmer_global_destroy","","Frees memory for the given Global",null,[[["option",4],["nonnull",3]]]],[0,"import","wasmer_c_api::deprecated","Create, read, destroy import definitions (function,…",null,null],[3,"wasmer_import_t","wasmer_c_api::deprecated::import","",null,null],[12,"module_name","","",6,null],[12,"import_name","","",6,null],[12,"tag","","",6,null],[12,"value","","",6,null],[3,"wasmer_import_object_t","","",null,null],[3,"wasmer_import_func_t","","",null,null],[3,"wasmer_import_descriptor_t","","",null,null],[3,"wasmer_import_descriptors_t","","",null,null],[3,"wasmer_import_object_iter_t","","",null,null],[3,"wasmer_wasi_map_dir_entry_t","","Opens a directory that\'s visible to the WASI module as…",null,null],[12,"alias","","What the WASI module will see in its virtual root",7,null],[12,"host_file_path","","The backing file that the WASI module will interact with…",7,null],[3,"NamedImportDescriptors","","",null,null],[4,"Version","","",null,null],[13,"Unknown","","Version cannot be detected or is unknown.",8,null],[13,"Latest","","Latest version. See `wasmer_wasi::WasiVersion::Latest` to…",8,null],[13,"Snapshot0","","`wasi_unstable`.",8,null],[13,"Snapshot1","","`wasi_snapshot_preview1`.",8,null],[5,"wasmer_import_object_new","","Creates a new empty import object. See also…",null,[[],[["wasmer_import_object_t",3],["nonnull",3]]]],[5,"wasmer_wasi_generate_import_object","","Creates a WASI import object.",null,[[["c_uint",6]]]],[5,"wasmer_wasi_generate_import_object_for_version","","Creates a WASI import object for a specific version.",null,[[["c_uchar",6],["c_uint",6]]]],[5,"wasmer_wasi_get_version","","Find the version of WASI used by the module.",null,[[],["version",4]]],[5,"wasmer_wasi_generate_default_import_object","","Convenience function that creates a WASI import object…",null,[[]]],[5,"wasmer_import_object_get_import","","Gets an entry from an ImportObject at the name and…",null,[[["wasmer_byte_array",3]],["wasmer_result_t",4]]],[5,"wasmer_import_object_iterate_functions","","Create an iterator over the functions in the import…",null,[[]]],[5,"wasmer_import_object_iter_next","","Writes the next value to `import`. `WASMER_ERROR` is…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_object_iter_at_end","","Returns true if further calls to…",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_import_object_iter_destroy","","Frees the memory allocated by…",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_import_object_imports_destroy","","Frees the memory allocated in…",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_import_object_extend","","Extends an existing import object with new imports",null,[[["c_uint",6]],["wasmer_result_t",4]]],[5,"wasmer_import_descriptors","","Gets import descriptors for the given module",null,[[["option",4],["wasmer_module_t",3]]]],[5,"wasmer_import_descriptors_destroy","","Frees the memory for the given import descriptors",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_import_descriptors_len","","Gets the length of the import descriptors",null,[[["option",4],["nonnull",3]],["c_uint",6]]],[5,"wasmer_import_descriptors_get","","Gets import descriptor by index",null,[[["c_uint",6],["option",4],["nonnull",3]],[["nonnull",3],["option",4]]]],[5,"wasmer_import_descriptor_name","","Gets name for the import descriptor",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_import_descriptor_module_name","","Gets module name for the import descriptor",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_import_descriptor_kind","","Gets export descriptor kind",null,[[],["wasmer_import_export_kind",4]]],[5,"wasmer_import_func_params_arity","","Sets the result parameter to the arity of the params of…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_func_new","","Creates new host function, aka imported function. `func`…",null,[[["c_uint",6]]]],[5,"wasmer_trap","","Stop the execution of a host function, aka imported…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_func_params","","Sets the params buffer to the parameter types of the given…",null,[[["c_uint",6]],["wasmer_result_t",4]]],[5,"wasmer_import_func_returns","","Sets the returns buffer to the parameter types of the…",null,[[["c_uint",6]],["wasmer_result_t",4]]],[5,"wasmer_import_func_returns_arity","","Sets the result parameter to the arity of the returns of…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_func_destroy","","Frees memory for the given Func",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_import_object_destroy","","Frees memory of the given ImportObject",null,[[["option",4],["nonnull",3]]]],[11,"as_tuple","","Converts the data into owned, Rust types",7,[[],[["result",4],["utf8error",3]]]],[0,"instance","wasmer_c_api::deprecated","Instantiate a module, call functions, and read exports.",null,null],[3,"wasmer_instance_t","wasmer_c_api::deprecated::instance","Opaque pointer to an Instance type plus metadata.",null,null],[3,"wasmer_instance_context_t","","Opaque pointer to a `wasmer_vm::Ctx` value in Rust.",null,null],[5,"wasmer_instantiate","","Creates a new WebAssembly instance from the given bytes…",null,[[["option",4],["c_int",6],["nonnull",3]],["wasmer_result_t",4]]],[5,"wasmer_instance_context_get","","Returns the instance context. Learn more by looking at the…",null,[[["option",4],["nonnull",3]],[["wasmer_instance_context_t",3],["option",4]]]],[5,"wasmer_instance_call","","Calls an exported function of a WebAssembly instance by…",null,[[],["wasmer_result_t",4]]],[5,"wasmer_instance_exports","","Gets all the exports of the given WebAssembly instance.",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_instance_context_data_set","","Sets the data that can be hold by an instance context.",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_instance_context_memory","","Gets the `memory_idx`th memory of the instance.",null,[[],[["wasmer_memory_t",3],["option",4]]]],[5,"wasmer_instance_context_data_get","","Gets the data that can be hold by an instance.",null,[[["wasmer_instance_context_t",3],["option",4]],[["option",4],["nonnull",3]]]],[5,"wasmer_instance_destroy","","Frees memory for the given `wasmer_instance_t`.",null,[[["option",4],["nonnull",3]]]],[0,"memory","wasmer_c_api::deprecated","Create, read, write, grow, destroy memory of an instance.",null,null],[3,"wasmer_memory_t","wasmer_c_api::deprecated::memory","Opaque pointer to a `wasmer_vm::Memory` value in Rust.",null,null],[5,"wasmer_memory_new","","Creates a new empty WebAssembly memory for the given…",null,[[["wasmer_limits_t",3]],["wasmer_result_t",4]]],[5,"wasmer_memory_grow","","Grows a memory by the given number of pages (of 65Kb each).",null,[[],["wasmer_result_t",4]]],[5,"wasmer_memory_length","","Reads the current length (in pages) of the given memory.",null,[[]]],[5,"wasmer_memory_data","","Gets a pointer to the beginning of the contiguous memory…",null,[[]]],[5,"wasmer_memory_data_length","","Gets the size in bytes of the memory data.",null,[[]]],[5,"wasmer_memory_destroy","","Frees memory for the given `wasmer_memory_t`.",null,[[]]],[0,"module","wasmer_c_api::deprecated","Compile, validate, instantiate, serialize, and destroy…",null,null],[3,"wasmer_module_t","wasmer_c_api::deprecated::module","",null,null],[3,"wasmer_serialized_module_t","","",null,null],[5,"wasmer_compile","","Creates a new Module from the given wasm bytes.",null,[[],["wasmer_result_t",4]]],[5,"wasmer_validate","","Validates a sequence of bytes hoping it represents a valid…",null,[[]]],[5,"wasmer_module_instantiate","","Creates a new Instance from the given module and imports.",null,[[["c_int",6]],["wasmer_result_t",4]]],[5,"wasmer_module_import_instantiate","","Given:",null,[[],["wasmer_result_t",4]]],[5,"wasmer_module_serialize","","Serialize the given Module.",null,[[],["wasmer_result_t",4]]],[5,"wasmer_serialized_module_bytes","","Get bytes of the serialized module.",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_serialized_module_from_bytes","","Transform a sequence of bytes into a serialized module.",null,[[],["wasmer_result_t",4]]],[5,"wasmer_module_deserialize","","Deserialize the given serialized module.",null,[[["option",4],["wasmer_serialized_module_t",3]],["wasmer_result_t",4]]],[5,"wasmer_serialized_module_destroy","","Frees memory for the given serialized Module.",null,[[]]],[5,"wasmer_module_destroy","","Frees memory for the given Module",null,[[]]],[0,"table","wasmer_c_api::deprecated","Create, grow, destroy tables of an instance.",null,null],[3,"wasmer_table_t","wasmer_c_api::deprecated::table","",null,null],[5,"wasmer_table_new","","Creates a new Table for the given descriptor and…",null,[[["wasmer_limits_t",3]],["wasmer_result_t",4]]],[5,"wasmer_table_grow","","Grows a Table by the given number of elements.",null,[[],["wasmer_result_t",4]]],[5,"wasmer_table_length","","Returns the current length of the given Table",null,[[]]],[5,"wasmer_table_destroy","","Frees memory for the given Table",null,[[["option",4],["nonnull",3]]]],[0,"value","wasmer_c_api::deprecated","Create and map Rust to WebAssembly values.",null,null],[3,"wasmer_value_t","wasmer_c_api::deprecated::value","Represents a WebAssembly type and value pair, i.e.…",null,null],[12,"tag","","The value type.",9,null],[12,"value","","The value.",9,null],[19,"wasmer_value","","Represents a WebAssembly value.",null,null],[12,"I32","","",10,null],[12,"I64","","",10,null],[12,"F32","","",10,null],[12,"F64","","",10,null],[4,"wasmer_value_tag","","Represents all possibles WebAssembly value types.",null,null],[13,"WASM_I32","","Represents the `i32` WebAssembly type.",11,null],[13,"WASM_I64","","Represents the `i64` WebAssembly type.",11,null],[13,"WASM_F32","","Represents the `f32` WebAssembly type.",11,null],[13,"WASM_F64","","Represents the `f64` WebAssembly type.",11,null],[11,"as_slice","wasmer_c_api::deprecated","Get the data as a slice",2,[[]]],[11,"as_vec","","Copy the data into an owned Vec",2,[[],["vec",3]]],[11,"as_str","","Read the data as a &str, returns an error if the string is…",2,[[],[["result",4],["utf8error",3]]]],[0,"error","wasmer_c_api","Utilities to read errors.",null,null],[3,"CApiError","wasmer_c_api::error","Rust type to represent a C API error.",null,null],[12,"msg","","The error message.",12,null],[5,"update_last_error","","Rust function to register a new error.",null,[[["error",8]]]],[5,"wasmer_last_error_length","","Gets the length in bytes of the last error if any, zero…",null,[[],["c_int",6]]],[5,"wasmer_last_error_message","","Gets the last error message if any into the provided…",null,[[["option",4],["c_int",6],["nonnull",3]],["c_int",6]]],[0,"wasm_c_api","wasmer_c_api","Implementation of the official WebAssembly C API for Wasmer.",null,null],[0,"macros","wasmer_c_api::wasm_c_api","Private Rust macros.",null,null],[0,"engine","","An engine drives the compilation and the runtime.",null,null],[3,"wasm_config_t","wasmer_c_api::wasm_c_api::engine","A configuration holds the compiler and the engine used by…",null,null],[3,"wasm_engine_t","","An engine is used by the store to drive the compilation…",null,null],[4,"wasmer_compiler_t","","Kind of compilers that can be used by the engines.",null,null],[13,"CRANELIFT","","Variant to represent the Cranelift compiler. See the…",13,null],[13,"LLVM","","Variant to represent the LLVM compiler. See the…",13,null],[13,"SINGLEPASS","","Variant to represent the Singlepass compiler. See the…",13,null],[4,"wasmer_engine_t","","Kind of engines that can be used by the store.",null,null],[13,"JIT","","Variant to represent the JIT engine. See the…",14,null],[13,"NATIVE","","Variant to represent the Native engine. See the…",14,null],[13,"OBJECT_FILE","","Variant to represent the Object File engine. See the…",14,null],[5,"wasm_config_new","","Create a new default Wasmer configuration.",null,[[],[["box",3],["wasm_config_t",3]]]],[5,"wasm_config_delete","","Delete a Wasmer config object.",null,[[["box",3],["option",4]]]],[5,"wasm_config_set_compiler","","Updates the configuration to specify a particular compiler…",null,[[["wasm_config_t",3],["wasmer_compiler_t",4]]]],[5,"wasm_config_set_engine","","Updates the configuration to specify a particular engine…",null,[[["wasm_config_t",3],["wasmer_engine_t",4]]]],[5,"wasm_engine_new","","Creates a new JIT engine with the default compiler.",null,[[],[["wasm_engine_t",3],["box",3]]]],[5,"wasm_engine_delete","","Deletes an engine.",null,[[["option",4],["box",3]]]],[5,"wasm_engine_new_with_config","","Creates an engine with a particular configuration.",null,[[["box",3],["option",4]],[["option",4],["box",3]]]],[0,"externals","wasmer_c_api::wasm_c_api","cbindgen:ignore",null,null],[3,"wasm_func_t","wasmer_c_api::wasm_c_api::externals","",null,null],[3,"wasm_global_t","","",null,null],[3,"wasm_memory_t","","",null,null],[3,"wasm_table_t","","",null,null],[3,"wasm_extern_t","","",null,null],[3,"wasm_extern_vec_t","","Represents a vector of `wasm_extern_t`.",null,null],[12,"size","","",15,null],[12,"data","","",15,null],[5,"wasm_func_new","","",null,[[["option",4],["option",4],["wasm_functype_t",3],["option",4],["wasm_store_t",3],["wasm_func_callback_t",6]],[["box",3],["option",4]]]],[5,"wasm_func_new_with_env","","",null,[[["wasm_env_finalizer_t",6],["wasm_func_callback_with_env_t",6],["option",4],["wasm_store_t",3],["option",4],["option",4],["wasm_functype_t",3],["option",4]],[["box",3],["option",4]]]],[5,"wasm_func_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_func_call","","",null,[[["wasm_func_t",3],["option",4],["wasm_val_vec_t",3],["wasm_val_vec_t",3],["option",4]],[["box",3],["option",4]]]],[5,"wasm_func_param_arity","","",null,[[["wasm_func_t",3]]]],[5,"wasm_func_result_arity","","",null,[[["wasm_func_t",3]]]],[5,"wasm_func_type","","",null,[[["wasm_func_t",3],["option",4]],[["option",4],["box",3]]]],[5,"wasm_global_new","","",null,[[["wasm_val_t",3],["option",4],["option",4],["wasm_store_t",3],["wasm_globaltype_t",3],["option",4]],[["option",4],["box",3]]]],[5,"wasm_global_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_global_copy","","",null,[[["wasm_global_t",3]],[["box",3],["wasm_global_t",3]]]],[5,"wasm_global_get","","",null,[[["wasm_global_t",3],["wasm_val_t",3]]]],[5,"wasm_global_set","","Note: This function returns nothing by design but it can…",null,[[["wasm_val_t",3],["wasm_global_t",3]]]],[5,"wasm_global_same","","",null,[[["wasm_global_t",3]]]],[5,"wasm_global_type","","",null,[[["wasm_global_t",3]],[["box",3],["wasm_globaltype_t",3]]]],[5,"wasm_memory_new","","",null,[[["wasm_memorytype_t",3],["option",4],["option",4],["wasm_store_t",3]],[["option",4],["box",3]]]],[5,"wasm_memory_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_memory_copy","","",null,[[["wasm_memory_t",3]],[["box",3],["wasm_memory_t",3]]]],[5,"wasm_memory_type","","",null,[[["option",4],["wasm_memory_t",3]],[["option",4],["box",3]]]],[5,"wasm_memory_data","","",null,[[["wasm_memory_t",3]]]],[5,"wasm_memory_data_size","","",null,[[["wasm_memory_t",3]]]],[5,"wasm_memory_size","","",null,[[["wasm_memory_t",3]]]],[5,"wasm_memory_grow","","",null,[[["wasm_memory_t",3]]]],[5,"wasm_memory_same","","",null,[[["wasm_memory_t",3]]]],[5,"wasm_table_new","","",null,[[["option",4],["wasm_tabletype_t",3],["option",4],["wasm_store_t",3]],[["option",4],["box",3]]]],[5,"wasm_table_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_table_copy","","",null,[[["wasm_table_t",3]],[["wasm_table_t",3],["box",3]]]],[5,"wasm_table_same","","",null,[[["wasm_table_t",3]]]],[5,"wasm_table_size","","",null,[[["wasm_table_t",3]]]],[5,"wasm_table_grow","","",null,[[["wasm_table_size_t",6],["wasm_table_t",3]]]],[5,"wasm_extern_vec_new","","Creates a new vector of [`wasm_extern_t`].",null,[[]]],[5,"wasm_extern_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_extern_t`].",null,[[]]],[5,"wasm_extern_vec_copy","","Performs a deep copy of a vector of [`wasm_extern_t`].",null,[[["wasm_extern_vec_t",3],["wasm_extern_vec_t",3]]]],[5,"wasm_extern_vec_delete","","Deletes a vector of [`wasm_extern_t`].",null,[[["wasm_extern_vec_t",3],["option",4]]]],[5,"wasm_extern_vec_new_empty","","Creates an empty vector of [`wasm_extern_t`].",null,[[]]],[5,"wasm_extern_copy","","Copy a `wasm_extern_t`.",null,[[["wasm_extern_t",3]],[["wasm_extern_t",3],["box",3]]]],[5,"wasm_extern_delete","","Delete an extern.",null,[[["box",3],["option",4]]]],[5,"wasm_func_as_extern","","",null,[[["wasm_func_t",3],["option",4]],[["box",3],["option",4]]]],[5,"wasm_global_as_extern","","",null,[[["option",4],["wasm_global_t",3]],[["box",3],["option",4]]]],[5,"wasm_memory_as_extern","","",null,[[["option",4],["wasm_memory_t",3]],[["box",3],["option",4]]]],[5,"wasm_table_as_extern","","",null,[[["option",4],["wasm_table_t",3]],[["box",3],["option",4]]]],[5,"wasm_extern_as_func","","",null,[[["option",4],["wasm_extern_t",3]],[["box",3],["option",4]]]],[5,"wasm_extern_as_global","","",null,[[["option",4],["wasm_extern_t",3]],[["option",4],["box",3]]]],[5,"wasm_extern_as_memory","","",null,[[["option",4],["wasm_extern_t",3]],[["option",4],["box",3]]]],[5,"wasm_extern_as_table","","",null,[[["option",4],["wasm_extern_t",3]],[["option",4],["box",3]]]],[6,"wasm_func_callback_t","","",null,null],[6,"wasm_func_callback_with_env_t","","",null,null],[6,"wasm_env_finalizer_t","","",null,null],[11,"into_slice","","",15,[[],["option",4]]],[0,"instance","wasmer_c_api::wasm_c_api","A WebAssembly instance is a stateful, executable instance…",null,null],[3,"wasm_instance_t","wasmer_c_api::wasm_c_api::instance","Opaque type representing a WebAssembly instance.",null,null],[5,"wasm_instance_new","","Creates a new instance from a WebAssembly module and a set…",null,[[["wasm_extern_vec_t",3],["option",4],["option",4],["wasm_store_t",3],["wasm_module_t",3],["option",4]],[["box",3],["option",4]]]],[5,"wasm_instance_delete","","Deletes an instance.",null,[[["box",3],["option",4]]]],[5,"wasm_instance_exports","","Gets the exports of the instance.",null,[[["wasm_extern_vec_t",3],["wasm_instance_t",3]]]],[0,"module","wasmer_c_api::wasm_c_api","A WebAssembly module contains stateless WebAssembly code…",null,null],[3,"wasm_module_t","wasmer_c_api::wasm_c_api::module","Opaque type representing a WebAssembly module.",null,null],[5,"wasm_module_new","","A WebAssembly module contains stateless WebAssembly code…",null,[[["wasm_byte_vec_t",3],["option",4],["wasm_store_t",3],["option",4]],[["box",3],["option",4]]]],[5,"wasm_module_delete","","Deletes a WebAssembly module.",null,[[["box",3],["option",4]]]],[5,"wasm_module_validate","","Validates a new WebAssembly module given the configuration…",null,[[["wasm_byte_vec_t",3],["option",4],["wasm_store_t",3],["option",4]]]],[5,"wasm_module_exports","","Returns an array of the exported types in the module.",null,[[["wasm_exporttype_vec_t",3],["wasm_module_t",3]]]],[5,"wasm_module_imports","","Returns an array of the imported types in the module.",null,[[["wasm_module_t",3],["wasm_importtype_vec_t",3]]]],[5,"wasm_module_deserialize","","Deserializes a serialized module binary into a…",null,[[["wasm_store_t",3]],[["option",4],["nonnull",3]]]],[5,"wasm_module_serialize","","Serializes a module into a binary representation that the…",null,[[["wasm_module_t",3],["wasm_byte_vec_t",3]]]],[0,"store","wasmer_c_api::wasm_c_api","A store represents all global state that can be…",null,null],[3,"wasm_store_t","wasmer_c_api::wasm_c_api::store","Opaque type representing a WebAssembly store.",null,null],[5,"wasm_store_new","","Creates a new WebAssembly store given a specific…",null,[[["wasm_engine_t",3],["option",4]],[["option",4],["box",3]]]],[5,"wasm_store_delete","","Deletes a WebAssembly store.",null,[[["option",4],["box",3]]]],[0,"trap","wasmer_c_api::wasm_c_api","cbindgen:ignore",null,null],[3,"wasm_trap_t","wasmer_c_api::wasm_c_api::trap","",null,null],[5,"wasm_trap_new","","",null,[[["wasm_message_t",6],["wasm_store_t",3]],[["box",3],["option",4]]]],[5,"wasm_trap_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_trap_message","","",null,[[["wasm_trap_t",3],["wasm_byte_vec_t",3]]]],[5,"wasm_trap_origin","","",null,[[["wasm_trap_t",3]],[["option",4],["box",3]]]],[5,"wasm_trap_trace","","",null,[[["wasm_trap_t",3],["wasm_frame_vec_t",3]]]],[0,"types","wasmer_c_api::wasm_c_api","cbindgen:ignore",null,null],[3,"wasm_exporttype_t","wasmer_c_api::wasm_c_api::types","",null,null],[3,"wasm_exporttype_vec_t","","Represents a vector of `wasm_exporttype_t`.",null,null],[12,"size","","",16,null],[12,"data","","",16,null],[3,"wasm_externtype_t","","",null,null],[3,"ExternTypeConversionError","","",null,null],[3,"wasm_frame_t","","",null,null],[3,"wasm_frame_vec_t","","Represents a vector of `wasm_frame_t`.",null,null],[12,"size","","",17,null],[12,"data","","",17,null],[3,"wasm_functype_t","","",null,null],[3,"wasm_functype_vec_t","","Represents a vector of `wasm_functype_t`.",null,null],[12,"size","","",18,null],[12,"data","","",18,null],[3,"wasm_globaltype_t","","",null,null],[3,"wasm_globaltype_vec_t","","Represents a vector of `wasm_globaltype_t`.",null,null],[12,"size","","",19,null],[12,"data","","",19,null],[3,"wasm_importtype_t","","",null,null],[3,"wasm_importtype_vec_t","","Represents a vector of `wasm_importtype_t`.",null,null],[12,"size","","",20,null],[12,"data","","",20,null],[3,"wasm_memorytype_t","","",null,null],[3,"wasm_memorytype_vec_t","","Represents a vector of `wasm_memorytype_t`.",null,null],[12,"size","","",21,null],[12,"data","","",21,null],[3,"wasm_limits_t","","",null,null],[3,"wasm_tabletype_t","","",null,null],[3,"wasm_tabletype_vec_t","","Represents a vector of `wasm_tabletype_t`.",null,null],[12,"size","","",22,null],[12,"data","","",22,null],[3,"wasm_valtype_t","","",null,null],[3,"wasm_valtype_vec_t","","Represents a vector of `wasm_valtype_t`.",null,null],[12,"size","","",23,null],[12,"data","","",23,null],[3,"wasm_byte_vec_t","","Represents a vector of `wasm_byte_t`.",null,null],[12,"size","","",24,null],[12,"data","","",24,null],[3,"wasm_ref_t","","",null,null],[4,"wasm_externkind_enum","","",null,null],[13,"WASM_EXTERN_FUNC","","",25,null],[13,"WASM_EXTERN_GLOBAL","","",25,null],[13,"WASM_EXTERN_TABLE","","",25,null],[13,"WASM_EXTERN_MEMORY","","",25,null],[4,"wasm_mutability_enum","","",null,null],[13,"WASM_CONST","","",26,null],[13,"WASM_VAR","","",26,null],[4,"wasm_valkind_enum","","",null,null],[13,"WASM_I32","","",27,null],[13,"WASM_I64","","",27,null],[13,"WASM_F32","","",27,null],[13,"WASM_F64","","",27,null],[13,"WASM_ANYREF","","",27,null],[13,"WASM_FUNCREF","","",27,null],[5,"wasm_exporttype_vec_new","","Creates a new vector of [`wasm_exporttype_t`].",null,[[]]],[5,"wasm_exporttype_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_exporttype_t`].",null,[[]]],[5,"wasm_exporttype_vec_copy","","Performs a deep copy of a vector of [`wasm_exporttype_t`].",null,[[["wasm_exporttype_vec_t",3],["wasm_exporttype_vec_t",3]]]],[5,"wasm_exporttype_vec_delete","","Deletes a vector of [`wasm_exporttype_t`].",null,[[["option",4],["wasm_exporttype_vec_t",3]]]],[5,"wasm_exporttype_vec_new_empty","","Creates an empty vector of [`wasm_exporttype_t`].",null,[[]]],[5,"wasm_exporttype_new","","",null,[[["option",4],["box",3],["box",3],["option",4]],[["option",4],["box",3]]]],[5,"wasm_exporttype_name","","",null,[[["wasm_exporttype_t",3]],["wasm_name_t",6]]],[5,"wasm_exporttype_type","","",null,[[["wasm_exporttype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_exporttype_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_extern_type","","",null,[[["wasm_extern_t",3]],[["wasm_externtype_t",3],["box",3]]]],[5,"wasm_extern_kind","","",null,[[["wasm_extern_t",3]]]],[5,"wasm_externtype_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_externtype_copy","","",null,[[["wasm_externtype_t",3]],[["wasm_externtype_t",3],["box",3]]]],[5,"wasm_externtype_kind","","",null,[[["wasm_externtype_t",3]]]],[5,"wasm_externtype_as_functype_const","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_functype_t",3]]]],[5,"wasm_externtype_as_functype","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_functype_t",3]]]],[5,"wasm_functype_as_externtype_const","","",null,[[["wasm_functype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_functype_as_externtype","","",null,[[["wasm_functype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_externtype_as_globaltype_const","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_globaltype_t",3]]]],[5,"wasm_externtype_as_globaltype","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_globaltype_t",3]]]],[5,"wasm_globaltype_as_externtype_const","","",null,[[["wasm_globaltype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_globaltype_as_externtype","","",null,[[["wasm_globaltype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_externtype_as_tabletype_const","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_tabletype_t",3]]]],[5,"wasm_externtype_as_tabletype","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_tabletype_t",3]]]],[5,"wasm_tabletype_as_externtype_const","","",null,[[["wasm_tabletype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_tabletype_as_externtype","","",null,[[["wasm_tabletype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_externtype_as_memorytype_const","","",null,[[["wasm_externtype_t",3]],[["wasm_memorytype_t",3],["option",4]]]],[5,"wasm_externtype_as_memorytype","","",null,[[["wasm_externtype_t",3]],[["wasm_memorytype_t",3],["option",4]]]],[5,"wasm_memorytype_as_externtype_const","","",null,[[["wasm_memorytype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_memorytype_as_externtype","","",null,[[["wasm_memorytype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_frame_copy","","",null,[[["wasm_frame_t",3]],[["box",3],["wasm_frame_t",3]]]],[5,"wasm_frame_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_frame_instance","","",null,[[["wasm_frame_t",3]]]],[5,"wasm_frame_func_index","","",null,[[["wasm_frame_t",3]]]],[5,"wasm_frame_func_offset","","",null,[[["wasm_frame_t",3]]]],[5,"wasm_frame_module_offset","","",null,[[["wasm_frame_t",3]]]],[5,"wasm_frame_vec_new","","Creates a new vector of [`wasm_frame_t`].",null,[[]]],[5,"wasm_frame_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_frame_t`].",null,[[]]],[5,"wasm_frame_vec_copy","","Performs a deep copy of a vector of [`wasm_frame_t`].",null,[[["wasm_frame_vec_t",3],["wasm_frame_vec_t",3]]]],[5,"wasm_frame_vec_delete","","Deletes a vector of [`wasm_frame_t`].",null,[[["wasm_frame_vec_t",3],["option",4]]]],[5,"wasm_frame_vec_new_empty","","Creates an empty vector of [`wasm_frame_t`].",null,[[]]],[5,"wasm_functype_vec_new","","Creates a new vector of [`wasm_functype_t`].",null,[[]]],[5,"wasm_functype_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_functype_t`].",null,[[]]],[5,"wasm_functype_vec_copy","","Performs a deep copy of a vector of [`wasm_functype_t`].",null,[[["wasm_functype_vec_t",3],["wasm_functype_vec_t",3]]]],[5,"wasm_functype_vec_delete","","Deletes a vector of [`wasm_functype_t`].",null,[[["wasm_functype_vec_t",3],["option",4]]]],[5,"wasm_functype_vec_new_empty","","Creates an empty vector of [`wasm_functype_t`].",null,[[]]],[5,"wasm_functype_new","","",null,[[["wasm_valtype_vec_t",3],["option",4]],[["option",4],["box",3]]]],[5,"wasm_functype_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_functype_copy","","",null,[[["option",4],["wasm_functype_t",3]],[["option",4],["box",3]]]],[5,"wasm_functype_params","","",null,[[["option",4],["wasm_functype_t",3]],[["option",4],["wasm_valtype_vec_t",3]]]],[5,"wasm_functype_results","","",null,[[["option",4],["wasm_functype_t",3]],[["option",4],["wasm_valtype_vec_t",3]]]],[5,"wasm_globaltype_vec_new","","Creates a new vector of [`wasm_globaltype_t`].",null,[[]]],[5,"wasm_globaltype_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_globaltype_t`].",null,[[]]],[5,"wasm_globaltype_vec_copy","","Performs a deep copy of a vector of [`wasm_globaltype_t`].",null,[[["wasm_globaltype_vec_t",3],["wasm_globaltype_vec_t",3]]]],[5,"wasm_globaltype_vec_delete","","Deletes a vector of [`wasm_globaltype_t`].",null,[[["option",4],["wasm_globaltype_vec_t",3]]]],[5,"wasm_globaltype_vec_new_empty","","Creates an empty vector of [`wasm_globaltype_t`].",null,[[]]],[5,"wasm_globaltype_new","","",null,[[["option",4],["box",3],["wasm_mutability_t",6]],[["box",3],["option",4]]]],[5,"wasm_globaltype_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_globaltype_mutability","","",null,[[["wasm_globaltype_t",3]],["wasm_mutability_t",6]]],[5,"wasm_globaltype_content","","",null,[[["wasm_globaltype_t",3]],["wasm_valtype_t",3]]],[5,"wasm_importtype_vec_new","","Creates a new vector of [`wasm_importtype_t`].",null,[[]]],[5,"wasm_importtype_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_importtype_t`].",null,[[]]],[5,"wasm_importtype_vec_copy","","Performs a deep copy of a vector of [`wasm_importtype_t`].",null,[[["wasm_importtype_vec_t",3],["wasm_importtype_vec_t",3]]]],[5,"wasm_importtype_vec_delete","","Deletes a vector of [`wasm_importtype_t`].",null,[[["option",4],["wasm_importtype_vec_t",3]]]],[5,"wasm_importtype_vec_new_empty","","Creates an empty vector of [`wasm_importtype_t`].",null,[[]]],[5,"wasm_importtype_new","","",null,[[["option",4],["box",3],["box",3],["option",4]],[["option",4],["box",3]]]],[5,"wasm_importtype_module","","",null,[[["wasm_importtype_t",3]],["wasm_name_t",6]]],[5,"wasm_importtype_name","","",null,[[["wasm_importtype_t",3]],["wasm_name_t",6]]],[5,"wasm_importtype_type","","",null,[[["wasm_importtype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_importtype_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_memorytype_vec_new","","Creates a new vector of [`wasm_memorytype_t`].",null,[[]]],[5,"wasm_memorytype_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_memorytype_t`].",null,[[]]],[5,"wasm_memorytype_vec_copy","","Performs a deep copy of a vector of [`wasm_memorytype_t`].",null,[[["wasm_memorytype_vec_t",3],["wasm_memorytype_vec_t",3]]]],[5,"wasm_memorytype_vec_delete","","Deletes a vector of [`wasm_memorytype_t`].",null,[[["wasm_memorytype_vec_t",3],["option",4]]]],[5,"wasm_memorytype_vec_new_empty","","Creates an empty vector of [`wasm_memorytype_t`].",null,[[]]],[5,"wasm_memorytype_new","","",null,[[["wasm_limits_t",3]],[["wasm_memorytype_t",3],["box",3]]]],[5,"wasm_memorytype_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_memorytype_limits","","",null,[[["wasm_memorytype_t",3]],["wasm_limits_t",3]]],[5,"wasm_tabletype_vec_new","","Creates a new vector of [`wasm_tabletype_t`].",null,[[]]],[5,"wasm_tabletype_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_tabletype_t`].",null,[[]]],[5,"wasm_tabletype_vec_copy","","Performs a deep copy of a vector of [`wasm_tabletype_t`].",null,[[["wasm_tabletype_vec_t",3],["wasm_tabletype_vec_t",3]]]],[5,"wasm_tabletype_vec_delete","","Deletes a vector of [`wasm_tabletype_t`].",null,[[["wasm_tabletype_vec_t",3],["option",4]]]],[5,"wasm_tabletype_vec_new_empty","","Creates an empty vector of [`wasm_tabletype_t`].",null,[[]]],[5,"wasm_tabletype_new","","",null,[[["wasm_limits_t",3],["option",4],["box",3]],[["box",3],["option",4]]]],[5,"wasm_tabletype_limits","","",null,[[["wasm_tabletype_t",3]],["wasm_limits_t",3]]],[5,"wasm_tabletype_element","","",null,[[["wasm_tabletype_t",3]],["wasm_valtype_t",3]]],[5,"wasm_tabletype_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_valtype_vec_new","","Creates a new vector of [`wasm_valtype_t`].",null,[[]]],[5,"wasm_valtype_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_valtype_t`].",null,[[]]],[5,"wasm_valtype_vec_copy","","Performs a deep copy of a vector of [`wasm_valtype_t`].",null,[[["wasm_valtype_vec_t",3],["wasm_valtype_vec_t",3]]]],[5,"wasm_valtype_vec_delete","","Deletes a vector of [`wasm_valtype_t`].",null,[[["wasm_valtype_vec_t",3],["option",4]]]],[5,"wasm_valtype_vec_new_empty","","Creates an empty vector of [`wasm_valtype_t`].",null,[[]]],[5,"wasm_valtype_new","","",null,[[["wasm_valkind_t",6]],[["option",4],["box",3]]]],[5,"wasm_valtype_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_valtype_kind","","",null,[[["option",4],["wasm_valtype_t",3]],["wasm_valkind_t",6]]],[5,"wasm_byte_vec_new","","Creates a new vector of [`wasm_byte_t`].",null,[[]]],[5,"wasm_byte_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_byte_t`].",null,[[]]],[5,"wasm_byte_vec_copy","","Performs a deep copy of a vector of [`wasm_byte_t`].",null,[[["wasm_byte_vec_t",3],["wasm_byte_vec_t",3]]]],[5,"wasm_byte_vec_delete","","Deletes a vector of [`wasm_byte_t`].",null,[[["option",4],["wasm_byte_vec_t",3]]]],[5,"wasm_byte_vec_new_empty","","Creates an empty vector of [`wasm_byte_t`].",null,[[]]],[11,"into_slice","","",16,[[],["option",4]]],[11,"into_slice","","",17,[[],["option",4]]],[11,"into_slice","","",18,[[],["option",4]]],[11,"into_slice","","",19,[[],["option",4]]],[11,"into_slice","","",20,[[],["option",4]]],[11,"into_slice","","",21,[[],["option",4]]],[11,"into_slice","","",22,[[],["option",4]]],[11,"into_slice","","",23,[[],["option",4]]],[6,"wasm_mutability_t","","",null,null],[6,"wasm_table_size_t","","",null,null],[6,"wasm_byte_t","","",null,null],[6,"wasm_name_t","","",null,null],[6,"wasm_message_t","","",null,null],[11,"into_slice","","",24,[[],["option",4]]],[11,"into_slice_mut","","",24,[[],["option",4]]],[11,"is_uninitialized","","",24,[[]]],[0,"unstable","wasmer_c_api::wasm_c_api","This module contains unstable non-standard C API.",null,null],[0,"engine","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific types for the…",null,null],[5,"wasm_config_set_target","wasmer_c_api::wasm_c_api::unstable::engine","Unstable non-standard Wasmer-specific API to update the…",null,[[["wasm_config_t",3],["wasmer_target_t",3],["box",3]]]],[5,"wasm_config_set_features","","Unstable non-standard Wasmer-specific API to update the…",null,[[["wasm_config_t",3],["box",3],["wasmer_features_t",3]]]],[5,"wasmer_is_compiler_available","","Check whether the given compiler is available, i.e. part…",null,[[["wasmer_compiler_t",4]]]],[5,"wasmer_is_headless","","Check whether there is no compiler available in this…",null,[[]]],[5,"wasmer_is_engine_available","","Check whether the given engine is available, i.e. part of…",null,[[["wasmer_engine_t",4]]]],[0,"features","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific API that contains a…",null,null],[3,"wasmer_features_t","wasmer_c_api::wasm_c_api::unstable::features","Controls which experimental features will be enabled.…",null,null],[5,"wasmer_features_new","","Creates a new [`wasmer_features_t`].",null,[[],[["box",3],["wasmer_features_t",3]]]],[5,"wasmer_features_delete","","Delete a [`wasmer_features_t`].",null,[[["option",4],["box",3]]]],[5,"wasmer_features_threads","","Configures whether the WebAssembly threads proposal will…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_reference_types","","Configures whether the WebAssembly reference types…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_simd","","Configures whether the WebAssembly SIMD proposal will be…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_bulk_memory","","Configures whether the WebAssembly bulk memory operations…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_multi_value","","Configures whether the WebAssembly multi-value proposal…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_tail_call","","Configures whether the WebAssembly tail-call proposal will…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_module_linking","","Configures whether the WebAssembly tail-call proposal will…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_multi_memory","","Configures whether the WebAssembly multi-memory proposal…",null,[[["wasmer_features_t",3],["option",4]]]],[5,"wasmer_features_memory64","","Configures whether the WebAssembly 64-bit memory proposal…",null,[[["wasmer_features_t",3],["option",4]]]],[0,"middlewares","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific types to manipulate…",null,null],[3,"wasmer_middleware_t","wasmer_c_api::wasm_c_api::unstable::middlewares","Opaque representing any kind of middleware.",null,null],[5,"wasm_config_push_middleware","","Updates the configuration to add a module middleware.",null,[[["wasm_config_t",3],["wasmer_middleware_t",3],["box",3]]]],[0,"metering","","Unstable non-standard Wasmer-specific API that contains…",null,null],[3,"wasmer_metering_t","wasmer_c_api::wasm_c_api::unstable::middlewares::metering","Opaque type representing a metering middleware.",null,null],[5,"wasmer_metering_new","","Creates a new metering middleware with an initial limit,…",null,[[["wasmer_metering_cost_function_t",6]],[["wasmer_metering_t",3],["box",3]]]],[5,"wasmer_metering_delete","","Deletes a [`wasmer_metering_t`].",null,[[["option",4],["box",3]]]],[5,"wasmer_metering_get_remaining_points","","Returns the remaining metering points. `u64::MAX` means…",null,[[["wasm_instance_t",3]]]],[5,"wasmer_metering_points_are_exhausted","","Returns true if the remaning points are exhausted, false…",null,[[["wasm_instance_t",3]]]],[5,"wasmer_metering_set_remaining_points","","Set a new amount of points for the given metering…",null,[[["wasm_instance_t",3]]]],[5,"wasmer_metering_as_middleware","","Transforms a [`wasmer_metering_t`] into a generic…",null,[[["option",4],["box",3]],[["option",4],["box",3]]]],[6,"wasmer_metering_cost_function_t","","Function type to represent a user-defined cost function…",null,null],[0,"module","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific extensions to the…",null,null],[5,"wasmer_module_name","wasmer_c_api::wasm_c_api::unstable::module","Unstable non-standard Wasmer-specific API to get the…",null,[[["wasm_name_t",6],["wasm_module_t",3]]]],[5,"wasmer_module_set_name","","Unstable non-standard Wasmer-specific API to set the…",null,[[["wasm_name_t",6],["wasm_module_t",3]]]],[0,"parser","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific types about…",null,null],[0,"operator","wasmer_c_api::wasm_c_api::unstable::parser","",null,null],[4,"wasmer_parser_operator_t","wasmer_c_api::wasm_c_api::unstable::parser::operator","",null,null],[13,"Unreachable","","",28,null],[13,"Nop","","",28,null],[13,"Block","","",28,null],[13,"Loop","","",28,null],[13,"If","","",28,null],[13,"Else","","",28,null],[13,"Try","","",28,null],[13,"Catch","","",28,null],[13,"Throw","","",28,null],[13,"Rethrow","","",28,null],[13,"Unwind","","",28,null],[13,"End","","",28,null],[13,"Br","","",28,null],[13,"BrIf","","",28,null],[13,"BrTable","","",28,null],[13,"Return","","",28,null],[13,"Call","","",28,null],[13,"CallIndirect","","",28,null],[13,"ReturnCall","","",28,null],[13,"ReturnCallIndirect","","",28,null],[13,"Drop","","",28,null],[13,"Select","","",28,null],[13,"TypedSelect","","",28,null],[13,"LocalGet","","",28,null],[13,"LocalSet","","",28,null],[13,"LocalTee","","",28,null],[13,"GlobalGet","","",28,null],[13,"GlobalSet","","",28,null],[13,"I32Load","","",28,null],[13,"I64Load","","",28,null],[13,"F32Load","","",28,null],[13,"F64Load","","",28,null],[13,"I32Load8S","","",28,null],[13,"I32Load8U","","",28,null],[13,"I32Load16S","","",28,null],[13,"I32Load16U","","",28,null],[13,"I64Load8S","","",28,null],[13,"I64Load8U","","",28,null],[13,"I64Load16S","","",28,null],[13,"I64Load16U","","",28,null],[13,"I64Load32S","","",28,null],[13,"I64Load32U","","",28,null],[13,"I32Store","","",28,null],[13,"I64Store","","",28,null],[13,"F32Store","","",28,null],[13,"F64Store","","",28,null],[13,"I32Store8","","",28,null],[13,"I32Store16","","",28,null],[13,"I64Store8","","",28,null],[13,"I64Store16","","",28,null],[13,"I64Store32","","",28,null],[13,"MemorySize","","",28,null],[13,"MemoryGrow","","",28,null],[13,"I32Const","","",28,null],[13,"I64Const","","",28,null],[13,"F32Const","","",28,null],[13,"F64Const","","",28,null],[13,"RefNull","","",28,null],[13,"RefIsNull","","",28,null],[13,"RefFunc","","",28,null],[13,"I32Eqz","","",28,null],[13,"I32Eq","","",28,null],[13,"I32Ne","","",28,null],[13,"I32LtS","","",28,null],[13,"I32LtU","","",28,null],[13,"I32GtS","","",28,null],[13,"I32GtU","","",28,null],[13,"I32LeS","","",28,null],[13,"I32LeU","","",28,null],[13,"I32GeS","","",28,null],[13,"I32GeU","","",28,null],[13,"I64Eqz","","",28,null],[13,"I64Eq","","",28,null],[13,"I64Ne","","",28,null],[13,"I64LtS","","",28,null],[13,"I64LtU","","",28,null],[13,"I64GtS","","",28,null],[13,"I64GtU","","",28,null],[13,"I64LeS","","",28,null],[13,"I64LeU","","",28,null],[13,"I64GeS","","",28,null],[13,"I64GeU","","",28,null],[13,"F32Eq","","",28,null],[13,"F32Ne","","",28,null],[13,"F32Lt","","",28,null],[13,"F32Gt","","",28,null],[13,"F32Le","","",28,null],[13,"F32Ge","","",28,null],[13,"F64Eq","","",28,null],[13,"F64Ne","","",28,null],[13,"F64Lt","","",28,null],[13,"F64Gt","","",28,null],[13,"F64Le","","",28,null],[13,"F64Ge","","",28,null],[13,"I32Clz","","",28,null],[13,"I32Ctz","","",28,null],[13,"I32Popcnt","","",28,null],[13,"I32Add","","",28,null],[13,"I32Sub","","",28,null],[13,"I32Mul","","",28,null],[13,"I32DivS","","",28,null],[13,"I32DivU","","",28,null],[13,"I32RemS","","",28,null],[13,"I32RemU","","",28,null],[13,"I32And","","",28,null],[13,"I32Or","","",28,null],[13,"I32Xor","","",28,null],[13,"I32Shl","","",28,null],[13,"I32ShrS","","",28,null],[13,"I32ShrU","","",28,null],[13,"I32Rotl","","",28,null],[13,"I32Rotr","","",28,null],[13,"I64Clz","","",28,null],[13,"I64Ctz","","",28,null],[13,"I64Popcnt","","",28,null],[13,"I64Add","","",28,null],[13,"I64Sub","","",28,null],[13,"I64Mul","","",28,null],[13,"I64DivS","","",28,null],[13,"I64DivU","","",28,null],[13,"I64RemS","","",28,null],[13,"I64RemU","","",28,null],[13,"I64And","","",28,null],[13,"I64Or","","",28,null],[13,"I64Xor","","",28,null],[13,"I64Shl","","",28,null],[13,"I64ShrS","","",28,null],[13,"I64ShrU","","",28,null],[13,"I64Rotl","","",28,null],[13,"I64Rotr","","",28,null],[13,"F32Abs","","",28,null],[13,"F32Neg","","",28,null],[13,"F32Ceil","","",28,null],[13,"F32Floor","","",28,null],[13,"F32Trunc","","",28,null],[13,"F32Nearest","","",28,null],[13,"F32Sqrt","","",28,null],[13,"F32Add","","",28,null],[13,"F32Sub","","",28,null],[13,"F32Mul","","",28,null],[13,"F32Div","","",28,null],[13,"F32Min","","",28,null],[13,"F32Max","","",28,null],[13,"F32Copysign","","",28,null],[13,"F64Abs","","",28,null],[13,"F64Neg","","",28,null],[13,"F64Ceil","","",28,null],[13,"F64Floor","","",28,null],[13,"F64Trunc","","",28,null],[13,"F64Nearest","","",28,null],[13,"F64Sqrt","","",28,null],[13,"F64Add","","",28,null],[13,"F64Sub","","",28,null],[13,"F64Mul","","",28,null],[13,"F64Div","","",28,null],[13,"F64Min","","",28,null],[13,"F64Max","","",28,null],[13,"F64Copysign","","",28,null],[13,"I32WrapI64","","",28,null],[13,"I32TruncF32S","","",28,null],[13,"I32TruncF32U","","",28,null],[13,"I32TruncF64S","","",28,null],[13,"I32TruncF64U","","",28,null],[13,"I64ExtendI32S","","",28,null],[13,"I64ExtendI32U","","",28,null],[13,"I64TruncF32S","","",28,null],[13,"I64TruncF32U","","",28,null],[13,"I64TruncF64S","","",28,null],[13,"I64TruncF64U","","",28,null],[13,"F32ConvertI32S","","",28,null],[13,"F32ConvertI32U","","",28,null],[13,"F32ConvertI64S","","",28,null],[13,"F32ConvertI64U","","",28,null],[13,"F32DemoteF64","","",28,null],[13,"F64ConvertI32S","","",28,null],[13,"F64ConvertI32U","","",28,null],[13,"F64ConvertI64S","","",28,null],[13,"F64ConvertI64U","","",28,null],[13,"F64PromoteF32","","",28,null],[13,"I32ReinterpretF32","","",28,null],[13,"I64ReinterpretF64","","",28,null],[13,"F32ReinterpretI32","","",28,null],[13,"F64ReinterpretI64","","",28,null],[13,"I32Extend8S","","",28,null],[13,"I32Extend16S","","",28,null],[13,"I64Extend8S","","",28,null],[13,"I64Extend16S","","",28,null],[13,"I64Extend32S","","",28,null],[13,"I32TruncSatF32S","","",28,null],[13,"I32TruncSatF32U","","",28,null],[13,"I32TruncSatF64S","","",28,null],[13,"I32TruncSatF64U","","",28,null],[13,"I64TruncSatF32S","","",28,null],[13,"I64TruncSatF32U","","",28,null],[13,"I64TruncSatF64S","","",28,null],[13,"I64TruncSatF64U","","",28,null],[13,"MemoryInit","","",28,null],[13,"DataDrop","","",28,null],[13,"MemoryCopy","","",28,null],[13,"MemoryFill","","",28,null],[13,"TableInit","","",28,null],[13,"ElemDrop","","",28,null],[13,"TableCopy","","",28,null],[13,"TableFill","","",28,null],[13,"TableGet","","",28,null],[13,"TableSet","","",28,null],[13,"TableGrow","","",28,null],[13,"TableSize","","",28,null],[13,"MemoryAtomicNotify","","",28,null],[13,"MemoryAtomicWait32","","",28,null],[13,"MemoryAtomicWait64","","",28,null],[13,"AtomicFence","","",28,null],[13,"I32AtomicLoad","","",28,null],[13,"I64AtomicLoad","","",28,null],[13,"I32AtomicLoad8U","","",28,null],[13,"I32AtomicLoad16U","","",28,null],[13,"I64AtomicLoad8U","","",28,null],[13,"I64AtomicLoad16U","","",28,null],[13,"I64AtomicLoad32U","","",28,null],[13,"I32AtomicStore","","",28,null],[13,"I64AtomicStore","","",28,null],[13,"I32AtomicStore8","","",28,null],[13,"I32AtomicStore16","","",28,null],[13,"I64AtomicStore8","","",28,null],[13,"I64AtomicStore16","","",28,null],[13,"I64AtomicStore32","","",28,null],[13,"I32AtomicRmwAdd","","",28,null],[13,"I64AtomicRmwAdd","","",28,null],[13,"I32AtomicRmw8AddU","","",28,null],[13,"I32AtomicRmw16AddU","","",28,null],[13,"I64AtomicRmw8AddU","","",28,null],[13,"I64AtomicRmw16AddU","","",28,null],[13,"I64AtomicRmw32AddU","","",28,null],[13,"I32AtomicRmwSub","","",28,null],[13,"I64AtomicRmwSub","","",28,null],[13,"I32AtomicRmw8SubU","","",28,null],[13,"I32AtomicRmw16SubU","","",28,null],[13,"I64AtomicRmw8SubU","","",28,null],[13,"I64AtomicRmw16SubU","","",28,null],[13,"I64AtomicRmw32SubU","","",28,null],[13,"I32AtomicRmwAnd","","",28,null],[13,"I64AtomicRmwAnd","","",28,null],[13,"I32AtomicRmw8AndU","","",28,null],[13,"I32AtomicRmw16AndU","","",28,null],[13,"I64AtomicRmw8AndU","","",28,null],[13,"I64AtomicRmw16AndU","","",28,null],[13,"I64AtomicRmw32AndU","","",28,null],[13,"I32AtomicRmwOr","","",28,null],[13,"I64AtomicRmwOr","","",28,null],[13,"I32AtomicRmw8OrU","","",28,null],[13,"I32AtomicRmw16OrU","","",28,null],[13,"I64AtomicRmw8OrU","","",28,null],[13,"I64AtomicRmw16OrU","","",28,null],[13,"I64AtomicRmw32OrU","","",28,null],[13,"I32AtomicRmwXor","","",28,null],[13,"I64AtomicRmwXor","","",28,null],[13,"I32AtomicRmw8XorU","","",28,null],[13,"I32AtomicRmw16XorU","","",28,null],[13,"I64AtomicRmw8XorU","","",28,null],[13,"I64AtomicRmw16XorU","","",28,null],[13,"I64AtomicRmw32XorU","","",28,null],[13,"I32AtomicRmwXchg","","",28,null],[13,"I64AtomicRmwXchg","","",28,null],[13,"I32AtomicRmw8XchgU","","",28,null],[13,"I32AtomicRmw16XchgU","","",28,null],[13,"I64AtomicRmw8XchgU","","",28,null],[13,"I64AtomicRmw16XchgU","","",28,null],[13,"I64AtomicRmw32XchgU","","",28,null],[13,"I32AtomicRmwCmpxchg","","",28,null],[13,"I64AtomicRmwCmpxchg","","",28,null],[13,"I32AtomicRmw8CmpxchgU","","",28,null],[13,"I32AtomicRmw16CmpxchgU","","",28,null],[13,"I64AtomicRmw8CmpxchgU","","",28,null],[13,"I64AtomicRmw16CmpxchgU","","",28,null],[13,"I64AtomicRmw32CmpxchgU","","",28,null],[13,"V128Load","","",28,null],[13,"V128Store","","",28,null],[13,"V128Const","","",28,null],[13,"I8x16Splat","","",28,null],[13,"I8x16ExtractLaneS","","",28,null],[13,"I8x16ExtractLaneU","","",28,null],[13,"I8x16ReplaceLane","","",28,null],[13,"I16x8Splat","","",28,null],[13,"I16x8ExtractLaneS","","",28,null],[13,"I16x8ExtractLaneU","","",28,null],[13,"I16x8ReplaceLane","","",28,null],[13,"I32x4Splat","","",28,null],[13,"I32x4ExtractLane","","",28,null],[13,"I32x4ReplaceLane","","",28,null],[13,"I64x2Splat","","",28,null],[13,"I64x2ExtractLane","","",28,null],[13,"I64x2ReplaceLane","","",28,null],[13,"F32x4Splat","","",28,null],[13,"F32x4ExtractLane","","",28,null],[13,"F32x4ReplaceLane","","",28,null],[13,"F64x2Splat","","",28,null],[13,"F64x2ExtractLane","","",28,null],[13,"F64x2ReplaceLane","","",28,null],[13,"I8x16Eq","","",28,null],[13,"I8x16Ne","","",28,null],[13,"I8x16LtS","","",28,null],[13,"I8x16LtU","","",28,null],[13,"I8x16GtS","","",28,null],[13,"I8x16GtU","","",28,null],[13,"I8x16LeS","","",28,null],[13,"I8x16LeU","","",28,null],[13,"I8x16GeS","","",28,null],[13,"I8x16GeU","","",28,null],[13,"I16x8Eq","","",28,null],[13,"I16x8Ne","","",28,null],[13,"I16x8LtS","","",28,null],[13,"I16x8LtU","","",28,null],[13,"I16x8GtS","","",28,null],[13,"I16x8GtU","","",28,null],[13,"I16x8LeS","","",28,null],[13,"I16x8LeU","","",28,null],[13,"I16x8GeS","","",28,null],[13,"I16x8GeU","","",28,null],[13,"I32x4Eq","","",28,null],[13,"I32x4Ne","","",28,null],[13,"I32x4LtS","","",28,null],[13,"I32x4LtU","","",28,null],[13,"I32x4GtS","","",28,null],[13,"I32x4GtU","","",28,null],[13,"I32x4LeS","","",28,null],[13,"I32x4LeU","","",28,null],[13,"I32x4GeS","","",28,null],[13,"I32x4GeU","","",28,null],[13,"I64x2Eq","","",28,null],[13,"I64x2Ne","","",28,null],[13,"F32x4Eq","","",28,null],[13,"F32x4Ne","","",28,null],[13,"F32x4Lt","","",28,null],[13,"F32x4Gt","","",28,null],[13,"F32x4Le","","",28,null],[13,"F32x4Ge","","",28,null],[13,"F64x2Eq","","",28,null],[13,"F64x2Ne","","",28,null],[13,"F64x2Lt","","",28,null],[13,"F64x2Gt","","",28,null],[13,"F64x2Le","","",28,null],[13,"F64x2Ge","","",28,null],[13,"V128Not","","",28,null],[13,"V128And","","",28,null],[13,"V128AndNot","","",28,null],[13,"V128Or","","",28,null],[13,"V128Xor","","",28,null],[13,"V128Bitselect","","",28,null],[13,"V128AnyTrue","","",28,null],[13,"I8x16Abs","","",28,null],[13,"I8x16Neg","","",28,null],[13,"I8x16AllTrue","","",28,null],[13,"I8x16Bitmask","","",28,null],[13,"I8x16Shl","","",28,null],[13,"I8x16ShrS","","",28,null],[13,"I8x16ShrU","","",28,null],[13,"I8x16Add","","",28,null],[13,"I8x16AddSatS","","",28,null],[13,"I8x16AddSatU","","",28,null],[13,"I8x16Sub","","",28,null],[13,"I8x16SubSatS","","",28,null],[13,"I8x16SubSatU","","",28,null],[13,"I8x16MinS","","",28,null],[13,"I8x16MinU","","",28,null],[13,"I8x16MaxS","","",28,null],[13,"I8x16MaxU","","",28,null],[13,"I16x8Abs","","",28,null],[13,"I16x8Neg","","",28,null],[13,"I16x8AllTrue","","",28,null],[13,"I16x8Bitmask","","",28,null],[13,"I16x8Shl","","",28,null],[13,"I16x8ShrS","","",28,null],[13,"I16x8ShrU","","",28,null],[13,"I16x8Add","","",28,null],[13,"I16x8AddSatS","","",28,null],[13,"I16x8AddSatU","","",28,null],[13,"I16x8Sub","","",28,null],[13,"I16x8SubSatS","","",28,null],[13,"I16x8SubSatU","","",28,null],[13,"I16x8Mul","","",28,null],[13,"I16x8MinS","","",28,null],[13,"I16x8MinU","","",28,null],[13,"I16x8MaxS","","",28,null],[13,"I16x8MaxU","","",28,null],[13,"I32x4Abs","","",28,null],[13,"I32x4Neg","","",28,null],[13,"I32x4AllTrue","","",28,null],[13,"I32x4Bitmask","","",28,null],[13,"I32x4Shl","","",28,null],[13,"I32x4ShrS","","",28,null],[13,"I32x4ShrU","","",28,null],[13,"I32x4Add","","",28,null],[13,"I32x4Sub","","",28,null],[13,"I32x4Mul","","",28,null],[13,"I32x4MinS","","",28,null],[13,"I32x4MinU","","",28,null],[13,"I32x4MaxS","","",28,null],[13,"I32x4MaxU","","",28,null],[13,"I32x4DotI16x8S","","",28,null],[13,"I64x2Neg","","",28,null],[13,"I64x2AllTrue","","",28,null],[13,"I64x2Bitmask","","",28,null],[13,"I64x2Shl","","",28,null],[13,"I64x2ShrS","","",28,null],[13,"I64x2ShrU","","",28,null],[13,"I64x2Add","","",28,null],[13,"I64x2Sub","","",28,null],[13,"I64x2Mul","","",28,null],[13,"F32x4Ceil","","",28,null],[13,"F32x4Floor","","",28,null],[13,"F32x4Trunc","","",28,null],[13,"F32x4Nearest","","",28,null],[13,"F64x2Ceil","","",28,null],[13,"F64x2Floor","","",28,null],[13,"F64x2Trunc","","",28,null],[13,"F64x2Nearest","","",28,null],[13,"F32x4Abs","","",28,null],[13,"F32x4Neg","","",28,null],[13,"F32x4Sqrt","","",28,null],[13,"F32x4Add","","",28,null],[13,"F32x4Sub","","",28,null],[13,"F32x4Mul","","",28,null],[13,"F32x4Div","","",28,null],[13,"F32x4Min","","",28,null],[13,"F32x4Max","","",28,null],[13,"F32x4PMin","","",28,null],[13,"F32x4PMax","","",28,null],[13,"F64x2Abs","","",28,null],[13,"F64x2Neg","","",28,null],[13,"F64x2Sqrt","","",28,null],[13,"F64x2Add","","",28,null],[13,"F64x2Sub","","",28,null],[13,"F64x2Mul","","",28,null],[13,"F64x2Div","","",28,null],[13,"F64x2Min","","",28,null],[13,"F64x2Max","","",28,null],[13,"F64x2PMin","","",28,null],[13,"F64x2PMax","","",28,null],[13,"I32x4TruncSatF32x4S","","",28,null],[13,"I32x4TruncSatF32x4U","","",28,null],[13,"F32x4ConvertI32x4S","","",28,null],[13,"F32x4ConvertI32x4U","","",28,null],[13,"I8x16Swizzle","","",28,null],[13,"I8x16Shuffle","","",28,null],[13,"V128Load8Splat","","",28,null],[13,"V128Load16Splat","","",28,null],[13,"V128Load32Splat","","",28,null],[13,"V128Load32Zero","","",28,null],[13,"V128Load64Splat","","",28,null],[13,"V128Load64Zero","","",28,null],[13,"I8x16NarrowI16x8S","","",28,null],[13,"I8x16NarrowI16x8U","","",28,null],[13,"I16x8NarrowI32x4S","","",28,null],[13,"I16x8NarrowI32x4U","","",28,null],[13,"I16x8WidenLowI8x16S","","",28,null],[13,"I16x8WidenHighI8x16S","","",28,null],[13,"I16x8WidenLowI8x16U","","",28,null],[13,"I16x8WidenHighI8x16U","","",28,null],[13,"I32x4WidenLowI16x8S","","",28,null],[13,"I32x4WidenHighI16x8S","","",28,null],[13,"I32x4WidenLowI16x8U","","",28,null],[13,"I32x4WidenHighI16x8U","","",28,null],[13,"I64x2WidenLowI32x4S","","",28,null],[13,"I64x2WidenHighI32x4S","","",28,null],[13,"I64x2WidenLowI32x4U","","",28,null],[13,"I64x2WidenHighI32x4U","","",28,null],[13,"I16x8ExtMulLowI8x16S","","",28,null],[13,"I16x8ExtMulHighI8x16S","","",28,null],[13,"I16x8ExtMulLowI8x16U","","",28,null],[13,"I16x8ExtMulHighI8x16U","","",28,null],[13,"I32x4ExtMulLowI16x8S","","",28,null],[13,"I32x4ExtMulHighI16x8S","","",28,null],[13,"I32x4ExtMulLowI16x8U","","",28,null],[13,"I32x4ExtMulHighI16x8U","","",28,null],[13,"I64x2ExtMulLowI32x4S","","",28,null],[13,"I64x2ExtMulHighI32x4S","","",28,null],[13,"I64x2ExtMulLowI32x4U","","",28,null],[13,"I64x2ExtMulHighI32x4U","","",28,null],[13,"V128Load8x8S","","",28,null],[13,"V128Load8x8U","","",28,null],[13,"V128Load16x4S","","",28,null],[13,"V128Load16x4U","","",28,null],[13,"V128Load32x2S","","",28,null],[13,"V128Load32x2U","","",28,null],[13,"V128Load8Lane","","",28,null],[13,"V128Load16Lane","","",28,null],[13,"V128Load32Lane","","",28,null],[13,"V128Load64Lane","","",28,null],[13,"V128Store8Lane","","",28,null],[13,"V128Store16Lane","","",28,null],[13,"V128Store32Lane","","",28,null],[13,"V128Store64Lane","","",28,null],[13,"I8x16RoundingAverageU","","",28,null],[13,"I16x8RoundingAverageU","","",28,null],[13,"I16x8Q15MulrSatS","","",28,null],[13,"F32x4DemoteF64x2Zero","","",28,null],[13,"F64x2PromoteLowF32x4","","",28,null],[13,"F64x2ConvertLowI32x4S","","",28,null],[13,"F64x2ConvertLowI32x4U","","",28,null],[13,"I32x4TruncSatF64x2SZero","","",28,null],[13,"I32x4TruncSatF64x2UZero","","",28,null],[0,"target_lexicon","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific API that contains…",null,null],[3,"wasmer_target_t","wasmer_c_api::wasm_c_api::unstable::target_lexicon","Unstable non-standard Wasmer-specific API to represent a…",null,null],[3,"wasmer_triple_t","","Unstable non-standard Wasmer-specific API to represent a…",null,null],[3,"wasmer_cpu_features_t","","Unstable non-standard Wasmer-specific API to represent a…",null,null],[5,"wasmer_target_new","","Creates a new [`wasmer_target_t`].",null,[[["option",4],["box",3],["box",3],["option",4]],[["option",4],["box",3]]]],[5,"wasmer_target_delete","","Delete a [`wasmer_target_t`].",null,[[["option",4],["box",3]]]],[5,"wasmer_triple_new","","Create a new [`wasmer_triple_t`] based on a triple string.",null,[[["wasm_name_t",6],["option",4]],[["option",4],["box",3]]]],[5,"wasmer_triple_new_from_host","","Create the [`wasmer_triple_t`] for the current host.",null,[[],[["box",3],["wasmer_triple_t",3]]]],[5,"wasmer_triple_delete","","Delete a [`wasmer_triple_t`].",null,[[["option",4],["box",3]]]],[5,"wasmer_cpu_features_new","","Create a new [`wasmer_cpu_features_t`].",null,[[],[["box",3],["wasmer_cpu_features_t",3]]]],[5,"wasmer_cpu_features_delete","","Delete a [`wasmer_cpu_features_t`].",null,[[["box",3],["option",4]]]],[5,"wasmer_cpu_features_add","","Add a new CPU feature into the set represented by…",null,[[["wasmer_cpu_features_t",3],["option",4],["wasm_name_t",6],["option",4]]]],[0,"wasi","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific API that contains…",null,null],[3,"wasmer_named_extern_t","wasmer_c_api::wasm_c_api::unstable::wasi","Unstable non-standard type wrapping `wasm_extern_t` with…",null,null],[3,"wasmer_named_extern_vec_t","","Represents a vector of `wasmer_named_extern_t`.",null,null],[12,"size","","",29,null],[12,"data","","",29,null],[5,"wasmer_named_extern_vec_new","","Creates a new vector of [`wasmer_named_extern_t`].",null,[[]]],[5,"wasmer_named_extern_vec_new_uninitialized","","Creates a new uninitialized vector of…",null,[[]]],[5,"wasmer_named_extern_vec_copy","","Performs a deep copy of a vector of…",null,[[["wasmer_named_extern_vec_t",3],["wasmer_named_extern_vec_t",3]]]],[5,"wasmer_named_extern_vec_delete","","Deletes a vector of [`wasmer_named_extern_t`].",null,[[["option",4],["wasmer_named_extern_vec_t",3]]]],[5,"wasmer_named_extern_vec_new_empty","","Creates an empty vector of [`wasmer_named_extern_t`].",null,[[]]],[5,"wasmer_named_extern_module","","Non-standard function to get the module name of a…",null,[[["option",4],["wasmer_named_extern_t",3]],[["wasm_name_t",6],["option",4]]]],[5,"wasmer_named_extern_name","","Non-standard function to get the name of a…",null,[[["option",4],["wasmer_named_extern_t",3]],[["wasm_name_t",6],["option",4]]]],[5,"wasmer_named_extern_unwrap","","Non-standard function to get the wrapped extern of a…",null,[[["option",4],["wasmer_named_extern_t",3]],[["option",4],["wasm_extern_t",3]]]],[5,"wasi_get_unordered_imports","","Non-standard function to get the imports needed for the…",null,[[["option",4],["option",4],["option",4],["wasi_env_t",3],["wasm_store_t",3],["wasm_module_t",3],["wasmer_named_extern_vec_t",3]]]],[11,"into_slice","","",29,[[],["option",4]]],[0,"value","wasmer_c_api::wasm_c_api","Possible runtime values that a WebAssembly module can…",null,null],[3,"wasm_val_t","wasmer_c_api::wasm_c_api::value","A WebAssembly value composed of its type and its value.",null,null],[12,"kind","","The kind of the value.",30,null],[12,"of","","The real value.",30,null],[3,"wasm_val_vec_t","","Represents a vector of `wasm_val_t`.",null,null],[12,"size","","",31,null],[12,"data","","",31,null],[19,"wasm_val_inner","","A Rust union, compatible with C, that holds a value of…",null,null],[5,"wasm_val_vec_new","","Creates a new vector of [`wasm_val_t`].",null,[[]]],[5,"wasm_val_vec_new_uninitialized","","Creates a new uninitialized vector of [`wasm_val_t`].",null,[[]]],[5,"wasm_val_vec_copy","","Performs a deep copy of a vector of [`wasm_val_t`].",null,[[["wasm_val_vec_t",3],["wasm_val_vec_t",3]]]],[5,"wasm_val_vec_delete","","Deletes a vector of [`wasm_val_t`].",null,[[["wasm_val_vec_t",3],["option",4]]]],[5,"wasm_val_vec_new_empty","","Creates an empty vector of [`wasm_val_t`].",null,[[]]],[5,"wasm_val_copy","","",null,[[["wasm_val_t",3],["wasm_val_t",3]]]],[5,"wasm_val_delete","","",null,[[["box",3],["option",4]]]],[6,"wasm_valkind_t","","Represents the kind of values. The variants of this C enum…",null,null],[11,"into_slice","","",31,[[],["option",4]]],[11,"into_slice_mut","","",31,[[],["option",4]]],[11,"is_uninitialized","","",31,[[]]],[0,"version","wasmer_c_api::wasm_c_api","Wasmer-specific API to get or query the version of this…",null,null],[5,"wasmer_version","wasmer_c_api::wasm_c_api::version","Get the version of the Wasmer C API.",null,[[]]],[5,"wasmer_version_major","","Get the major version of the Wasmer C API.",null,[[]]],[5,"wasmer_version_minor","","Get the minor version of the Wasmer C API.",null,[[]]],[5,"wasmer_version_patch","","Get the patch version of the Wasmer C API.",null,[[]]],[5,"wasmer_version_pre","","Get the minor version of the Wasmer C API.",null,[[]]],[0,"wasi","wasmer_c_api::wasm_c_api","Unofficial API for WASI integrating with the standard Wasm…",null,null],[3,"wasi_config_t","wasmer_c_api::wasm_c_api::wasi","",null,null],[3,"wasi_env_t","","",null,null],[4,"wasi_version_t","","The version of WASI. This is determined by the imports…",null,null],[13,"INVALID_VERSION","","An invalid version.",32,null],[13,"LATEST","","Latest version.",32,null],[13,"SNAPSHOT0","","`wasi_unstable`.",32,null],[13,"SNAPSHOT1","","`wasi_snapshot_preview1`.",32,null],[5,"wasi_config_new","","",null,[[],[["box",3],["option",4]]]],[5,"wasi_config_env","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_arg","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_preopen_dir","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_mapdir","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_capture_stdout","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_inherit_stdout","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_capture_stderr","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_inherit_stderr","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_inherit_stdin","","",null,[[["wasi_config_t",3]]]],[5,"wasi_env_new","","Create a new WASI environment.",null,[[["wasi_config_t",3],["box",3]],[["option",4],["box",3]]]],[5,"wasi_env_delete","","Delete a [`wasi_env_t`].",null,[[["option",4],["box",3]]]],[5,"wasi_env_set_instance","","This function is deprecated. You may safely remove all…",null,[[["wasi_env_t",3],["wasm_instance_t",3]]]],[5,"wasi_env_set_memory","","This function is deprecated. You may safely remove all…",null,[[["wasi_env_t",3],["wasm_memory_t",3]]]],[5,"wasi_env_read_stdout","","",null,[[["wasi_env_t",3]]]],[5,"wasi_env_read_stderr","","",null,[[["wasi_env_t",3]]]],[5,"wasi_get_wasi_version","","",null,[[["wasm_module_t",3]],["wasi_version_t",4]]],[5,"wasi_get_imports","","Non-standard function to get the imports needed for the…",null,[[["wasm_extern_vec_t",3],["option",4],["option",4],["option",4],["wasi_env_t",3],["wasm_store_t",3],["wasm_module_t",3]]]],[5,"wasi_get_start_function","","",null,[[["wasm_instance_t",3]],[["box",3],["option",4]]]],[0,"wat","wasmer_c_api::wasm_c_api","Wasmer-specific API to transform the WAT format into Wasm…",null,null],[5,"wat2wasm","wasmer_c_api::wasm_c_api::wat","Parses in-memory bytes as either the WAT format, or a…",null,[[["wasm_byte_vec_t",3],["wasm_byte_vec_t",3]]]],[14,"c_try","wasmer_c_api","",null,null],[11,"from","wasmer_c_api::deprecated","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","wasmer_c_api::deprecated::export","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from","wasmer_c_api::deprecated::global","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"vzip","","",40,[[]]],[11,"from","wasmer_c_api::deprecated::import","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"vzip","","",45,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"vzip","","",46,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from","wasmer_c_api::deprecated::instance","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"vzip","","",48,[[]]],[11,"from","wasmer_c_api::deprecated::memory","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"vzip","","",49,[[]]],[11,"from","wasmer_c_api::deprecated::module","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"vzip","","",51,[[]]],[11,"from","wasmer_c_api::deprecated::table","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"vzip","","",52,[[]]],[11,"from","wasmer_c_api::deprecated::value","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","wasmer_c_api::error","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from","wasmer_c_api::wasm_c_api::engine","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"vzip","","",54,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from","wasmer_c_api::wasm_c_api::externals","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"vzip","","",59,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from","wasmer_c_api::wasm_c_api::instance","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"vzip","","",60,[[]]],[11,"from","wasmer_c_api::wasm_c_api::module","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"vzip","","",61,[[]]],[11,"from","wasmer_c_api::wasm_c_api::store","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"vzip","","",62,[[]]],[11,"from","wasmer_c_api::wasm_c_api::trap","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"vzip","","",63,[[]]],[11,"from","wasmer_c_api::wasm_c_api::types","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"vzip","","",64,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"vzip","","",67,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"vzip","","",68,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"vzip","","",69,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"vzip","","",70,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"vzip","","",71,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"init","","",72,[[]]],[11,"deref","","",72,[[]]],[11,"deref_mut","","",72,[[]]],[11,"drop","","",72,[[]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"vzip","","",73,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"vzip","","",74,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"vzip","","",75,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::features","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"vzip","","",76,[[]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::middlewares","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"vzip","","",77,[[]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::middlewares::metering","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"vzip","","",78,[[]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::parser::operator","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::target_lexicon","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"init","","",79,[[]]],[11,"deref","","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"drop","","",79,[[]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"vzip","","",81,[[]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::wasi","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"vzip","","",82,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from","wasmer_c_api::wasm_c_api::value","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"vzip","","",83,[[]]],[11,"from","wasmer_c_api::wasm_c_api::wasi","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"vzip","","",85,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","wasmer_c_api::deprecated::export","",5,[[["importtype",3]]]],[11,"from","","",5,[[["importtype",3]]]],[11,"from","","",5,[[["exporttype",3]]]],[11,"from","","",5,[[["exporttype",3]]]],[11,"from","","",5,[[["externtype",4]]]],[11,"from","","",5,[[["externtype",4]]]],[11,"from","wasmer_c_api::deprecated::import","",8,[[["c_uchar",6]]]],[11,"from","wasmer_c_api::deprecated::value","",9,[[["val",6]]]],[11,"from","","",11,[[["valtype",4]]]],[11,"from","","",11,[[["valtype",4]]]],[11,"from","wasmer_c_api::wasm_c_api::externals","",15,[[["vec",3],["box",3]]]],[11,"from","","",15,[[]]],[11,"from","wasmer_c_api::wasm_c_api::trap","",63,[[["runtimeerror",3]]]],[11,"from","wasmer_c_api::wasm_c_api::types","",16,[[["vec",3],["box",3]]]],[11,"from","","",16,[[]]],[11,"from","","",64,[[["exporttype",3]]]],[11,"from","","",64,[[["exporttype",3]]]],[11,"from","","",25,[[["externtype",4]]]],[11,"from","","",25,[[["externtype",4]]]],[11,"from","","",65,[[["externtype",4]]]],[11,"from","","",65,[[["externtype",4]]]],[11,"from","","",66,[[]]],[11,"from","","",67,[[["frameinfo",3]]]],[11,"from","","",67,[[["frameinfo",3]]]],[11,"from","","",17,[[["vec",3],["box",3]]]],[11,"from","","",17,[[]]],[11,"from","","",18,[[["vec",3],["box",3]]]],[11,"from","","",18,[[]]],[11,"from","","",19,[[["box",3],["vec",3]]]],[11,"from","","",19,[[]]],[11,"from","","",20,[[["vec",3],["box",3]]]],[11,"from","","",20,[[]]],[11,"from","","",70,[[["importtype",3]]]],[11,"from","","",70,[[["importtype",3]]]],[11,"from","","",21,[[["vec",3],["box",3]]]],[11,"from","","",21,[[]]],[11,"from","wasmer_c_api","",86,[[["wasm_mutability_enum",4]]]],[11,"from","wasmer_c_api::wasm_c_api::types","",26,[[["mutability",4]]]],[11,"from","","",22,[[["vec",3],["box",3]]]],[11,"from","","",22,[[]]],[11,"from","","",27,[[["valtype",4]]]],[11,"from","","",23,[[["vec",3],["box",3]]]],[11,"from","","",23,[[]]],[11,"from","","",74,[[["valtype",4]]]],[11,"from","","",24,[[["vec",3],["wasm_byte_t",6]]]],[11,"from","","",24,[[]]],[11,"from","wasmer_c_api","",87,[[["string",3]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::parser::operator","",28,[[["operator",4]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::wasi","",29,[[["box",3],["vec",3]]]],[11,"from","","",29,[[]]],[11,"from","wasmer_c_api::wasm_c_api::value","",31,[[["wasm_val_t",3],["vec",3]]]],[11,"from","","",31,[[]]],[11,"from","wasmer_c_api::wasm_c_api::wasi","",32,[[["wasiversion",4]]]],[11,"clone","wasmer_c_api::deprecated::export","",33,[[],["wasmer_export_t",3]]],[11,"clone","","",34,[[],["wasmer_export_func_t",3]]],[11,"clone","","",35,[[],["wasmer_exports_t",3]]],[11,"clone","","",36,[[],["wasmer_export_descriptor_t",3]]],[11,"clone","","",38,[[],["wasmer_export_descriptors_t",3]]],[11,"clone","","",4,[[],["wasmer_import_export_value",19]]],[11,"clone","","",5,[[],["wasmer_import_export_kind",4]]],[11,"clone","wasmer_c_api::deprecated::global","",39,[[],["wasmer_global_descriptor_t",3]]],[11,"clone","","",40,[[],["wasmer_global_t",3]]],[11,"clone","wasmer_c_api::deprecated::import","",42,[[],["wasmer_import_func_t",3]]],[11,"clone","","",43,[[],["wasmer_import_descriptor_t",3]]],[11,"clone","","",44,[[],["wasmer_import_descriptors_t",3]]],[11,"clone","","",45,[[],["wasmer_import_object_iter_t",3]]],[11,"clone","wasmer_c_api::deprecated::memory","",49,[[],["wasmer_memory_t",3]]],[11,"clone","wasmer_c_api::deprecated::table","",52,[[],["wasmer_table_t",3]]],[11,"clone","wasmer_c_api::deprecated::value","",11,[[],["wasmer_value_tag",4]]],[11,"clone","","",10,[[],["wasmer_value",19]]],[11,"clone","","",9,[[],["wasmer_value_t",3]]],[11,"clone","wasmer_c_api::wasm_c_api::engine","",13,[[],["wasmer_compiler_t",4]]],[11,"clone","","",14,[[],["wasmer_engine_t",4]]],[11,"clone","wasmer_c_api::wasm_c_api::externals","",59,[[],["wasm_extern_t",3]]],[11,"clone","","",15,[[]]],[11,"clone","wasmer_c_api::wasm_c_api::types","",64,[[],["wasm_exporttype_t",3]]],[11,"clone","","",16,[[]]],[11,"clone","","",65,[[],["wasm_externtype_t",3]]],[11,"clone","","",66,[[],["externtypeconversionerror",3]]],[11,"clone","","",67,[[],["wasm_frame_t",3]]],[11,"clone","","",17,[[]]],[11,"clone","","",68,[[],["wasm_functype_t",3]]],[11,"clone","","",18,[[]]],[11,"clone","","",69,[[],["wasm_globaltype_t",3]]],[11,"clone","","",19,[[]]],[11,"clone","","",70,[[],["wasm_importtype_t",3]]],[11,"clone","","",20,[[]]],[11,"clone","","",71,[[],["wasm_memorytype_t",3]]],[11,"clone","","",21,[[]]],[11,"clone","","",72,[[],["wasm_limits_t",3]]],[11,"clone","","",26,[[],["wasm_mutability_enum",4]]],[11,"clone","","",73,[[],["wasm_tabletype_t",3]]],[11,"clone","","",22,[[]]],[11,"clone","","",27,[[],["wasm_valkind_enum",4]]],[11,"clone","","",74,[[],["wasm_valtype_t",3]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","wasmer_c_api::wasm_c_api::unstable::wasi","",82,[[],["wasmer_named_extern_t",3]]],[11,"clone","","",29,[[]]],[11,"clone","wasmer_c_api::wasm_c_api::value","",83,[[],["wasm_val_inner",19]]],[11,"clone","","",31,[[]]],[11,"clone","","",30,[[]]],[11,"clone","wasmer_c_api::wasm_c_api::wasi","",32,[[],["wasi_version_t",4]]],[11,"default","wasmer_c_api::wasm_c_api::engine","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",53,[[],["wasm_config_t",3]]],[11,"default","wasmer_c_api::wasm_c_api::types","",74,[[]]],[11,"eq","wasmer_c_api::deprecated::export","",5,[[["wasmer_import_export_kind",4]]]],[11,"eq","wasmer_c_api::deprecated::import","",8,[[["version",4]]]],[11,"eq","wasmer_c_api::wasm_c_api::types","",26,[[["wasm_mutability_enum",4]]]],[11,"eq","","",27,[[["wasm_valkind_enum",4]]]],[11,"eq","wasmer_c_api::wasm_c_api::wasi","",32,[[["wasi_version_t",4]]]],[11,"fmt","wasmer_c_api::deprecated::import","",8,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::engine","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::externals","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::types","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::features","",76,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::middlewares","",77,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::target_lexicon","",79,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::wasi","",29,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::value","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::wasi","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::types","",66,[[["formatter",3]],["result",6]]],[11,"try_from","wasmer_c_api::deprecated::export","",5,[[],["result",4]]],[11,"try_from","wasmer_c_api::wasm_c_api::types","",26,[[["wasm_mutability_t",6]],["result",4]]],[11,"try_from","","",27,[[["wasm_valkind_t",6]],["result",4]]],[11,"try_from","wasmer_c_api::wasm_c_api::value","",30,[[["val",6]],["result",4]]],[11,"try_from","","",30,[[["val",6]],["result",4]]]],"p":[[3,"wasmer_limits_t"],[3,"wasmer_limit_option_t"],[3,"wasmer_byte_array"],[4,"wasmer_result_t"],[19,"wasmer_import_export_value"],[4,"wasmer_import_export_kind"],[3,"wasmer_import_t"],[3,"wasmer_wasi_map_dir_entry_t"],[4,"Version"],[3,"wasmer_value_t"],[19,"wasmer_value"],[4,"wasmer_value_tag"],[3,"CApiError"],[4,"wasmer_compiler_t"],[4,"wasmer_engine_t"],[3,"wasm_extern_vec_t"],[3,"wasm_exporttype_vec_t"],[3,"wasm_frame_vec_t"],[3,"wasm_functype_vec_t"],[3,"wasm_globaltype_vec_t"],[3,"wasm_importtype_vec_t"],[3,"wasm_memorytype_vec_t"],[3,"wasm_tabletype_vec_t"],[3,"wasm_valtype_vec_t"],[3,"wasm_byte_vec_t"],[4,"wasm_externkind_enum"],[4,"wasm_mutability_enum"],[4,"wasm_valkind_enum"],[4,"wasmer_parser_operator_t"],[3,"wasmer_named_extern_vec_t"],[3,"wasm_val_t"],[3,"wasm_val_vec_t"],[4,"wasi_version_t"],[3,"wasmer_export_t"],[3,"wasmer_export_func_t"],[3,"wasmer_exports_t"],[3,"wasmer_export_descriptor_t"],[3,"NamedExportDescriptors"],[3,"wasmer_export_descriptors_t"],[3,"wasmer_global_descriptor_t"],[3,"wasmer_global_t"],[3,"wasmer_import_object_t"],[3,"wasmer_import_func_t"],[3,"wasmer_import_descriptor_t"],[3,"wasmer_import_descriptors_t"],[3,"wasmer_import_object_iter_t"],[3,"NamedImportDescriptors"],[3,"wasmer_instance_t"],[3,"wasmer_instance_context_t"],[3,"wasmer_memory_t"],[3,"wasmer_module_t"],[3,"wasmer_serialized_module_t"],[3,"wasmer_table_t"],[3,"wasm_config_t"],[3,"wasm_engine_t"],[3,"wasm_func_t"],[3,"wasm_global_t"],[3,"wasm_memory_t"],[3,"wasm_table_t"],[3,"wasm_extern_t"],[3,"wasm_instance_t"],[3,"wasm_module_t"],[3,"wasm_store_t"],[3,"wasm_trap_t"],[3,"wasm_exporttype_t"],[3,"wasm_externtype_t"],[3,"ExternTypeConversionError"],[3,"wasm_frame_t"],[3,"wasm_functype_t"],[3,"wasm_globaltype_t"],[3,"wasm_importtype_t"],[3,"wasm_memorytype_t"],[3,"wasm_limits_t"],[3,"wasm_tabletype_t"],[3,"wasm_valtype_t"],[3,"wasm_ref_t"],[3,"wasmer_features_t"],[3,"wasmer_middleware_t"],[3,"wasmer_metering_t"],[3,"wasmer_target_t"],[3,"wasmer_triple_t"],[3,"wasmer_cpu_features_t"],[3,"wasmer_named_extern_t"],[19,"wasm_val_inner"],[3,"wasi_config_t"],[3,"wasi_env_t"],[6,"wasm_mutability_t"],[6,"wasm_name_t"]]},\
"wasmer_cache":{"doc":"The `wasmer-cache` crate provides the necessary…","i":[[4,"DeserializeError","wasmer_cache","The Deserialize error can occur when loading a compiled…",null,null],[13,"Io","","An IO error",0,null],[13,"Generic","","A generic deserialization error",0,null],[13,"Incompatible","","Incompatible serialized binary",0,null],[13,"CorruptedBinary","","The provided binary is corrupted",0,null],[13,"Compiler","","The binary was valid, but we got an error when trying to…",0,null],[4,"SerializeError","","The Serialize error can occur when serializing a compiled…",null,null],[13,"Io","","An IO error",1,null],[13,"Generic","","A generic serialization error",1,null],[3,"FileSystemCache","","Representation of a directory that contains compiled wasm…",null,null],[12,"path","","",2,null],[12,"ext","","",2,null],[3,"Hash","","A hash used as a key when loading and storing modules in a…",null,null],[12,"0","","",3,null],[0,"cache","","The cache module provides the common data structures used…",null,null],[8,"Cache","wasmer_cache::cache","A generic cache for storing and loading compiled wasm…",null,null],[16,"SerializeError","","The serialization error for the implementation",4,null],[16,"DeserializeError","","The deserialization error for the implementation",4,null],[10,"load","","Loads a module using the provided [`Store`] and [`Hash`].",4,[[["hash",3],["store",3]],[["module",3],["result",4]]]],[10,"store","","Store a [`Module`] into the cache with the given [`Hash`].",4,[[["module",3],["hash",3]],["result",4]]],[0,"filesystem","wasmer_cache","",null,null],[3,"FileSystemCache","wasmer_cache::filesystem","Representation of a directory that contains compiled wasm…",null,null],[12,"path","","",2,null],[12,"ext","","",2,null],[11,"new","wasmer_cache","Construct a new `FileSystemCache` around the specified…",2,[[["pathbuf",3],["into",8]],["result",6]]],[11,"set_cache_extension","","Set the extension for this cached file.",2,[[["option",4]]]],[0,"hash","","",null,null],[3,"Hash","wasmer_cache::hash","A hash used as a key when loading and storing modules in a…",null,null],[12,"0","","",3,null],[11,"new","wasmer_cache","Creates a new instance from 32 raw bytes. Does not perform…",3,[[]]],[11,"generate","","Creates a new hash from a slice of bytes.",3,[[]]],[11,"to_array","","",3,[[]]],[8,"Cache","","A generic cache for storing and loading compiled wasm…",null,null],[16,"SerializeError","","The serialization error for the implementation",4,null],[16,"DeserializeError","","The deserialization error for the implementation",4,null],[10,"load","","Loads a module using the provided [`Store`] and [`Hash`].",4,[[["hash",3],["store",3]],[["module",3],["result",4]]]],[10,"store","","Store a [`Module`] into the cache with the given [`Hash`].",4,[[["module",3],["hash",3]],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"from","","",1,[[["error",3]],["serializeerror",4]]],[11,"from","","",0,[[["error",3]],["deserializeerror",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"load","","",2,[[["hash",3],["store",3]],[["module",3],["result",4]]]],[11,"store","","",2,[[["module",3],["hash",3]],["result",4]]],[11,"clone","","",3,[[],["hash",3]]],[11,"eq","","",3,[[["hash",3]]]],[11,"ne","","",3,[[["hash",3]]]],[11,"to_string","","Create the hexadecimal representation of the stored hash.",3,[[],["string",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"from_str","","Create hash from hexadecimal representation",3,[[],["result",4]]]],"p":[[4,"DeserializeError"],[4,"SerializeError"],[3,"FileSystemCache"],[3,"Hash"],[8,"Cache"]]},\
"wasmer_cli":{"doc":"The Wasmer binary lib","i":[[0,"commands","wasmer_cli","The commands available in the Wasmer binary.",null,null],[3,"Wast","wasmer_cli::commands","The options for the `wasmer wast` subcommand",null,null],[12,"path","","Wast file to run",0,null],[12,"store","","",0,null],[12,"fail_fast","","A flag to indicate wast stop at the first error or continue.",0,null],[3,"Config","","The options for the `wasmer config` subcommand",null,null],[12,"prefix","","Print the installation prefix.",1,null],[12,"bindir","","Directory containing Wasmer executables.",1,null],[12,"includedir","","Directory containing Wasmer headers.",1,null],[12,"libdir","","Directory containing Wasmer libraries.",1,null],[12,"libs","","Libraries needed to link against Wasmer components.",1,null],[12,"cflags","","C compiler flags for files that include Wasmer headers.",1,null],[12,"pkg_config","","It outputs the necessary details for compiling and linking…",1,null],[3,"Inspect","","The options for the `wasmer validate` subcommand",null,null],[12,"path","","File to validate as WebAssembly",2,null],[12,"store","","",2,null],[3,"Run","","The options for the `wasmer run` subcommand",null,null],[12,"disable_cache","","Disable the cache",3,null],[12,"path","","File to run",3,null],[12,"invoke","","Invoke a specified function",3,null],[12,"command_name","","The command name is a string that will override the first…",3,null],[12,"cache_key","","A prehashed string, used to speed up start times by…",3,null],[12,"store","","",3,null],[12,"wasi","","",3,null],[12,"args","","Application arguments",3,null],[3,"SelfUpdate","","The options for the `wasmer self-update` subcommand",null,null],[3,"Validate","","The options for the `wasmer validate` subcommand",null,null],[12,"path","","File to validate as WebAssembly",4,null],[12,"store","","",4,null],[4,"Cache","","The options for the `wasmer cache` subcommand",null,null],[13,"Clean","","Clear the cache",5,null],[13,"Dir","","Display the location of the cache",5,null],[0,"cache","","",null,null],[4,"Cache","wasmer_cli::commands::cache","The options for the `wasmer cache` subcommand",null,null],[13,"Clean","","Clear the cache",5,null],[13,"Dir","","Display the location of the cache",5,null],[11,"execute","wasmer_cli::commands","Execute the cache command",5,[[],["result",6]]],[11,"clean","","",5,[[],["result",6]]],[11,"dir","","",5,[[],["result",6]]],[0,"config","","",null,null],[3,"Config","wasmer_cli::commands::config","The options for the `wasmer config` subcommand",null,null],[12,"prefix","","Print the installation prefix.",1,null],[12,"bindir","","Directory containing Wasmer executables.",1,null],[12,"includedir","","Directory containing Wasmer headers.",1,null],[12,"libdir","","Directory containing Wasmer libraries.",1,null],[12,"libs","","Libraries needed to link against Wasmer components.",1,null],[12,"cflags","","C compiler flags for files that include Wasmer headers.",1,null],[12,"pkg_config","","It outputs the necessary details for compiling and linking…",1,null],[11,"execute","wasmer_cli::commands","Runs logic for the `config` subcommand",1,[[],["result",6]]],[11,"inner_execute","","",1,[[],["result",6]]],[0,"inspect","","",null,null],[3,"Inspect","wasmer_cli::commands::inspect","The options for the `wasmer validate` subcommand",null,null],[12,"path","","File to validate as WebAssembly",2,null],[12,"store","","",2,null],[11,"execute","wasmer_cli::commands","Runs logic for the `validate` subcommand",2,[[],["result",6]]],[11,"inner_execute","","",2,[[],["result",6]]],[0,"run","","",null,null],[3,"Run","wasmer_cli::commands::run","The options for the `wasmer run` subcommand",null,null],[12,"disable_cache","","Disable the cache",3,null],[12,"path","","File to run",3,null],[12,"invoke","","Invoke a specified function",3,null],[12,"command_name","","The command name is a string that will override the first…",3,null],[12,"cache_key","","A prehashed string, used to speed up start times by…",3,null],[12,"store","","",3,null],[12,"wasi","","",3,null],[12,"args","","Application arguments",3,null],[0,"wasi","","",null,null],[3,"Wasi","wasmer_cli::commands::run::wasi","WASI Options",null,null],[12,"pre_opened_directories","","WASI pre-opened directory",6,null],[12,"mapped_dirs","","Map a host directory to a different location for the wasm…",6,null],[12,"env_vars","","Pass custom environment variables",6,null],[11,"get_version","","Gets the WASI version (if any) for the provided module",6,[[["module",3]],[["wasiversion",4],["option",4]]]],[11,"has_wasi_imports","","Checks if a given module has any WASI imports at all.",6,[[["module",3]]]],[11,"execute","","Helper function for executing Wasi from the `Run` command.",6,[[["module",3],["vec",3],["string",3]],["result",6]]],[11,"execute","wasmer_cli::commands","Execute the run command",3,[[],["result",6]]],[11,"inner_execute","","",3,[[],["result",6]]],[11,"get_module","","",3,[[],[["module",3],["result",6]]]],[11,"get_module_from_cache","","",3,[[["store",3],["enginetype",4],["compilertype",4]],[["module",3],["result",6]]]],[11,"get_cache","","Get the Compiler Filesystem cache",3,[[["enginetype",4],["compilertype",4]],[["result",6],["filesystemcache",3]]]],[11,"try_find_function","","",3,[[["instance",3]],[["result",6],["function",3]]]],[11,"invoke_function","","",3,[[["instance",3]],[["result",6],["box",3]]]],[0,"self_update","","When wasmer self-update is executed, this is what gets…",null,null],[3,"SelfUpdate","wasmer_cli::commands::self_update","The options for the `wasmer self-update` subcommand",null,null],[11,"execute","wasmer_cli::commands","Runs logic for the `self-update` subcommand",7,[[],["result",6]]],[11,"inner_execute","","",7,[[],["result",6]]],[0,"validate","","",null,null],[3,"Validate","wasmer_cli::commands::validate","The options for the `wasmer validate` subcommand",null,null],[12,"path","","File to validate as WebAssembly",4,null],[12,"store","","",4,null],[11,"execute","wasmer_cli::commands","Runs logic for the `validate` subcommand",4,[[],["result",6]]],[11,"inner_execute","","",4,[[],["result",6]]],[0,"wast","","Runs a .wast WebAssembly test suites",null,null],[3,"Wast","wasmer_cli::commands::wast","The options for the `wasmer wast` subcommand",null,null],[12,"path","","Wast file to run",0,null],[12,"store","","",0,null],[12,"fail_fast","","A flag to indicate wast stop at the first error or continue.",0,null],[11,"execute","wasmer_cli::commands","Runs logic for the `validate` subcommand",0,[[],["result",6]]],[11,"inner_execute","","",0,[[],["result",6]]],[0,"common","wasmer_cli","Common module with common used structures across different…",null,null],[3,"WasmFeatures","wasmer_cli::common","The WebAssembly features that can be passed through the…",null,null],[12,"simd","","Enable support for the SIMD proposal.",8,null],[12,"threads","","Enable support for the threads proposal.",8,null],[12,"reference_types","","Enable support for the reference types proposal.",8,null],[12,"multi_value","","Enable support for the multi value proposal.",8,null],[12,"bulk_memory","","Enable support for the bulk memory proposal.",8,null],[12,"all","","Enable support for all pre-standard proposals.",8,null],[5,"get_cache_dir","","Get the cache dir",null,[[],["pathbuf",3]]],[0,"error","wasmer_cli","Implements `PretyError` to print pretty errors in the CLI…",null,null],[3,"PrettyError","wasmer_cli::error","A `PrettyError` for printing `anyhow::Error` nicely.",null,null],[12,"error","","",9,null],[3,"Indented","","",null,null],[12,"inner","","",10,null],[12,"number","","",10,null],[12,"started","","",10,null],[12,"is_last","","",10,null],[11,"report","","Process a `Result` printing any errors and exiting the…",9,[[["result",4],["error",3]]]],[0,"c_gen","wasmer_cli","A convenient little abstraction for building up C…",null,null],[4,"CType","wasmer_cli::c_gen","A Type in the C language.",null,null],[13,"Void","","C `void` type.",11,null],[13,"PointerTo","","A pointer to some other type.",11,null],[12,"is_const","wasmer_cli::c_gen::CType","Whether the pointer is `const`.",12,null],[12,"inner","","The type that the pointer points to.",12,null],[13,"U8","wasmer_cli::c_gen","C 8 bit unsigned integer type.",11,null],[13,"U16","","C 16 bit unsigned integer type.",11,null],[13,"U32","","C 32 bit unsigned integer type.",11,null],[13,"U64","","C 64 bit unsigned integer type.",11,null],[13,"USize","","C pointer sized unsigned integer type.",11,null],[13,"I8","","C 8 bit signed integer type.",11,null],[13,"I16","","C 16 bit signed integer type.",11,null],[13,"I32","","C 32 bit signed integer type.",11,null],[13,"I64","","C 64 bit signed integer type.",11,null],[13,"ISize","","C pointer sized signed integer type.",11,null],[13,"Function","","A function or function pointer.",11,null],[12,"arguments","wasmer_cli::c_gen::CType","The arguments the function takes.",13,null],[12,"return_value","","The return value if it has one",13,null],[13,"Array","wasmer_cli::c_gen","C constant array.",11,null],[12,"inner","wasmer_cli::c_gen::CType","The type of the array.",14,null],[13,"TypeDef","wasmer_cli::c_gen","A user defined type.",11,null],[4,"CStatement","","A statement in the C programming language. This may not be…",null,null],[13,"Declaration","","A declaration of some kind.",15,null],[12,"name","wasmer_cli::c_gen::CStatement","The name of the thing being declared.",16,null],[12,"is_extern","","Whether the thing being declared is `extern`.",16,null],[12,"is_const","","Whether the thing being declared is `const`.",16,null],[12,"ctype","","The type of the thing being declared.",16,null],[12,"definition","","The definition of the thing being declared.",16,null],[13,"LiteralArray","wasmer_cli::c_gen","A literal array of CStatements.",15,null],[12,"items","wasmer_cli::c_gen::CStatement","The contents of the array.",17,null],[13,"LiteralConstant","wasmer_cli::c_gen","A literal constant value, passed through directly as a…",15,null],[12,"value","wasmer_cli::c_gen::CStatement","The raw value acting as a constant.",18,null],[13,"Cast","wasmer_cli::c_gen","A C-style cast",15,null],[12,"target_type","wasmer_cli::c_gen::CStatement","The type to cast to.",19,null],[12,"expression","","The thing being cast.",19,null],[13,"TypeDef","wasmer_cli::c_gen","Typedef one type to another.",15,null],[12,"source_type","wasmer_cli::c_gen::CStatement","The type of the thing being typedef\'d.",20,null],[12,"new_name","","The new name by which this type may be called.",20,null],[5,"generate_c","wasmer_cli::c_gen","Generate C source code from some `CStatements` into a…",null,[[],["string",3]]],[0,"object_file_header","","Generate a header file for the object file produced by the…",null,null],[5,"generate_header_file","wasmer_cli::c_gen::object_file_header","Generate the header file that goes with the generated…",null,[[["moduleinfo",3],["symbolregistry",8]],["string",3]]],[17,"HELPER_FUNCTIONS","","Helper functions to simplify the usage of the object file…",null,null],[6,"CIdent","wasmer_cli::c_gen","An identifier in C.",null,null],[11,"void_ptr","","Convenience function to get a mutable void pointer type.",11,[[]]],[11,"const_void_ptr","","Convenience function to get a const void pointer type.",11,[[]]],[11,"generate_c","","Generate the C source code for a type into the given…",11,[[["string",3]]]],[11,"generate_c_with_name","","Generate the C source code for a type with a nameinto the…",11,[[["string",3]]]],[11,"generate_c","","Generate C source code for the given CStatement.",15,[[["string",3]]]],[0,"cli","wasmer_cli","The logic for the Wasmer CLI tool.",null,null],[4,"WasmerCLIOptions","wasmer_cli::cli","The options for the wasmer Command Line Interface",null,null],[13,"Run","","Run a WebAssembly file. Formats accepted: wasm, wat",21,null],[13,"Cache","","Wasmer cache",21,null],[13,"Validate","","Validate a WebAssembly binary",21,null],[13,"Config","","Get various configuration information needed to compile…",21,null],[13,"SelfUpdate","","Update wasmer to the latest version",21,null],[13,"Inspect","","Inspect a WebAssembly file",21,null],[13,"Wast","","Run spec testsuite",21,null],[5,"wasmer_main","","The main function for the Wasmer CLI tool.",null,[[]]],[11,"execute","","",21,[[],["result",6]]],[0,"store","wasmer_cli","Common module with common used structures across different…",null,null],[3,"StoreOptions","wasmer_cli::store","The compiler and engine options",null,null],[12,"compiler","","",22,null],[12,"jit","","Use JIT Engine.",22,null],[12,"native","","Use Native Engine.",22,null],[12,"object_file","","Use ObjectFile Engine.",22,null],[3,"CompilerOptions","","The compiler options",null,null],[12,"singlepass","","Use Singlepass compiler.",23,null],[12,"cranelift","","Use Cranelift compiler.",23,null],[12,"llvm","","Use LLVM compiler.",23,null],[12,"enable_verifier","","Enable compiler internal verification.",23,null],[12,"llvm_debug_dir","","LLVM debug directory, where IR and object files will be…",23,null],[12,"backend","","The deprecated backend flag - Please do not use",23,null],[12,"features","","",23,null],[4,"CompilerType","","The compiler used for the store",null,null],[13,"Singlepass","","Singlepass compiler",24,null],[13,"Cranelift","","Cranelift compiler",24,null],[13,"LLVM","","LLVM compiler",24,null],[13,"Headless","","Headless compiler",24,null],[4,"EngineType","","The engine used for the store",null,null],[13,"JIT","","JIT Engine",25,null],[13,"Native","","Native Engine",25,null],[13,"ObjectFile","","Object File Engine",25,null],[11,"enabled","","Return all enabled compilers",24,[[],[["compilertype",4],["vec",3]]]],[11,"get_engine","","",22,[[],[["enginetype",4],["result",6]]]],[11,"get_engine_headless","","",22,[[],["result",6]]],[11,"get_store","","Get the store (headless engine)",22,[[],["result",6]]],[11,"get_store_for_target","","Gets the store for provided host target",22,[[["target",3]],["result",6]]],[0,"suggestions","wasmer_cli","This file provides suggestions for the user, to help them…",null,null],[5,"suggest_function_exports","wasmer_cli::suggestions","Suggest function exports for the module",null,[[["module",3]],[["vec",3],["string",3]]]],[0,"utils","wasmer_cli","Utility functions for the WebAssembly module",null,null],[5,"wasmer_should_print_color","wasmer_cli::utils","Whether or not Wasmer should print with color",null,[[]]],[5,"retrieve_alias_pathbuf","","",null,[[],["result",6]]],[5,"parse_mapdir","","Parses a mapdir from a string",null,[[],["result",6]]],[5,"parse_envvar","","Parses an environment variable.",null,[[],["result",6]]],[17,"VERSION","wasmer_cli","Version number of this crate.",null,null],[14,"warning","","A macro that prints a warning with nice colors",null,null],[11,"from","wasmer_cli::commands","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from","wasmer_cli::commands::run::wasi","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","wasmer_cli::common","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from","wasmer_cli::error","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","wasmer_cli::c_gen","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from","wasmer_cli::cli","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from","wasmer_cli::store","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"clone","wasmer_cli::commands::run::wasi","",6,[[],["wasi",3]]],[11,"clone","wasmer_cli::commands","",3,[[],["run",3]]],[11,"clone","wasmer_cli::common","",8,[[],["wasmfeatures",3]]],[11,"clone","wasmer_cli::c_gen","",11,[[],["ctype",4]]],[11,"clone","","",15,[[],["cstatement",4]]],[11,"clone","wasmer_cli::store","",22,[[],["storeoptions",3]]],[11,"clone","","",23,[[],["compileroptions",3]]],[11,"clone","","",25,[[],["enginetype",4]]],[11,"default","wasmer_cli::c_gen","",11,[[],["ctype",4]]],[11,"eq","wasmer_cli::store","",24,[[["compilertype",4]]]],[11,"eq","","",25,[[["enginetype",4]]]],[11,"to_string","","",24,[[],["string",3]]],[11,"to_string","","",25,[[],["string",3]]],[11,"fmt","wasmer_cli::commands","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::run::wasi","",6,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::common","",8,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::error","",9,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::c_gen","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::store","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"from_str","","",24,[[],["result",6]]],[11,"write_str","wasmer_cli::error","",10,[[],["result",6]]],[11,"into_app","wasmer_cli::commands","",5,[[],["app",3]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"into_app","","",1,[[],["app",3]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"into_app","","",2,[[],["app",3]]],[11,"augment_clap","","",2,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::run::wasi","",6,[[],["app",3]]],[11,"augment_clap","","",6,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands","",3,[[],["app",3]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"into_app","","",7,[[],["app",3]]],[11,"augment_clap","","",7,[[["app",3]],["app",3]]],[11,"into_app","","",4,[[],["app",3]]],[11,"augment_clap","","",4,[[["app",3]],["app",3]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::common","",8,[[],["app",3]]],[11,"augment_clap","","",8,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::cli","",21,[[],["app",3]]],[11,"augment_clap","","",21,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::store","",22,[[],["app",3]]],[11,"augment_clap","","",22,[[["app",3]],["app",3]]],[11,"into_app","","",23,[[],["app",3]]],[11,"augment_clap","","",23,[[["app",3]],["app",3]]],[11,"from_arg_matches","wasmer_cli::commands","",5,[[["argmatches",3]]]],[11,"from_arg_matches","","",1,[[["argmatches",3]]]],[11,"from_arg_matches","","",2,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::run::wasi","",6,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands","",3,[[["argmatches",3]]]],[11,"from_arg_matches","","",7,[[["argmatches",3]]]],[11,"from_arg_matches","","",4,[[["argmatches",3]]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::common","",8,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::cli","",21,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::store","",22,[[["argmatches",3]]]],[11,"from_arg_matches","","",23,[[["argmatches",3]]]],[11,"augment_subcommands","wasmer_cli::commands","",5,[[["app",3]],["app",3]]],[11,"from_subcommand","","",5,[[["option",4]],["option",4]]],[11,"augment_subcommands","wasmer_cli::cli","",21,[[["app",3]],["app",3]]],[11,"from_subcommand","","",21,[[["option",4]],["option",4]]],[11,"from_str","wasmer_cli::commands","",5,[[],[["string",3],["result",4]]]]],"p":[[3,"Wast"],[3,"Config"],[3,"Inspect"],[3,"Run"],[3,"Validate"],[4,"Cache"],[3,"Wasi"],[3,"SelfUpdate"],[3,"WasmFeatures"],[3,"PrettyError"],[3,"Indented"],[4,"CType"],[13,"PointerTo"],[13,"Function"],[13,"Array"],[4,"CStatement"],[13,"Declaration"],[13,"LiteralArray"],[13,"LiteralConstant"],[13,"Cast"],[13,"TypeDef"],[4,"WasmerCLIOptions"],[3,"StoreOptions"],[3,"CompilerOptions"],[4,"CompilerType"],[4,"EngineType"]]},\
"wasmer_compiler":{"doc":"The `wasmer-compiler` crate provides the necessary…","i":[[4,"Architecture","wasmer_compiler","The \\\"architecture\\\" field, which in some cases also…",null,null],[13,"Unknown","","",0,null],[13,"Arm","","",0,null],[13,"AmdGcn","","",0,null],[13,"Aarch64","","",0,null],[13,"Asmjs","","",0,null],[13,"Avr","","",0,null],[13,"Hexagon","","",0,null],[13,"X86_32","","",0,null],[13,"Mips32","","",0,null],[13,"Mips64","","",0,null],[13,"Msp430","","",0,null],[13,"Nvptx64","","",0,null],[13,"Powerpc","","",0,null],[13,"Powerpc64","","",0,null],[13,"Powerpc64le","","",0,null],[13,"Riscv32","","",0,null],[13,"Riscv64","","",0,null],[13,"S390x","","",0,null],[13,"Sparc","","",0,null],[13,"Sparc64","","",0,null],[13,"Sparcv9","","",0,null],[13,"Wasm32","","",0,null],[13,"Wasm64","","",0,null],[13,"X86_64","","",0,null],[4,"BinaryFormat","","The \\\"binary format\\\" field, which is usually omitted, and…",null,null],[13,"Unknown","","",1,null],[13,"Elf","","",1,null],[13,"Coff","","",1,null],[13,"Macho","","",1,null],[13,"Wasm","","",1,null],[4,"CallingConvention","","The calling convention, which specifies things like which…",null,null],[13,"SystemV","","\\\"System V\\\", which is used on most Unix-like platfoms. Note…",2,null],[13,"WasmBasicCAbi","","The WebAssembly C ABI.…",2,null],[13,"WindowsFastcall","","\\\"Windows Fastcall\\\", which is used on Windows. Note that…",2,null],[4,"Endianness","","The target memory endianness.",null,null],[13,"Little","","",3,null],[13,"Big","","",3,null],[4,"OperatingSystem","","The \\\"operating system\\\" field, which sometimes implies an…",null,null],[13,"Unknown","","",4,null],[13,"AmdHsa","","",4,null],[13,"Bitrig","","",4,null],[13,"Cloudabi","","",4,null],[13,"Cuda","","",4,null],[13,"Darwin","","",4,null],[13,"Dragonfly","","",4,null],[13,"Emscripten","","",4,null],[13,"Freebsd","","",4,null],[13,"Fuchsia","","",4,null],[13,"Haiku","","",4,null],[13,"Hermit","","",4,null],[13,"Illumos","","",4,null],[13,"Ios","","",4,null],[13,"L4re","","",4,null],[13,"Linux","","",4,null],[13,"MacOSX","","",4,null],[12,"major","wasmer_compiler::OperatingSystem","",5,null],[12,"minor","","",5,null],[12,"patch","","",5,null],[13,"Nebulet","wasmer_compiler","",4,null],[13,"Netbsd","","",4,null],[13,"None_","","",4,null],[13,"Openbsd","","",4,null],[13,"Psp","","",4,null],[13,"Redox","","",4,null],[13,"Solaris","","",4,null],[13,"Tvos","","",4,null],[13,"Uefi","","",4,null],[13,"VxWorks","","",4,null],[13,"Wasi","","",4,null],[13,"Windows","","",4,null],[4,"PointerWidth","","The width of a pointer (in the default address space).",null,null],[13,"U16","","",6,null],[13,"U32","","",6,null],[13,"U64","","",6,null],[3,"Triple","","A target \\\"triple\\\". Historically such things had three…",null,null],[12,"architecture","","The \\\"architecture\\\" (and sometimes the subarchitecture).",7,null],[12,"vendor","","The \\\"vendor\\\" (whatever that means).",7,null],[12,"operating_system","","The \\\"operating system\\\" (sometimes also the environment).",7,null],[12,"environment","","The \\\"environment\\\" on top of the operating system (often…",7,null],[12,"binary_format","","The \\\"binary format\\\" (rarely used).",7,null],[3,"Features","","Controls which experimental features will be enabled.…",null,null],[12,"threads","","Threads proposal should be enabled",8,null],[12,"reference_types","","Reference Types proposal should be enabled",8,null],[12,"simd","","SIMD proposal should be enabled",8,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",8,null],[12,"multi_value","","Multi Value proposal should be enabled",8,null],[12,"tail_call","","Tail call proposal should be enabled",8,null],[12,"module_linking","","Module Linking proposal should be enabled",8,null],[12,"multi_memory","","Multi Memory proposal should be enabled",8,null],[12,"memory64","","64-bit Memory proposal should be enabled",8,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",8,null],[3,"FunctionAddressMap","","Function and its instructions addresses mappings.",null,null],[12,"instructions","","Instructions maps. The array is sorted by the…",9,null],[12,"start_srcloc","","Function start source location (normally declaration).",9,null],[12,"end_srcloc","","Function end source location.",9,null],[12,"body_offset","","Generated function body offset if applicable, otherwise 0.",9,null],[12,"body_len","","Generated function body length.",9,null],[3,"InstructionAddressMap","","Single source location to generated address mapping.",null,null],[12,"srcloc","","Original source location.",10,null],[12,"code_offset","","Generated instructions offset.",10,null],[12,"code_len","","Generated instructions length.",10,null],[3,"MiddlewareError","","A error in the middleware.",null,null],[12,"name","","The name of the middleware where the error was created",11,null],[12,"message","","The error message",11,null],[3,"Compilation","","The result of compiling a WebAssembly module\'s functions.",null,null],[12,"functions","","Compiled code for the function bodies.",12,null],[12,"custom_sections","","Custom sections for the module. It will hold the data, for…",12,null],[12,"function_call_trampolines","","Trampolines to call a function defined locally in the wasm…",12,null],[12,"dynamic_function_trampolines","","Trampolines to call a dynamic function defined in a host,…",12,null],[12,"debug","","Section ids corresponding to the Dwarf debug info",12,null],[3,"CompiledFunction","","The result of compiling a WebAssembly function.",null,null],[12,"body","","The function body.",13,null],[12,"relocations","","The relocations (in the body)",13,null],[12,"jt_offsets","","The jump tables offsets (in the body).",13,null],[12,"frame_info","","The frame information.",13,null],[3,"CompiledFunctionFrameInfo","","The frame info for a Compiled function.",null,null],[12,"traps","","The traps (in the function body).",14,null],[12,"address_map","","The address map.",14,null],[3,"Dwarf","","The DWARF information for this Compilation.",null,null],[12,"eh_frame","","The section index in the [`Compilation`] that corresponds…",15,null],[3,"FunctionBody","","The function body.",null,null],[12,"body","","The function body bytes.",16,null],[12,"unwind_info","","The function unwind info",16,null],[3,"JumpTable","","An opaque reference to a jump table.",null,null],[12,"0","","",17,null],[3,"CompileModuleInfo","","The required info for compiling a module.",null,null],[12,"features","","The features used for compiling the module",18,null],[12,"module","","The module information",18,null],[12,"memory_styles","","The memory styles used for compiling.",18,null],[12,"table_styles","","The table plans used for compiling.",18,null],[3,"Relocation","","A record of a relocation to perform.",null,null],[12,"kind","","The relocation kind.",19,null],[12,"reloc_target","","Relocation target.",19,null],[12,"offset","","The offset where to apply the relocation.",19,null],[12,"addend","","The addend to add to the relocation value.",19,null],[3,"CustomSection","","A Section for a `Compilation`.",null,null],[12,"protection","","Memory protection that applies to this section.",20,null],[12,"bytes","","The bytes corresponding to this section.",20,null],[12,"relocations","","Relocations that apply to this custom section.",20,null],[3,"SectionBody","","The bytes in the section.",null,null],[12,"0","","",21,null],[3,"SectionIndex","","Index type of a Section defined inside a WebAssembly…",null,null],[12,"0","","",22,null],[3,"SourceLoc","","A source location.",null,null],[12,"0","","",23,null],[3,"Target","","This is the target that we will use for compiling the…",null,null],[12,"triple","","",24,null],[12,"cpu_features","","",24,null],[3,"FunctionBodyData","","Contains function data: bytecode and its offset in the…",null,null],[12,"data","","Function body bytecode.",25,null],[12,"module_offset","","Body offset relative to the module file.",25,null],[3,"MiddlewareBinaryReader","","A Middleware binary reader of the WebAssembly structures…",null,null],[12,"state","","Parsing state.",26,null],[12,"chain","","The backing middleware chain for this reader.",26,null],[3,"MiddlewareReaderState","","The state of the binary reader. Exposed to middlewares to…",null,null],[12,"inner","","Raw binary reader.",27,null],[12,"pending_operations","","The pending operations added by the middleware.",27,null],[3,"ModuleEnvironment","","Object containing the standalone environment information.",null,null],[12,"result","","The result to be filled in.",28,null],[12,"imports","","",28,null],[3,"ModuleInfoTranslation","","The result of translating via `ModuleEnvironment`.…",null,null],[12,"module","","ModuleInfo information.",29,null],[12,"function_body_inputs","","References to the function bodies.",29,null],[12,"data_initializers","","References to the data initializers.",29,null],[12,"module_translation_state","","The decoded Wasm types for the module.",29,null],[3,"ModuleTranslationState","","Contains information decoded from the Wasm module that…",null,null],[12,"wasm_types","","A map containing a Wasm module\'s original, raw signatures.",30,null],[3,"TrapInformation","","Information about trap.",null,null],[12,"code_offset","","The offset of the trapping instruction in native code. It…",31,null],[12,"trap_code","","Code of the trap.",31,null],[4,"Symbol","","The kinds of wasmer_types objects that might be found in a…",null,null],[13,"LocalFunction","","A function defined in the wasm.",32,null],[13,"Section","","A wasm section.",32,null],[13,"FunctionCallTrampoline","","The function call trampoline for a given signature.",32,null],[13,"DynamicFunctionTrampoline","","The dynamic function trampoline for a given function.",32,null],[4,"CompileError","","The WebAssembly.CompileError object indicates an error…",null,null],[13,"Wasm","","A Wasm translation error occured.",33,null],[13,"Codegen","","A compilation error occured.",33,null],[13,"Validate","","The module did not pass validation.",33,null],[13,"UnsupportedFeature","","The compiler doesn\'t support a Wasm feature",33,null],[13,"UnsupportedTarget","","The compiler cannot compile for the given target. This can…",33,null],[13,"Resource","","Insufficient resources available for execution.",33,null],[4,"ParseCpuFeatureError","","The error that can happen while parsing a `str` to…",null,null],[13,"Missing","","The provided string feature doesn\'t exist",34,null],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",35,null],[12,"message","wasmer_compiler::WasmError","A string describing the validation error.",36,null],[12,"offset","","The bytecode offset where the error occurred.",36,null],[13,"Unsupported","wasmer_compiler","A feature used by the WebAssembly code is not supported by…",35,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",35,null],[13,"Middleware","","An error from the middleware error.",35,null],[13,"Generic","","A generic error.",35,null],[4,"RelocationKind","","Relocation kinds for every ISA.",null,null],[13,"Abs4","","absolute 4-byte",37,null],[13,"Abs8","","absolute 8-byte",37,null],[13,"X86PCRel4","","x86 PC-relative 4-byte",37,null],[13,"X86PCRel8","","x86 PC-relative 8-byte",37,null],[13,"X86PCRelRodata4","","x86 PC-relative 4-byte offset to trailing rodata",37,null],[13,"X86CallPCRel4","","x86 call to PC-relative 4-byte",37,null],[13,"X86CallPLTRel4","","x86 call to PLT-relative 4-byte",37,null],[4,"RelocationTarget","","Destination function. Can be either user function or some…",null,null],[13,"LocalFunc","","A relocation to a function defined locally in the wasm…",38,null],[13,"LibCall","","A compiler-generated libcall.",38,null],[13,"JumpTable","","Jump table index.",38,null],[13,"CustomSection","","Custom sections generated by the compiler",38,null],[4,"CustomSectionProtection","","Custom section Protection.",null,null],[13,"Read","","A custom section with read permission.",39,null],[13,"ReadExecute","","A custom section with read and execute permissions.",39,null],[4,"CpuFeature","","The nomenclature is inspired by the `cpuid` crate. The…",null,null],[13,"SSE2","","",40,null],[13,"SSE3","","",40,null],[13,"SSSE3","","",40,null],[13,"SSE41","","",40,null],[13,"SSE42","","",40,null],[13,"POPCNT","","",40,null],[13,"AVX","","",40,null],[13,"BMI1","","",40,null],[13,"BMI2","","",40,null],[13,"AVX2","","",40,null],[13,"AVX512DQ","","",40,null],[13,"AVX512VL","","",40,null],[13,"AVX512F","","",40,null],[13,"LZCNT","","",40,null],[4,"CompiledFunctionUnwindInfo","","Compiled function unwind information.",null,null],[13,"WindowsX64","","Windows UNWIND_INFO.",41,null],[13,"Dwarf","","The unwind info is added to the Dwarf section in…",41,null],[5,"translate_module","","Translate a sequence of bytes forming a valid Wasm binary…",null,[[["moduleenvironment",3]],[["wasmresult",6],["moduletranslationstate",3]]]],[5,"wptype_to_type","","Helper function translating wasmparser types to Wasm Type.",null,[[["type",4]],[["wasmresult",6],["type",4]]]],[0,"lib","","",null,null],[0,"std","wasmer_compiler::lib","",null,null],[0,"borrow","wasmer_compiler::lib::std","A module for working with borrowed data.",null,null],[8,"ToOwned","wasmer_compiler::lib::std::borrow","A generalization of `Clone` to borrowed data.",null,null],[16,"Owned","","The resulting type after obtaining ownership.",42,null],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",42,[[]]],[11,"clone_into","","Uses borrowed data to replace owned data, usually by…",42,[[]]],[4,"Cow","","A clone-on-write smart pointer.",null,null],[13,"Borrowed","","Borrowed data.",43,null],[13,"Owned","","Owned data.",43,null],[8,"Borrow","","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",44,[[]]],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",45,[[]]],[0,"boxed","wasmer_compiler::lib::std","A pointer type for heap allocation.",null,null],[3,"Box","wasmer_compiler::lib::std::boxed","A pointer type for heap allocation.",null,null],[12,"0","","",46,null],[12,"1","","",46,null],[0,"collections","wasmer_compiler::lib::std","Collection types.",null,null],[0,"hash_map","wasmer_compiler::lib::std::collections","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"HashMap","wasmer_compiler::lib::std::collections::hash_map","A hash map implemented with quadratic probing and SIMD…",null,null],[12,"base","","",47,null],[3,"Iter","","An iterator over the entries of a `HashMap`.",null,null],[12,"base","","",48,null],[3,"IterMut","","A mutable iterator over the entries of a `HashMap`.",null,null],[12,"base","","",49,null],[3,"IntoIter","","An owning iterator over the entries of a `HashMap`.",null,null],[12,"base","","",50,null],[3,"Keys","","An iterator over the keys of a `HashMap`.",null,null],[12,"inner","","",51,null],[3,"Values","","An iterator over the values of a `HashMap`.",null,null],[12,"inner","","",52,null],[3,"Drain","","A draining iterator over the entries of a `HashMap`.",null,null],[12,"base","","",53,null],[3,"DrainFilter","","A draining, filtering iterator over the entries of a…",null,null],[12,"base","","",54,null],[3,"ValuesMut","","A mutable iterator over the values of a `HashMap`.",null,null],[12,"inner","","",55,null],[3,"IntoKeys","","An owning iterator over the keys of a `HashMap`.",null,null],[12,"inner","","",56,null],[3,"IntoValues","","An owning iterator over the values of a `HashMap`.",null,null],[12,"inner","","",57,null],[3,"RawEntryBuilderMut","","A builder for computing where in a HashMap a key-value…",null,null],[12,"map","","",58,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",59,null],[13,"Vacant","","A vacant entry.",59,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[12,"base","","",60,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[12,"base","","",61,null],[3,"RawEntryBuilder","","A builder for computing where in a HashMap a key-value…",null,null],[12,"map","","",62,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",63,null],[13,"Vacant","","A vacant entry.",63,null],[3,"OccupiedEntry","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[12,"base","","",64,null],[3,"VacantEntry","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[12,"base","","",65,null],[3,"RandomState","","`RandomState` is the default state for [`HashMap`] types.",null,null],[12,"k0","","",66,null],[12,"k1","","",66,null],[3,"DefaultHasher","","The default [`Hasher`] used by [`RandomState`].",null,null],[12,"0","","",67,null],[0,"hash_set","wasmer_compiler::lib::std::collections","A hash set implemented as a `HashMap` where the value is…",null,null],[3,"HashSet","wasmer_compiler::lib::std::collections::hash_set","A hash set implemented as a `HashMap` where the value is…",null,null],[12,"base","","",68,null],[3,"Iter","","An iterator over the items of a `HashSet`.",null,null],[12,"base","","",69,null],[3,"IntoIter","","An owning iterator over the items of a `HashSet`.",null,null],[12,"base","","",70,null],[3,"Drain","","A draining iterator over the items of a `HashSet`.",null,null],[12,"base","","",71,null],[3,"DrainFilter","","A draining, filtering iterator over the items of a…",null,null],[12,"base","","",72,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[12,"iter","","",73,null],[12,"other","","",73,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[12,"iter","","",74,null],[12,"other","","",74,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[12,"iter","","",75,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[12,"iter","","",76,null],[4,"Bound","wasmer_compiler::lib::std::collections","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",77,null],[13,"Excluded","","An exclusive bound.",77,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",77,null],[0,"binary_heap","","A priority queue implemented with a binary heap.",null,null],[3,"BinaryHeap","wasmer_compiler::lib::std::collections::binary_heap","A priority queue implemented with a binary heap.",null,null],[12,"data","","",78,null],[3,"PeekMut","","Structure wrapping a mutable reference to the greatest…",null,null],[12,"heap","","",79,null],[12,"sift","","",79,null],[3,"Iter","","An iterator over the elements of a `BinaryHeap`.",null,null],[12,"iter","","",80,null],[3,"IntoIter","","An owning iterator over the elements of a `BinaryHeap`.",null,null],[12,"iter","","",81,null],[3,"IntoIterSorted","","",null,null],[12,"inner","","",82,null],[3,"Drain","","A draining iterator over the elements of a `BinaryHeap`.",null,null],[12,"iter","","",83,null],[3,"DrainSorted","","A draining iterator over the elements of a `BinaryHeap`.",null,null],[12,"inner","","",84,null],[0,"btree_map","wasmer_compiler::lib::std::collections","A map based on a B-Tree.",null,null],[4,"Entry","wasmer_compiler::lib::std::collections::btree_map","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant entry.",85,null],[13,"Occupied","","An occupied entry.",85,null],[3,"OccupiedEntry","","A view into an occupied entry in a `BTreeMap`. It is part…",null,null],[12,"handle","","",86,null],[12,"dormant_map","","",86,null],[12,"_marker","","",86,null],[3,"VacantEntry","","A view into a vacant entry in a `BTreeMap`. It is part of…",null,null],[12,"key","","",87,null],[12,"handle","","",87,null],[12,"dormant_map","","",87,null],[12,"_marker","","",87,null],[3,"BTreeMap","","A map based on a B-Tree.",null,null],[12,"root","","",88,null],[12,"length","","",88,null],[3,"Iter","","An iterator over the entries of a `BTreeMap`.",null,null],[12,"range","","",89,null],[12,"length","","",89,null],[3,"IntoIter","","An owning iterator over the entries of a `BTreeMap`.",null,null],[12,"front","","",90,null],[12,"back","","",90,null],[12,"length","","",90,null],[3,"Keys","","An iterator over the keys of a `BTreeMap`.",null,null],[12,"inner","","",91,null],[3,"Values","","An iterator over the values of a `BTreeMap`.",null,null],[12,"inner","","",92,null],[3,"ValuesMut","","A mutable iterator over the values of a `BTreeMap`.",null,null],[12,"inner","","",93,null],[3,"IntoKeys","","An owning iterator over the keys of a `BTreeMap`.",null,null],[12,"inner","","",94,null],[3,"IntoValues","","An owning iterator over the values of a `BTreeMap`.",null,null],[12,"inner","","",95,null],[3,"Range","","An iterator over a sub-range of entries in a `BTreeMap`.",null,null],[12,"front","","",96,null],[12,"back","","",96,null],[3,"RangeMut","","A mutable iterator over a sub-range of entries in a…",null,null],[12,"front","","",97,null],[12,"back","","",97,null],[12,"_marker","","",97,null],[3,"DrainFilter","","An iterator produced by calling `drain_filter` on BTreeMap.",null,null],[12,"pred","","",98,null],[12,"inner","","",98,null],[3,"IterMut","","A mutable iterator over the entries of a `BTreeMap`.",null,null],[12,"range","","",99,null],[12,"length","","",99,null],[0,"btree_set","wasmer_compiler::lib::std::collections","A set based on a B-Tree.",null,null],[3,"Iter","wasmer_compiler::lib::std::collections::btree_set","An iterator over the items of a `BTreeSet`.",null,null],[12,"iter","","",100,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[12,"inner","","",101,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[12,"0","","",102,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[12,"inner","","",103,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[12,"0","","",104,null],[3,"DrainFilter","","An iterator produced by calling `drain_filter` on BTreeSet.",null,null],[12,"pred","","",105,null],[12,"inner","","",105,null],[3,"BTreeSet","","A set based on a B-Tree.",null,null],[12,"map","","",106,null],[3,"IntoIter","","An owning iterator over the items of a `BTreeSet`.",null,null],[12,"iter","","",107,null],[3,"Range","","An iterator over a sub-range of items in a `BTreeSet`.",null,null],[12,"iter","","",108,null],[0,"linked_list","wasmer_compiler::lib::std::collections","A doubly-linked list with owned nodes.",null,null],[3,"LinkedList","wasmer_compiler::lib::std::collections::linked_list","A doubly-linked list with owned nodes.",null,null],[12,"head","","",109,null],[12,"tail","","",109,null],[12,"len","","",109,null],[12,"marker","","",109,null],[3,"Iter","","An iterator over the elements of a `LinkedList`.",null,null],[12,"head","","",110,null],[12,"tail","","",110,null],[12,"len","","",110,null],[12,"marker","","",110,null],[3,"IterMut","","A mutable iterator over the elements of a `LinkedList`.",null,null],[12,"list","","",111,null],[12,"head","","",111,null],[12,"tail","","",111,null],[12,"len","","",111,null],[3,"IntoIter","","An owning iterator over the elements of a `LinkedList`.",null,null],[12,"list","","",112,null],[3,"Cursor","","A cursor over a `LinkedList`.",null,null],[12,"index","","",113,null],[12,"current","","",113,null],[12,"list","","",113,null],[3,"CursorMut","","A cursor over a `LinkedList` with editing operations.",null,null],[12,"index","","",114,null],[12,"current","","",114,null],[12,"list","","",114,null],[3,"DrainFilter","","An iterator produced by calling `drain_filter` on…",null,null],[12,"list","","",115,null],[12,"it","","",115,null],[12,"pred","","",115,null],[12,"idx","","",115,null],[12,"old_len","","",115,null],[0,"vec_deque","wasmer_compiler::lib::std::collections","A double-ended queue implemented with a growable ring…",null,null],[3,"VecDeque","wasmer_compiler::lib::std::collections::vec_deque","A double-ended queue implemented with a growable ring…",null,null],[12,"tail","","",116,null],[12,"head","","",116,null],[12,"buf","","",116,null],[3,"Iter","","An iterator over the elements of a `VecDeque`.",null,null],[12,"ring","","",117,null],[12,"tail","","",117,null],[12,"head","","",117,null],[3,"IterMut","","A mutable iterator over the elements of a `VecDeque`.",null,null],[12,"ring","","",118,null],[12,"tail","","",118,null],[12,"head","","",118,null],[12,"phantom","","",118,null],[3,"IntoIter","","An owning iterator over the elements of a `VecDeque`.",null,null],[12,"inner","","",119,null],[3,"Drain","","A draining iterator over the elements of a `VecDeque`.",null,null],[12,"after_tail","","",120,null],[12,"after_head","","",120,null],[12,"iter","","",120,null],[12,"deque","","",120,null],[3,"BTreeMap","wasmer_compiler::lib::std::collections","A map based on a B-Tree.",null,null],[12,"root","","",88,null],[12,"length","","",88,null],[3,"BTreeSet","","A set based on a B-Tree.",null,null],[12,"map","","",106,null],[3,"BinaryHeap","","A priority queue implemented with a binary heap.",null,null],[12,"data","","",78,null],[3,"LinkedList","","A doubly-linked list with owned nodes.",null,null],[12,"head","","",109,null],[12,"tail","","",109,null],[12,"len","","",109,null],[12,"marker","","",109,null],[3,"VecDeque","","A double-ended queue implemented with a growable ring…",null,null],[12,"tail","","",116,null],[12,"head","","",116,null],[12,"buf","","",116,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD…",null,null],[12,"base","","",47,null],[3,"HashSet","","A hash set implemented as a `HashMap` where the value is…",null,null],[12,"base","","",68,null],[4,"TryReserveError","","The error type for `try_reserve` methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the…",121,null],[13,"AllocError","","The memory allocator returned an error",121,null],[12,"layout","wasmer_compiler::lib::std::collections::TryReserveError","The layout of allocation request that failed",122,null],[0,"fmt","wasmer_compiler::lib::std","Utilities for formatting and printing `String`s.",null,null],[5,"format","wasmer_compiler::lib::std::fmt","The `format` function takes an [`Arguments`] struct and…",null,[[["arguments",3]],["string",3]]],[4,"Alignment","","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",123,null],[13,"Right","","Indication that contents should be right-aligned.",123,null],[13,"Center","","Indication that contents should be center-aligned.",123,null],[3,"Error","","The error type which is returned from formatting a message…",null,null],[5,"write","","The `write` function takes an output stream, and an…",null,[[["arguments",3],["write",8]],[["error",3],["result",4]]]],[3,"Arguments","","This structure represents a safely precompiled version of…",null,null],[12,"pieces","","",124,null],[12,"fmt","","",124,null],[12,"args","","",124,null],[8,"Binary","","`b` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",125,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Octal","","`o` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",126,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Debug","","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",127,[[["formatter",3]],[["error",3],["result",4]]]],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",128,[[["formatter",3]],[["error",3],["result",4]]]],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"inner","","",129,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"fmt","","",130,null],[12,"result","","",130,null],[12,"has_fields","","",130,null],[12,"has_key","","",130,null],[12,"state","","",130,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"inner","","",131,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"fmt","","",132,null],[12,"result","","",132,null],[12,"has_fields","","",132,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"fmt","","",133,null],[12,"result","","",133,null],[12,"fields","","",133,null],[12,"empty_name","","",133,null],[3,"Formatter","","Configuration for formatting.",null,null],[12,"flags","","",134,null],[12,"fill","","",134,null],[12,"align","","",134,null],[12,"width","","",134,null],[12,"precision","","",134,null],[12,"buf","","",134,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Write","","A trait for writing or formatting into Unicode-accepting…",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether…",135,[[],[["error",3],["result",4]]]],[11,"write_char","","Writes a [`char`] into this writer, returning whether the…",135,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Glue for usage of the [`write!`] macro with implementors…",135,[[["arguments",3]],[["error",3],["result",4]]]],[8,"LowerExp","","`e` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",136,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperExp","","`E` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",137,[[["formatter",3]],[["error",3],["result",4]]]],[8,"LowerHex","","`x` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",138,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Pointer","","`p` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",139,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperHex","","`X` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",140,[[["formatter",3]],[["error",3],["result",4]]]],[0,"str","wasmer_compiler::lib::std","Unicode string slices.",null,null],[5,"from_boxed_utf8_unchecked","wasmer_compiler::lib::std::str","Converts a boxed slice of bytes to a boxed string slice…",null,[[["global",3],["box",3]],[["global",3],["box",3]]]],[0,"pattern","","The string Pattern API.",null,null],[8,"Pattern","wasmer_compiler::lib::std::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",141,null],[10,"into_searcher","","Constructs the associated searcher from `self` and the…",141,[[]]],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",141,[[]]],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the…",141,[[]]],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the…",141,[[]]],[11,"strip_prefix_of","","Removes the pattern from the front of haystack, if it…",141,[[],["option",4]]],[11,"strip_suffix_of","","Removes the pattern from the back of haystack, if it…",141,[[],["option",4]]],[4,"SearchStep","","Result of calling [`Searcher::next()`] or…",null,null],[13,"Match","","Expresses that a match of the pattern has been found at…",142,null],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a…",142,null],[13,"Done","","Expresses that every byte of the haystack has been…",142,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlying string to be searched in",143,[[]]],[10,"next","","Performs the next search step starting from the front.",143,[[],["searchstep",4]]],[11,"next_match","","Finds the next [`Match`][SearchStep::Match] result. See…",143,[[],["option",4]]],[11,"next_reject","","Finds the next [`Reject`][SearchStep::Reject] result. See…",143,[[],["option",4]]],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",144,[[],["searchstep",4]]],[11,"next_match_back","","Finds the next [`Match`][SearchStep::Match] result. See…",144,[[],["option",4]]],[11,"next_reject_back","","Finds the next [`Reject`][SearchStep::Reject] result. See…",144,[[],["option",4]]],[8,"DoubleEndedSearcher","","A marker trait to express that a [`ReverseSearcher`] can…",null,null],[3,"CharSearcher","","Associated type for `<char as Pattern<\'a>>::Searcher`.",null,null],[12,"haystack","","",145,null],[12,"finger","","`finger` is the current byte index of the forward search.…",145,null],[12,"finger_back","","`finger_back` is the current byte index of the reverse…",145,null],[12,"needle","","The character being searched for",145,null],[12,"utf8_size","","The number of bytes `needle` takes up when encoded in utf8.",145,null],[12,"utf8_encoded","","A utf8 encoded copy of the `needle`",145,null],[3,"CharSliceSearcher","","Associated type for `<&[char] as Pattern<\'a>>::Searcher`.",null,null],[12,"0","","",146,null],[3,"CharPredicateSearcher","","Associated type for `<F as Pattern<\'a>>::Searcher`.",null,null],[12,"0","","",147,null],[3,"StrSearcher","","Associated type for `<&str as Pattern<\'a>>::Searcher`.",null,null],[12,"haystack","","",148,null],[12,"needle","","",148,null],[12,"searcher","","",148,null],[3,"EncodeUtf16","wasmer_compiler::lib::std::str","An iterator of [`u16`] over the string encoded as UTF-16.",null,null],[12,"chars","","",149,null],[12,"extra","","",149,null],[3,"SplitAsciiWhitespace","","An iterator over the non-ASCII-whitespace substrings of a…",null,null],[12,"inner","","",150,null],[3,"SplitWhitespace","","An iterator over the non-whitespace substrings of a…",null,null],[12,"inner","","",151,null],[5,"from_utf8","","Converts a slice of bytes to a string slice.",null,[[],[["result",4],["utf8error",3]]]],[5,"from_utf8_mut","","Converts a mutable slice of bytes to a mutable string slice.",null,[[],[["utf8error",3],["result",4]]]],[3,"Bytes","","An iterator over the bytes of a string slice.",null,null],[12,"0","","",152,null],[3,"CharIndices","","An iterator over the `char`s of a string slice, and their…",null,null],[12,"front_offset","","",153,null],[12,"iter","","",153,null],[3,"Chars","","An iterator over the `char`s of a string slice.",null,null],[12,"iter","","",154,null],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without…",null,[[]]],[5,"from_utf8_unchecked_mut","","Converts a slice of bytes to a string slice without…",null,[[]]],[3,"ParseBoolError","","An error returned when parsing a `bool` using `from_str`…",null,null],[12,"_priv","","",155,null],[3,"EscapeDebug","","The return type of [`str::escape_debug`].",null,null],[12,"inner","","",156,null],[3,"EscapeDefault","","The return type of [`str::escape_default`].",null,null],[12,"inner","","",157,null],[3,"EscapeUnicode","","The return type of [`str::escape_unicode`].",null,null],[12,"inner","","",158,null],[8,"FromStr","","Parse a value from a string",null,null],[16,"Err","","The associated error which can be returned from parsing.",159,null],[10,"from_str","","Parses a string `s` to return a value of this type.",159,[[],["result",4]]],[3,"Utf8Error","","Errors which can occur when attempting to interpret a…",null,null],[12,"valid_up_to","","",160,null],[12,"error_len","","",160,null],[3,"Lines","","An iterator over the lines of a string, as string slices.",null,null],[12,"0","","",161,null],[3,"LinesAny","","Created with the method `lines_any`.",null,null],[12,"0","","",162,null],[3,"MatchIndices","","Created with the method `match_indices`.",null,null],[12,"0","","",163,null],[3,"RMatchIndices","","Created with the method `rmatch_indices`.",null,null],[12,"0","","",164,null],[3,"Matches","","Created with the method `matches`.",null,null],[12,"0","","",165,null],[3,"RMatches","","Created with the method `rmatches`.",null,null],[12,"0","","",166,null],[3,"RSplit","","Created with the method `rsplit`.",null,null],[12,"0","","",167,null],[3,"Split","","Created with the method `split`.",null,null],[12,"0","","",168,null],[3,"RSplitN","","Created with the method `rsplitn`.",null,null],[12,"0","","",169,null],[3,"SplitN","","Created with the method `splitn`.",null,null],[12,"0","","",170,null],[3,"RSplitTerminator","","Created with the method `rsplit_terminator`.",null,null],[12,"0","","",171,null],[3,"SplitTerminator","","Created with the method `split_terminator`.",null,null],[12,"0","","",172,null],[0,"string","wasmer_compiler::lib::std","A UTF-8–encoded, growable string.",null,null],[3,"String","wasmer_compiler::lib::std::string","A UTF-8–encoded, growable string.",null,null],[12,"vec","","",173,null],[3,"FromUtf8Error","","A possible error value when converting a `String` from a…",null,null],[12,"bytes","","",174,null],[12,"error","","",174,null],[3,"FromUtf16Error","","A possible error value when converting a `String` from a…",null,null],[12,"0","","",175,null],[6,"ParseError","","A type alias for `Infallible`.",null,null],[8,"ToString","","A trait for converting a value to a `String`.",null,null],[10,"to_string","","Converts the given value to a `String`.",176,[[],["string",3]]],[3,"Drain","","A draining iterator for `String`.",null,null],[12,"string","","Will be used as &\'a mut String in the destructor",177,null],[12,"start","","Start of part to remove",177,null],[12,"end","","End of part to remove",177,null],[12,"iter","","Current remaining range to remove",177,null],[0,"sync","wasmer_compiler::lib::std","Useful synchronization primitives.",null,null],[0,"mpsc","wasmer_compiler::lib::std::sync","Multi-producer, single-consumer FIFO queue communication…",null,null],[3,"Receiver","wasmer_compiler::lib::std::sync::mpsc","The receiving half of Rust\'s [`channel`] (or…",null,null],[12,"inner","","",178,null],[3,"Iter","","An iterator over messages on a [`Receiver`], created by…",null,null],[12,"rx","","",179,null],[3,"TryIter","","An iterator that attempts to yield all pending values for…",null,null],[12,"rx","","",180,null],[3,"IntoIter","","An owning iterator over messages on a [`Receiver`],…",null,null],[12,"rx","","",181,null],[3,"Sender","","The sending-half of Rust\'s asynchronous [`channel`] type.…",null,null],[12,"inner","","",182,null],[3,"SyncSender","","The sending-half of Rust\'s synchronous [`sync_channel`]…",null,null],[12,"inner","","",183,null],[3,"SendError","","An error returned from the [`Sender::send`] or…",null,null],[12,"0","","",184,null],[3,"RecvError","","An error returned from the `recv` function on a…",null,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that…",null,null],[13,"Empty","","This channel is currently empty, but the Sender(s) have…",185,null],[13,"Disconnected","","The channel\'s sending half has become disconnected, and…",185,null],[4,"RecvTimeoutError","","This enumeration is the list of possible errors that made…",null,null],[13,"Timeout","","This channel is currently empty, but the Sender(s) have…",186,null],[13,"Disconnected","","The channel\'s sending half has become disconnected, and…",186,null],[4,"TrySendError","","This enumeration is the list of the possible error…",null,null],[13,"Full","","The data could not be sent on the [`sync_channel`] because…",187,null],[13,"Disconnected","","This [`sync_channel`]\'s receiving half has disconnected,…",187,null],[5,"channel","","Creates a new asynchronous channel, returning the…",null,[[]]],[5,"sync_channel","","Creates a new synchronous, bounded channel. All data sent…",null,[[]]],[3,"Arc","wasmer_compiler::lib::std::sync","A thread-safe reference-counting pointer. \'Arc\' stands for…",null,null],[12,"ptr","","",188,null],[12,"phantom","","",188,null],[3,"Weak","","`Weak` is a version of [`Arc`] that holds a non-owning…",null,null],[12,"ptr","","",189,null],[0,"atomic","","Atomic types",null,null],[5,"spin_loop_hint","wasmer_compiler::lib::std::sync::atomic","Signals the processor that it is inside a busy-wait…",null,[[]]],[3,"AtomicBool","","A boolean type which can be safely shared between threads.",null,null],[12,"v","","",190,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between…",null,null],[12,"p","","",191,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations.",192,null],[13,"Release","","When coupled with a store, all previous operations become…",192,null],[13,"Acquire","","When coupled with a load, if the loaded value was written…",192,null],[13,"AcqRel","","Has the effects of both [`Acquire`] and [`Release`]…",192,null],[13,"SeqCst","","Like [`Acquire`]/[`Release`]/[`AcqRel`] (for load, store,…",192,null],[17,"ATOMIC_BOOL_INIT","","An [`AtomicBool`] initialized to `false`.",null,null],[3,"AtomicI8","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",193,null],[17,"ATOMIC_I8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU8","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",194,null],[17,"ATOMIC_U8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI16","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",195,null],[17,"ATOMIC_I16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU16","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",196,null],[17,"ATOMIC_U16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI32","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",197,null],[17,"ATOMIC_I32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU32","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",198,null],[17,"ATOMIC_U32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI64","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",199,null],[17,"ATOMIC_I64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU64","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",200,null],[17,"ATOMIC_U64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicIsize","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",201,null],[17,"ATOMIC_ISIZE_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicUsize","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",202,null],[17,"ATOMIC_USIZE_INIT","","An atomic integer initialized to `0`.",null,null],[5,"fence","","An atomic fence.",null,[[["ordering",4]]]],[5,"compiler_fence","","A compiler memory fence.",null,[[["ordering",4]]]],[3,"Barrier","wasmer_compiler::lib::std::sync","A barrier enables multiple threads to synchronize the…",null,null],[12,"lock","","",203,null],[12,"cvar","","",203,null],[12,"num_threads","","",203,null],[3,"BarrierWaitResult","","A `BarrierWaitResult` is returned by [`Barrier::wait()`]…",null,null],[12,"0","","",204,null],[3,"Condvar","","A Condition Variable",null,null],[12,"inner","","",205,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",null,null],[12,"0","","",206,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[12,"inner","","",207,null],[12,"poison","","",207,null],[12,"data","","",207,null],[3,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. When…",null,null],[12,"lock","","",208,null],[12,"poison","","",208,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[12,"state_and_queue","","",209,null],[12,"_marker","","",209,null],[3,"OnceState","","State yielded to [`Once::call_once_force()`]’s closure…",null,null],[12,"poisoned","","",210,null],[12,"set_state_on_drop_to","","",210,null],[17,"ONCE_INIT","","Initialization value for static [`Once`] values.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[12,"inner","","",211,null],[12,"poison","","",211,null],[12,"data","","",211,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[12,"lock","","",212,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[12,"lock","","",213,null],[12,"poison","","",213,null],[6,"LockResult","","A type alias for the result of a lock method which can be…",null,null],[3,"PoisonError","","A type of error which can be returned whenever a lock is…",null,null],[12,"guard","","",214,null],[4,"TryLockError","","An enumeration of possible errors associated with a…",null,null],[13,"Poisoned","","The lock could not be acquired because another thread…",215,null],[13,"WouldBlock","","The lock could not be acquired at this time because the…",215,null],[6,"TryLockResult","","A type alias for the result of a nonblocking locking method.",null,null],[0,"vec","wasmer_compiler::lib::std","A contiguous growable array type with heap-allocated…",null,null],[3,"Vec","wasmer_compiler::lib::std::vec","A contiguous growable array type, written `Vec<T>` but…",null,null],[12,"buf","","",216,null],[12,"len","","",216,null],[3,"IntoIter","","An iterator that moves out of a vector.",null,null],[12,"buf","","",217,null],[12,"phantom","","",217,null],[12,"cap","","",217,null],[12,"ptr","","",217,null],[12,"end","","",217,null],[3,"Drain","","A draining iterator for `Vec<T>`.",null,null],[12,"tail_start","","Index of tail to preserve",218,null],[12,"tail_len","","Length of tail",218,null],[12,"iter","","Current remaining range to remove",218,null],[12,"vec","","",218,null],[3,"Splice","","A splicing iterator for `Vec`.",null,null],[12,"drain","","",219,null],[12,"replace_with","","",219,null],[3,"DrainFilter","","An iterator which uses a closure to determine if an…",null,null],[12,"vec","","",220,null],[12,"idx","","The index of the item that will be inspected by the next…",220,null],[12,"del","","The number of items that have been drained (removed) thus…",220,null],[12,"old_len","","The original length of `vec` prior to draining.",220,null],[12,"pred","","The filter test predicate.",220,null],[12,"panic_flag","","A flag that indicates a panic has occurred in the filter…",220,null],[14,"vec","wasmer_compiler::lib::std","Creates a `Vec` containing the arguments.",null,null],[0,"address_map","wasmer_compiler","Data structures to provide transformation of the source",null,null],[3,"InstructionAddressMap","wasmer_compiler::address_map","Single source location to generated address mapping.",null,null],[12,"srcloc","","Original source location.",10,null],[12,"code_offset","","Generated instructions offset.",10,null],[12,"code_len","","Generated instructions length.",10,null],[3,"FunctionAddressMap","","Function and its instructions addresses mappings.",null,null],[12,"instructions","","Instructions maps. The array is sorted by the…",9,null],[12,"start_srcloc","","Function start source location (normally declaration).",9,null],[12,"end_srcloc","","Function end source location.",9,null],[12,"body_offset","","Generated function body offset if applicable, otherwise 0.",9,null],[12,"body_len","","Generated function body length.",9,null],[0,"compiler","wasmer_compiler","This module mainly outputs the `Compiler` trait that…",null,null],[4,"Symbol","wasmer_compiler::compiler","The kinds of wasmer_types objects that might be found in a…",null,null],[13,"LocalFunction","","A function defined in the wasm.",32,null],[13,"Section","","A wasm section.",32,null],[13,"FunctionCallTrampoline","","The function call trampoline for a given signature.",32,null],[13,"DynamicFunctionTrampoline","","The dynamic function trampoline for a given function.",32,null],[8,"CompilerConfig","","The compiler configuration options.",null,null],[11,"enable_pic","","Enable Position Independent Code (PIC).",221,[[]]],[11,"enable_verifier","","Enable compiler IR verification.",221,[[]]],[10,"compiler","","Gets the custom compiler config",221,[[["box",3]],[["box",3],["compiler",8]]]],[11,"default_features_for_target","","Gets the default features for this compiler in the given…",221,[[["target",3]],["features",3]]],[10,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",221,[[["arc",3],["modulemiddleware",8]]]],[8,"Compiler","","An implementation of a Compiler from parsed WebAssembly…",null,null],[11,"validate_module","","Validates a module.",222,[[["features",3]],[["result",4],["compileerror",4]]]],[10,"compile_module","","Compiles a parsed module.",222,[[["primarymap",3],["localfunctionindex",3],["compilemoduleinfo",3],["moduletranslationstate",3],["functionbodydata",3],["target",3]],[["compileerror",4],["compilation",3],["result",4]]]],[11,"experimental_native_compile_module","","Compiles a module into a native object file.",222,[[["compilemoduleinfo",3],["primarymap",3],["moduletranslationstate",3],["symbolregistry",8],["target",3]],[["option",4],["result",4]]]],[8,"SymbolRegistry","","This trait facilitates symbol name lookups in a native…",null,null],[10,"symbol_to_name","","Given a `Symbol` it returns the name for that symbol in…",223,[[["symbol",4]],["string",3]]],[10,"name_to_symbol","","Given a name it returns the `Symbol` for that name in the…",223,[[],[["symbol",4],["option",4]]]],[0,"error","wasmer_compiler","",null,null],[3,"MiddlewareError","wasmer_compiler::error","A error in the middleware.",null,null],[12,"name","","The name of the middleware where the error was created",11,null],[12,"message","","The error message",11,null],[4,"CompileError","","The WebAssembly.CompileError object indicates an error…",null,null],[13,"Wasm","","A Wasm translation error occured.",33,null],[13,"Codegen","","A compilation error occured.",33,null],[13,"Validate","","The module did not pass validation.",33,null],[13,"UnsupportedFeature","","The compiler doesn\'t support a Wasm feature",33,null],[13,"UnsupportedTarget","","The compiler cannot compile for the given target. This can…",33,null],[13,"Resource","","Insufficient resources available for execution.",33,null],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",35,null],[12,"message","wasmer_compiler::error::WasmError","A string describing the validation error.",36,null],[12,"offset","","The bytecode offset where the error occurred.",36,null],[13,"Unsupported","wasmer_compiler::error","A feature used by the WebAssembly code is not supported by…",35,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",35,null],[13,"Middleware","","An error from the middleware error.",35,null],[13,"Generic","","A generic error.",35,null],[4,"ParseCpuFeatureError","","The error that can happen while parsing a `str` to…",null,null],[13,"Missing","","The provided string feature doesn\'t exist",34,null],[6,"WasmResult","","A convenient alias for a `Result` that uses `WasmError` as…",null,null],[11,"new","wasmer_compiler","Create a new `MiddlewareError`",11,[[["string",3],["into",8]]]],[0,"function","","A `Compilation` contains the compiled function bodies for…",null,null],[3,"CompiledFunctionFrameInfo","wasmer_compiler::function","The frame info for a Compiled function.",null,null],[12,"traps","","The traps (in the function body).",14,null],[12,"address_map","","The address map.",14,null],[3,"FunctionBody","","The function body.",null,null],[12,"body","","The function body bytes.",16,null],[12,"unwind_info","","The function unwind info",16,null],[3,"CompiledFunction","","The result of compiling a WebAssembly function.",null,null],[12,"body","","The function body.",13,null],[12,"relocations","","The relocations (in the body)",13,null],[12,"jt_offsets","","The jump tables offsets (in the body).",13,null],[12,"frame_info","","The frame information.",13,null],[3,"Dwarf","","The DWARF information for this Compilation.",null,null],[12,"eh_frame","","The section index in the [`Compilation`] that corresponds…",15,null],[3,"Compilation","","The result of compiling a WebAssembly module\'s functions.",null,null],[12,"functions","","Compiled code for the function bodies.",12,null],[12,"custom_sections","","Custom sections for the module. It will hold the data, for…",12,null],[12,"function_call_trampolines","","Trampolines to call a function defined locally in the wasm…",12,null],[12,"dynamic_function_trampolines","","Trampolines to call a dynamic function defined in a host,…",12,null],[12,"debug","","Section ids corresponding to the Dwarf debug info",12,null],[3,"Iter","","",null,null],[12,"iterator","","",224,null],[6,"Functions","","The compiled functions map (index in the Wasm -> function)",null,null],[6,"CustomSections","","The custom sections for a Compilation.",null,null],[11,"new","wasmer_compiler","Creates a `Dwarf` struct with the corresponding indices…",15,[[["sectionindex",3]]]],[11,"new","","Creates a compilation artifact from a contiguous function…",12,[[["functions",6],["functionindex",3],["functionbody",3],["primarymap",3],["primarymap",3],["customsections",6],["dwarf",3],["option",4],["signatureindex",3]]]],[11,"get","","Gets the bytes of a single function",12,[[["localfunctionindex",3]],["compiledfunction",3]]],[11,"len","","Gets the number of functions defined.",12,[[]]],[11,"is_empty","","Returns whether there are no functions defined.",12,[[]]],[11,"get_relocations","","Gets functions relocations.",12,[[],[["primarymap",3],["localfunctionindex",3],["vec",3]]]],[11,"get_function_bodies","","Gets functions bodies.",12,[[],[["functionbody",3],["localfunctionindex",3],["primarymap",3]]]],[11,"get_jt_offsets","","Gets functions jump table offsets.",12,[[],[["primarymap",3],["localfunctionindex",3],["jumptableoffsets",6]]]],[11,"get_frame_info","","Gets functions frame info.",12,[[],[["localfunctionindex",3],["compiledfunctionframeinfo",3],["primarymap",3]]]],[11,"get_function_call_trampolines","","Gets function call trampolines.",12,[[],[["functionbody",3],["primarymap",3],["signatureindex",3]]]],[11,"get_dynamic_function_trampolines","","Gets function call trampolines.",12,[[],[["functionindex",3],["primarymap",3],["functionbody",3]]]],[11,"get_custom_sections","","Gets custom section data.",12,[[],[["customsection",3],["sectionindex",3],["primarymap",3]]]],[11,"get_custom_section_relocations","","Gets relocations that apply to custom sections.",12,[[],[["primarymap",3],["sectionindex",3],["vec",3]]]],[11,"get_debug","","Returns the Dwarf info.",12,[[],[["dwarf",3],["option",4]]]],[0,"jump_table","","A jump table is a method of transferring program control…",null,null],[3,"JumpTable","wasmer_compiler::jump_table","An opaque reference to a jump table.",null,null],[12,"0","","",17,null],[6,"JumpTableOffsets","","Code offsets for Jump Tables.",null,null],[11,"from_u32","wasmer_compiler","Create a new instance from a `u32`.",17,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",17,[[]]],[11,"with_number","","Create a new jump table reference from its number.",17,[[],["option",4]]],[0,"module","","",null,null],[3,"CompileModuleInfo","wasmer_compiler::module","The required info for compiling a module.",null,null],[12,"features","","The features used for compiling the module",18,null],[12,"module","","The module information",18,null],[12,"memory_styles","","The memory styles used for compiling.",18,null],[12,"table_styles","","The table plans used for compiling.",18,null],[0,"relocation","wasmer_compiler","Relocation is the process of assigning load addresses for…",null,null],[3,"Relocation","wasmer_compiler::relocation","A record of a relocation to perform.",null,null],[12,"kind","","The relocation kind.",19,null],[12,"reloc_target","","Relocation target.",19,null],[12,"offset","","The offset where to apply the relocation.",19,null],[12,"addend","","The addend to add to the relocation value.",19,null],[4,"RelocationKind","","Relocation kinds for every ISA.",null,null],[13,"Abs4","","absolute 4-byte",37,null],[13,"Abs8","","absolute 8-byte",37,null],[13,"X86PCRel4","","x86 PC-relative 4-byte",37,null],[13,"X86PCRel8","","x86 PC-relative 8-byte",37,null],[13,"X86PCRelRodata4","","x86 PC-relative 4-byte offset to trailing rodata",37,null],[13,"X86CallPCRel4","","x86 call to PC-relative 4-byte",37,null],[13,"X86CallPLTRel4","","x86 call to PLT-relative 4-byte",37,null],[4,"RelocationTarget","","Destination function. Can be either user function or some…",null,null],[13,"LocalFunc","","A relocation to a function defined locally in the wasm…",38,null],[13,"LibCall","","A compiler-generated libcall.",38,null],[13,"JumpTable","","Jump table index.",38,null],[13,"CustomSection","","Custom sections generated by the compiler",38,null],[6,"Relocations","","Relocations to apply to function bodies.",null,null],[11,"for_address","wasmer_compiler","Given a function start address, provide the relocation…",19,[[]]],[0,"target","","Target configuration",null,null],[4,"Architecture","wasmer_compiler::target","The \\\"architecture\\\" field, which in some cases also…",null,null],[13,"Unknown","","",0,null],[13,"Arm","","",0,null],[13,"AmdGcn","","",0,null],[13,"Aarch64","","",0,null],[13,"Asmjs","","",0,null],[13,"Avr","","",0,null],[13,"Hexagon","","",0,null],[13,"X86_32","","",0,null],[13,"Mips32","","",0,null],[13,"Mips64","","",0,null],[13,"Msp430","","",0,null],[13,"Nvptx64","","",0,null],[13,"Powerpc","","",0,null],[13,"Powerpc64","","",0,null],[13,"Powerpc64le","","",0,null],[13,"Riscv32","","",0,null],[13,"Riscv64","","",0,null],[13,"S390x","","",0,null],[13,"Sparc","","",0,null],[13,"Sparc64","","",0,null],[13,"Sparcv9","","",0,null],[13,"Wasm32","","",0,null],[13,"Wasm64","","",0,null],[13,"X86_64","","",0,null],[4,"BinaryFormat","","The \\\"binary format\\\" field, which is usually omitted, and…",null,null],[13,"Unknown","","",1,null],[13,"Elf","","",1,null],[13,"Coff","","",1,null],[13,"Macho","","",1,null],[13,"Wasm","","",1,null],[4,"CallingConvention","","The calling convention, which specifies things like which…",null,null],[13,"SystemV","","\\\"System V\\\", which is used on most Unix-like platfoms. Note…",2,null],[13,"WasmBasicCAbi","","The WebAssembly C ABI.…",2,null],[13,"WindowsFastcall","","\\\"Windows Fastcall\\\", which is used on Windows. Note that…",2,null],[4,"Endianness","","The target memory endianness.",null,null],[13,"Little","","",3,null],[13,"Big","","",3,null],[4,"OperatingSystem","","The \\\"operating system\\\" field, which sometimes implies an…",null,null],[13,"Unknown","","",4,null],[13,"AmdHsa","","",4,null],[13,"Bitrig","","",4,null],[13,"Cloudabi","","",4,null],[13,"Cuda","","",4,null],[13,"Darwin","","",4,null],[13,"Dragonfly","","",4,null],[13,"Emscripten","","",4,null],[13,"Freebsd","","",4,null],[13,"Fuchsia","","",4,null],[13,"Haiku","","",4,null],[13,"Hermit","","",4,null],[13,"Illumos","","",4,null],[13,"Ios","","",4,null],[13,"L4re","","",4,null],[13,"Linux","","",4,null],[13,"MacOSX","","",4,null],[12,"major","wasmer_compiler::target::OperatingSystem","",5,null],[12,"minor","","",5,null],[12,"patch","","",5,null],[13,"Nebulet","wasmer_compiler::target","",4,null],[13,"Netbsd","","",4,null],[13,"None_","","",4,null],[13,"Openbsd","","",4,null],[13,"Psp","","",4,null],[13,"Redox","","",4,null],[13,"Solaris","","",4,null],[13,"Tvos","","",4,null],[13,"Uefi","","",4,null],[13,"VxWorks","","",4,null],[13,"Wasi","","",4,null],[13,"Windows","","",4,null],[4,"PointerWidth","","The width of a pointer (in the default address space).",null,null],[13,"U16","","",6,null],[13,"U32","","",6,null],[13,"U64","","",6,null],[3,"Triple","","A target \\\"triple\\\". Historically such things had three…",null,null],[12,"architecture","","The \\\"architecture\\\" (and sometimes the subarchitecture).",7,null],[12,"vendor","","The \\\"vendor\\\" (whatever that means).",7,null],[12,"operating_system","","The \\\"operating system\\\" (sometimes also the environment).",7,null],[12,"environment","","The \\\"environment\\\" on top of the operating system (often…",7,null],[12,"binary_format","","The \\\"binary format\\\" (rarely used).",7,null],[3,"Target","","This is the target that we will use for compiling the…",null,null],[12,"triple","","",24,null],[12,"cpu_features","","",24,null],[4,"CpuFeature","","The nomenclature is inspired by the `cpuid` crate. The…",null,null],[13,"SSE2","","",40,null],[13,"SSE3","","",40,null],[13,"SSSE3","","",40,null],[13,"SSE41","","",40,null],[13,"SSE42","","",40,null],[13,"POPCNT","","",40,null],[13,"AVX","","",40,null],[13,"BMI1","","",40,null],[13,"BMI2","","",40,null],[13,"AVX2","","",40,null],[13,"AVX512DQ","","",40,null],[13,"AVX512VL","","",40,null],[13,"AVX512F","","",40,null],[13,"LZCNT","","",40,null],[11,"for_host","wasmer_compiler","Retrieves the features for the current Host",40,[[],["enumset",3]]],[11,"set","","Retrieves an empty set of `CpuFeature`s.",40,[[],["enumset",3]]],[11,"new","","Creates a new target given a triple",24,[[["enumset",3],["triple",3],["cpufeature",4]]]],[11,"triple","","The triple associated for the target.",24,[[],["triple",3]]],[11,"cpu_features","","The triple associated for the target.",24,[[],["enumset",3]]],[0,"trap","","",null,null],[3,"TrapInformation","wasmer_compiler::trap","Information about trap.",null,null],[12,"code_offset","","The offset of the trapping instruction in native code. It…",31,null],[12,"trap_code","","Code of the trap.",31,null],[0,"unwind","wasmer_compiler","A `CompiledFunctionUnwindInfo` contains the function…",null,null],[4,"CompiledFunctionUnwindInfo","wasmer_compiler::unwind","Compiled function unwind information.",null,null],[13,"WindowsX64","","Windows UNWIND_INFO.",41,null],[13,"Dwarf","","The unwind info is added to the Dwarf section in…",41,null],[0,"translator","wasmer_compiler","This module defines the parser and translator from…",null,null],[0,"environ","wasmer_compiler::translator","",null,null],[3,"FunctionBodyData","wasmer_compiler::translator::environ","Contains function data: bytecode and its offset in the…",null,null],[12,"data","","Function body bytecode.",25,null],[12,"module_offset","","Body offset relative to the module file.",25,null],[3,"ModuleInfoTranslation","","The result of translating via `ModuleEnvironment`.…",null,null],[12,"module","","ModuleInfo information.",29,null],[12,"function_body_inputs","","References to the function bodies.",29,null],[12,"data_initializers","","References to the data initializers.",29,null],[12,"module_translation_state","","The decoded Wasm types for the module.",29,null],[3,"ModuleEnvironment","","Object containing the standalone environment information.",null,null],[12,"result","","The result to be filled in.",28,null],[12,"imports","","",28,null],[11,"new","wasmer_compiler","Allocates the environment data structures.",28,[[]]],[11,"translate","","Translate a wasm module using this environment. This…",28,[[],[["moduleinfotranslation",3],["wasmresult",6]]]],[11,"declare_export","","",28,[[["exportindex",4]],["wasmresult",6]]],[11,"declare_import","","",28,[[["importindex",4]],["wasmresult",6]]],[11,"reserve_signatures","","",28,[[],["wasmresult",6]]],[11,"declare_signature","","",28,[[["functiontype",3]],["wasmresult",6]]],[11,"declare_func_import","","",28,[[["signatureindex",3]],["wasmresult",6]]],[11,"declare_table_import","","",28,[[["tabletype",3]],["wasmresult",6]]],[11,"declare_memory_import","","",28,[[["memorytype",3]],["wasmresult",6]]],[11,"declare_global_import","","",28,[[["globaltype",3]],["wasmresult",6]]],[11,"finish_imports","","",28,[[],["wasmresult",6]]],[11,"reserve_func_types","","",28,[[],["wasmresult",6]]],[11,"declare_func_type","","",28,[[["signatureindex",3]],["wasmresult",6]]],[11,"reserve_tables","","",28,[[],["wasmresult",6]]],[11,"declare_table","","",28,[[["tabletype",3]],["wasmresult",6]]],[11,"reserve_memories","","",28,[[],["wasmresult",6]]],[11,"declare_memory","","",28,[[["memorytype",3]],["wasmresult",6]]],[11,"reserve_globals","","",28,[[],["wasmresult",6]]],[11,"declare_global","","",28,[[["globaltype",3],["globalinit",4]],["wasmresult",6]]],[11,"reserve_exports","","",28,[[],["wasmresult",6]]],[11,"declare_func_export","","",28,[[["functionindex",3]],["wasmresult",6]]],[11,"declare_table_export","","",28,[[["tableindex",3]],["wasmresult",6]]],[11,"declare_memory_export","","",28,[[["memoryindex",3]],["wasmresult",6]]],[11,"declare_global_export","","",28,[[["globalindex",3]],["wasmresult",6]]],[11,"declare_start_function","","",28,[[["functionindex",3]],["wasmresult",6]]],[11,"reserve_table_initializers","","",28,[[],["wasmresult",6]]],[11,"reserve_passive_elements","","",28,[[],["wasmresult",6]]],[11,"declare_table_initializers","","",28,[[["globalindex",3],["option",4],["box",3],["tableindex",3]],["wasmresult",6]]],[11,"declare_passive_element","","",28,[[["box",3],["elemindex",3]],["wasmresult",6]]],[11,"define_function_body","","",28,[[["moduletranslationstate",3]],["wasmresult",6]]],[11,"reserve_data_initializers","","",28,[[],["wasmresult",6]]],[11,"declare_data_initialization","","",28,[[["globalindex",3],["option",4],["memoryindex",3]],["wasmresult",6]]],[11,"reserve_passive_data","","",28,[[],["wasmresult",6]]],[11,"declare_passive_data","","",28,[[["dataindex",3]],["wasmresult",6]]],[11,"declare_module_name","","",28,[[],["wasmresult",6]]],[11,"declare_function_name","","",28,[[["functionindex",3]],["wasmresult",6]]],[11,"reserve_imports","","Provides the number of imports up front. By default this…",28,[[],["wasmresult",6]]],[11,"finish_exports","","Notifies the implementation that all exports have been…",28,[[],["wasmresult",6]]],[11,"custom_section","","Indicates that a custom section has been found in the wasm…",28,[[],["wasmresult",6]]],[0,"middleware","wasmer_compiler::translator","The middleware parses the function binary bytecodes and…",null,null],[3,"MiddlewareBinaryReader","wasmer_compiler::translator::middleware","A Middleware binary reader of the WebAssembly structures…",null,null],[12,"state","","Parsing state.",26,null],[12,"chain","","The backing middleware chain for this reader.",26,null],[3,"MiddlewareReaderState","","The state of the binary reader. Exposed to middlewares to…",null,null],[12,"inner","","Raw binary reader.",27,null],[12,"pending_operations","","The pending operations added by the middleware.",27,null],[8,"ModuleMiddleware","","A shared builder for function middlewares.",null,null],[10,"generate_function_middleware","","Generates a `FunctionMiddleware` for a given function.",225,[[["localfunctionindex",3]],[["box",3],["functionmiddleware",8]]]],[11,"transform_module_info","","Transforms a `ModuleInfo` struct in-place. This is called…",225,[[["moduleinfo",3]]]],[8,"FunctionMiddleware","","A function middleware specialized for a single function.",null,null],[11,"feed","","Processes the given operator.",226,[[["middlewarereaderstate",3],["operator",4]],[["middlewareerror",3],["result",4]]]],[8,"ModuleMiddlewareChain","","Trait for generating middleware chains from \\\"prototype\\\"…",null,null],[10,"generate_function_middleware_chain","","Generates a function middleware chain.",227,[[["localfunctionindex",3]],[["vec",3],["box",3]]]],[10,"apply_on_module_info","","Applies the chain on a `ModuleInfo` struct.",227,[[["moduleinfo",3]]]],[11,"push_operator","wasmer_compiler","Push an operator.",27,[[["operator",4]]]],[11,"new_with_offset","","Constructs a `MiddlewareBinaryReader` with an explicit…",26,[[]]],[11,"set_middleware_chain","","Replaces the middleware chain with a new one.",26,[[["vec",3],["box",3]]]],[11,"read_local_count","","Read a `count` indicating the number of times to call…",26,[[],["wasmresult",6]]],[11,"read_local_decl","","Read a `(count, value_type)` declaration of local…",26,[[],["wasmresult",6]]],[11,"read_operator","","Reads the next available `Operator`.",26,[[],[["wasmresult",6],["operator",4]]]],[11,"current_position","","Returns the inner `BinaryReader`\'s current position.",26,[[]]],[11,"original_position","","Returns the inner `BinaryReader`\'s original position (with…",26,[[]]],[11,"bytes_remaining","","Returns the number of bytes remaining in the inner…",26,[[]]],[11,"eof","","Returns whether the inner `BinaryReader` has reached the…",26,[[]]],[0,"module","wasmer_compiler::translator","Translation skeleton that traverses the whole WebAssembly…",null,null],[5,"translate_module","wasmer_compiler::translator::module","Translate a sequence of bytes forming a valid Wasm binary…",null,[[["moduleenvironment",3]],[["wasmresult",6],["moduletranslationstate",3]]]],[0,"state","wasmer_compiler::translator","",null,null],[3,"ModuleTranslationState","wasmer_compiler::translator::state","Contains information decoded from the Wasm module that…",null,null],[12,"wasm_types","","A map containing a Wasm module\'s original, raw signatures.",30,null],[6,"WasmTypes","","Map of signatures to a function\'s parameter and return…",null,null],[11,"new","wasmer_compiler","Creates a new empty ModuleTranslationState.",30,[[]]],[11,"blocktype_params_results","","Get the parameter and result types for the given Wasm…",30,[[["typeorfunctype",4]],["wasmresult",6]]],[0,"error","wasmer_compiler::translator","",null,null],[0,"sections","","Helper functions to gather information for each of the…",null,null],[5,"wptype_to_type","wasmer_compiler::translator::sections","Helper function translating wasmparser types to Wasm Type.",null,[[["type",4]],[["wasmresult",6],["type",4]]]],[5,"parse_type_section","","Parses the Type section of the wasm module.",null,[[["typesectionreader",3],["moduleenvironment",3],["moduletranslationstate",3]],["wasmresult",6]]],[5,"parse_import_section","","Parses the Import section of the wasm module.",null,[[["importsectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_function_section","","Parses the Function section of the wasm module.",null,[[["moduleenvironment",3],["functionsectionreader",3]],["wasmresult",6]]],[5,"parse_table_section","","Parses the Table section of the wasm module.",null,[[["moduleenvironment",3],["tablesectionreader",3]],["wasmresult",6]]],[5,"parse_memory_section","","Parses the Memory section of the wasm module.",null,[[["memorysectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_global_section","","Parses the Global section of the wasm module.",null,[[["moduleenvironment",3],["globalsectionreader",3]],["wasmresult",6]]],[5,"parse_export_section","","Parses the Export section of the wasm module.",null,[[["exportsectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_start_section","","Parses the Start section of the wasm module.",null,[[["moduleenvironment",3]],["wasmresult",6]]],[5,"read_elems","","",null,[[["elementitems",3]],[["box",3],["wasmresult",6]]]],[5,"parse_element_section","","Parses the Element section of the wasm module.",null,[[["moduleenvironment",3],["elementsectionreader",3]],["wasmresult",6]]],[5,"parse_data_section","","Parses the Data section of the wasm module.",null,[[["datasectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_name_section","","Parses the Name section of the wasm module.",null,[[["namesectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_function_name_subsection","","",null,[[["namingreader",3]],[["option",4],["hashmap",3]]]],[0,"section","wasmer_compiler","This module define the required structures to emit custom…",null,null],[3,"SectionIndex","wasmer_compiler::section","Index type of a Section defined inside a WebAssembly…",null,null],[12,"0","","",22,null],[3,"CustomSection","","A Section for a `Compilation`.",null,null],[12,"protection","","Memory protection that applies to this section.",20,null],[12,"bytes","","The bytes corresponding to this section.",20,null],[12,"relocations","","Relocations that apply to this custom section.",20,null],[3,"SectionBody","","The bytes in the section.",null,null],[12,"0","","",21,null],[4,"CustomSectionProtection","","Custom section Protection.",null,null],[13,"Read","","A custom section with read permission.",39,null],[13,"ReadExecute","","A custom section with read and execute permissions.",39,null],[11,"from_u32","wasmer_compiler","Create a new instance from a `u32`.",22,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",22,[[]]],[11,"new_with_vec","","Create a new section body with the given contents.",21,[[["vec",3]]]],[11,"as_ptr","","Returns a raw pointer to the section\'s buffer.",21,[[]]],[11,"len","","Returns the length of this section in bytes.",21,[[]]],[11,"as_slice","","Dereferences into the section\'s buffer.",21,[[]]],[11,"is_empty","","Returns whether or not the section body is empty.",21,[[]]],[0,"sourceloc","","Source locations.",null,null],[3,"SourceLoc","wasmer_compiler::sourceloc","A source location.",null,null],[12,"0","","",23,null],[11,"new","wasmer_compiler","Create a new source location with the given bits.",23,[[]]],[11,"is_default","","Is this the default source location?",23,[[]]],[11,"bits","","Read the bits of this source location.",23,[[]]],[6,"WasmResult","","A convenient alias for a `Result` that uses `WasmError` as…",null,null],[6,"CustomSections","","The custom sections for a Compilation.",null,null],[6,"Functions","","The compiled functions map (index in the Wasm -> function)",null,null],[6,"JumpTableOffsets","","Code offsets for Jump Tables.",null,null],[6,"Relocations","","Relocations to apply to function bodies.",null,null],[6,"CodeOffset","","Offset in bytes from the beginning of the function.",null,null],[6,"Addend","","Addend to add to the symbol value.",null,null],[17,"VERSION","","Version number of this crate.",null,null],[8,"Compiler","","An implementation of a Compiler from parsed WebAssembly…",null,null],[11,"validate_module","wasmer_compiler::compiler","Validates a module.",222,[[["features",3]],[["result",4],["compileerror",4]]]],[10,"compile_module","wasmer_compiler","Compiles a parsed module.",222,[[["primarymap",3],["localfunctionindex",3],["compilemoduleinfo",3],["moduletranslationstate",3],["functionbodydata",3],["target",3]],[["compileerror",4],["compilation",3],["result",4]]]],[11,"experimental_native_compile_module","wasmer_compiler::compiler","Compiles a module into a native object file.",222,[[["compilemoduleinfo",3],["primarymap",3],["moduletranslationstate",3],["symbolregistry",8],["target",3]],[["option",4],["result",4]]]],[8,"CompilerConfig","wasmer_compiler","The compiler configuration options.",null,null],[11,"enable_pic","wasmer_compiler::compiler","Enable Position Independent Code (PIC).",221,[[]]],[11,"enable_verifier","","Enable compiler IR verification.",221,[[]]],[10,"compiler","wasmer_compiler","Gets the custom compiler config",221,[[["box",3]],[["box",3],["compiler",8]]]],[11,"default_features_for_target","wasmer_compiler::compiler","Gets the default features for this compiler in the given…",221,[[["target",3]],["features",3]]],[10,"push_middleware","wasmer_compiler","Pushes a middleware onto the back of the middleware chain.",221,[[["arc",3],["modulemiddleware",8]]]],[8,"SymbolRegistry","","This trait facilitates symbol name lookups in a native…",null,null],[10,"symbol_to_name","","Given a `Symbol` it returns the name for that symbol in…",223,[[["symbol",4]],["string",3]]],[10,"name_to_symbol","","Given a name it returns the `Symbol` for that name in the…",223,[[],[["symbol",4],["option",4]]]],[8,"FunctionMiddleware","","A function middleware specialized for a single function.",null,null],[11,"feed","wasmer_compiler::translator::middleware","Processes the given operator.",226,[[["middlewarereaderstate",3],["operator",4]],[["middlewareerror",3],["result",4]]]],[8,"ModuleMiddleware","wasmer_compiler","A shared builder for function middlewares.",null,null],[10,"generate_function_middleware","","Generates a `FunctionMiddleware` for a given function.",225,[[["localfunctionindex",3]],[["box",3],["functionmiddleware",8]]]],[11,"transform_module_info","wasmer_compiler::translator::middleware","Transforms a `ModuleInfo` struct in-place. This is called…",225,[[["moduleinfo",3]]]],[8,"ModuleMiddlewareChain","wasmer_compiler","Trait for generating middleware chains from \\\"prototype\\\"…",null,null],[10,"generate_function_middleware_chain","","Generates a function middleware chain.",227,[[["localfunctionindex",3]],[["vec",3],["box",3]]]],[10,"apply_on_module_info","","Applies the chain on a `ModuleInfo` struct.",227,[[["moduleinfo",3]]]],[14,"wasm_unsupported","","Return an `Err(WasmError::Unsupported(msg))` where `msg`…",null,null],[11,"from","wasmer_compiler::target","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"from","wasmer_compiler","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"equivalent","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"equivalent","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"equivalent","","",41,[[]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"equivalent","","",43,[[]]],[11,"from","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"into_iter","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"into_searcher","","",46,[[],["charpredicatesearcher",3]]],[11,"is_contained_in","","",46,[[]]],[11,"is_prefix_of","","",46,[[]]],[11,"strip_prefix_of","","",46,[[],["option",4]]],[11,"is_suffix_of","","",46,[[]]],[11,"strip_suffix_of","","",46,[[],["option",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"equivalent","","",46,[[]]],[11,"into_fallible_iter","","",46,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"equivalent","","",47,[[]]],[11,"from","wasmer_compiler::lib::std::collections::hash_map","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections","",68,[[]]],[11,"into","","",68,[[]]],[11,"into_iter","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"equivalent","","",68,[[]]],[11,"from","wasmer_compiler::lib::std::collections::hash_set","",69,[[]]],[11,"into","","",69,[[]]],[11,"into_iter","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"into_iter","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"into_iter","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"into_iter","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"into_iter","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"equivalent","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"into_iter","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections::binary_heap","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"into_iter","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"into_iter","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"into_iter","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections::btree_map","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections","",88,[[]]],[11,"into","","",88,[[]]],[11,"into_iter","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"equivalent","","",88,[[]]],[11,"from","wasmer_compiler::lib::std::collections::btree_map","",89,[[]]],[11,"into","","",89,[[]]],[11,"into_iter","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"into_iter","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"into_iter","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"into_iter","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"into_iter","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"into_iter","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"into_iter","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"into_iter","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"into_iter","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"into_iter","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"into_iter","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections::btree_set","",100,[[]]],[11,"into","","",100,[[]]],[11,"into_iter","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"into_iter","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"into_iter","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"into_iter","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"into_iter","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"into_iter","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections","",106,[[]]],[11,"into","","",106,[[]]],[11,"into_iter","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"equivalent","","",106,[[]]],[11,"from","wasmer_compiler::lib::std::collections::btree_set","",107,[[]]],[11,"into","","",107,[[]]],[11,"into_iter","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"into_iter","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections","",109,[[]]],[11,"into","","",109,[[]]],[11,"into_iter","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"equivalent","","",109,[[]]],[11,"from","wasmer_compiler::lib::std::collections::linked_list","",110,[[]]],[11,"into","","",110,[[]]],[11,"into_iter","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"into_iter","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"into_iter","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"into_iter","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"into","","",116,[[]]],[11,"into_iter","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"equivalent","","",116,[[]]],[11,"from","wasmer_compiler::lib::std::collections::vec_deque","",117,[[]]],[11,"into","","",117,[[]]],[11,"into_iter","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"into_iter","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"into_iter","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"into_iter","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::collections","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"to_string","","",121,[[],["string",3]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"equivalent","","",121,[[]]],[11,"from","wasmer_compiler::lib::std::fmt","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"to_string","","",228,[[],["string",3]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"equivalent","","",228,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"to_string","","",124,[[],["string",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::str::pattern","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"equivalent","","",142,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::str","",149,[[]]],[11,"into","","",149,[[]]],[11,"into_iter","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"into_iter","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"into_iter","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"into_iter","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"into_iter","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"into_iter","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"to_string","","",155,[[],["string",3]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"equivalent","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"into_iter","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"to_string","","",156,[[],["string",3]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"into_iter","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"to_string","","",157,[[],["string",3]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"into_iter","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"to_string","","",158,[[],["string",3]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"to_string","","",160,[[],["string",3]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"equivalent","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"into_iter","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"into_iter","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"into_iter","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"into_iter","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"into_iter","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"into_iter","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"into_iter","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"into_iter","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"into_iter","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"into_iter","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"into_iter","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"into_iter","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::string","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"equivalent","","",173,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"to_string","","",174,[[],["string",3]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"equivalent","","",174,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"into_iter","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::sync::mpsc","",178,[[]]],[11,"into","","",178,[[]]],[11,"into_iter","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"into_iter","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"into_iter","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"into_iter","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"to_string","","",184,[[],["string",3]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"equivalent","","",184,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"to_string","","",229,[[],["string",3]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"equivalent","","",229,[[]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"to_string","","",185,[[],["string",3]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"equivalent","","",185,[[]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"to_string","","",186,[[],["string",3]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"equivalent","","",186,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"to_string","","",187,[[],["string",3]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"equivalent","","",187,[[]]],[11,"from","wasmer_compiler::lib::std::sync","",188,[[]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"to_string","","",188,[[],["string",3]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"equivalent","","",188,[[]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::sync::atomic","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"equivalent","","",192,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::sync","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"equivalent","","",206,[[]]],[11,"from","","",207,[[]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_string","","",208,[[],["string",3]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","","",211,[[]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_string","","",212,[[],["string",3]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_string","","",213,[[],["string",3]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_string","","",214,[[],["string",3]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_string","","",215,[[],["string",3]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"into","","",216,[[]]],[11,"into_iter","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"equivalent","","",216,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"into_iter","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"into_iter","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"into_iter","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"into_iter","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","wasmer_compiler::function","",224,[[]]],[11,"into","","",224,[[]]],[11,"into_iter","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"build_hasher","wasmer_compiler::lib::std::collections::hash_map","",66,[[],["defaulthasher",3]]],[11,"description","wasmer_compiler::lib::std::sync","",215,[[]]],[11,"cause","","",215,[[],[["error",8],["option",4]]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",185,[[]]],[11,"description","wasmer_compiler::lib::std::sync","",214,[[]]],[11,"description","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"cause","","",46,[[],[["error",8],["option",4]]]],[11,"source","","",46,[[],[["option",4],["error",8]]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",184,[[]]],[11,"description","","",186,[[]]],[11,"description","wasmer_compiler::lib::std::fmt","",228,[[]]],[11,"description","wasmer_compiler::lib::std::string","",175,[[]]],[11,"description","wasmer_compiler::lib::std::str","",155,[[]]],[11,"description","wasmer_compiler::lib::std::string","",174,[[]]],[11,"description","wasmer_compiler::lib::std::str","",160,[[]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",187,[[]]],[11,"description","","",229,[[]]],[11,"deref","wasmer_compiler::lib::std::sync","",208,[[]]],[11,"deref","","",213,[[]]],[11,"deref","","",212,[[]]],[11,"partial_cmp","wasmer_compiler::lib::std::borrow","",43,[[["pathbuf",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["osstring",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["pathbuf",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",43,[[["osstring",3]],[["ordering",4],["option",4]]]],[11,"from","wasmer_compiler::lib::std::boxed","",46,[[["path",3],["cow",4]],[["path",3],["global",3],["box",3]]]],[11,"from","","Converts a [`String`] into a box of dyn [`Error`].",46,[[["string",3]],[["global",3],["box",3],["error",8]]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["cstring",3]],[["cow",4],["cstr",3]]]],[11,"from","","",43,[[["cstring",3]],[["cow",4],["cstr",3]]]],[11,"from","wasmer_compiler::lib::std::sync","",215,[[["poisonerror",3]],["trylockerror",4]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a [`Cow`] into a box of dyn [`Error`].",46,[[["cow",4]],[["global",3],["box",3],["error",8]]]],[11,"from","","Converts a [`OsString`] into a [`Box`]`<OsStr>` without…",46,[[["osstring",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync::mpsc","Converts a `RecvError` into a `RecvTimeoutError`.",186,[[["recverror",3]],["recvtimeouterror",4]]],[11,"from","","Converts a `RecvError` into a `TryRecvError`.",185,[[["recverror",3]],["tryrecverror",4]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["path",3]],[["cow",4],["path",3]]]],[11,"from","","",43,[[["pathbuf",3]],[["cow",4],["path",3]]]],[11,"from","","",43,[[["cstr",3]],[["cow",4],["cstr",3]]]],[11,"from","wasmer_compiler::lib::std::sync","Creates a new mutex in an unlocked state ready for use.…",207,[[],["mutex",3]]],[11,"from","wasmer_compiler::lib::std::sync::mpsc","Converts a `SendError<T>` into a `TrySendError<T>`.",187,[[["senderror",3]],["trysenderror",4]]],[11,"from","wasmer_compiler::lib::std::sync","Converts a [`CString`] into a [`Arc`]`<CStr>` without…",188,[[["cstring",3]],[["arc",3],["cstr",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a [`String`] into a box of dyn [`Error`] +…",46,[[["string",3]],[["global",3],["error",8],["box",3]]]],[11,"from","wasmer_compiler::lib::std::sync","Converts a `PathBuf` into an `Arc` by moving the `PathBuf`…",188,[[["pathbuf",3]],[["path",3],["arc",3]]]],[11,"from","","",188,[[["osstr",3]],[["osstr",3],["arc",3]]]],[11,"from","","Creates a new instance of an `RwLock<T>` which is…",211,[[],["rwlock",3]]],[11,"from","","Converts a [`OsString`] into a [`Arc`]`<OsStr>` without…",188,[[["osstring",3]],[["osstr",3],["arc",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a [`Cow`] into a box of dyn [`Error`] + [`Send`]…",46,[[["cow",4]],[["box",3],["error",8],["global",3]]]],[11,"from","","Converts a [`CString`] into a [`Box`]`<CStr>` without…",46,[[["cstring",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","","",46,[[["cstr",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","","Converts a `str` into a box of dyn [`Error`] + [`Send`] +…",46,[[],[["box",3],["error",8],["global",3]]]],[11,"from","","",46,[[["osstr",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","","",46,[[["cow",4],["osstr",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["osstring",3]],[["osstr",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a `PathBuf` into a `Box<Path>`",46,[[["pathbuf",3]],[["path",3],["global",3],["box",3]]]],[11,"from","","",46,[[["path",3]],[["path",3],["global",3],["box",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["osstring",3]],[["osstr",3],["cow",4]]]],[11,"from","","",43,[[["osstr",3]],[["osstr",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::sync","",188,[[["cstr",3]],[["arc",3],["cstr",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["pathbuf",3]],[["cow",4],["path",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a `str` into a box of dyn [`Error`].",46,[[],[["global",3],["box",3],["error",8]]]],[11,"from","","Converts a type of [`Error`] into a box of dyn [`Error`].",46,[[],[["box",3],["global",3],["error",8]]]],[11,"from","","Converts a type of [`Error`] + [`Send`] + [`Sync`] into a…",46,[[],[["box",3],["error",8],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","Converts a `Path` into an `Arc` by copying the `Path` data…",188,[[["path",3]],[["path",3],["arc",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","",46,[[["cow",4],["cstr",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::vec","Converts a [`CString`] into a [`Vec`]`<u8>`.",216,[[["cstring",3]],["vec",3]]],[11,"len","wasmer_compiler::lib::std::collections::hash_set","",70,[[]]],[11,"len","","",71,[[]]],[11,"len","wasmer_compiler::lib::std::collections::hash_map","",48,[[]]],[11,"len","","",56,[[]]],[11,"len","","",51,[[]]],[11,"len","","",49,[[]]],[11,"len","wasmer_compiler::lib::std::collections::hash_set","",69,[[]]],[11,"len","wasmer_compiler::lib::std::collections::hash_map","",55,[[]]],[11,"len","","",53,[[]]],[11,"len","","",50,[[]]],[11,"len","","",57,[[]]],[11,"len","","",52,[[]]],[11,"as_ref","wasmer_compiler::lib::std::string","",173,[[],["path",3]]],[11,"as_ref","wasmer_compiler::lib::std::borrow","",43,[[],["path",3]]],[11,"as_ref","wasmer_compiler::lib::std::string","",173,[[],["osstr",3]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",47,[[],["hashmap",3]]],[11,"from_iter","","",68,[[],["hashset",3]]],[11,"index","","Returns a reference to the value corresponding to the…",47,[[]]],[11,"drop","wasmer_compiler::lib::std::sync","",208,[[]]],[11,"drop","wasmer_compiler::lib::std::sync::mpsc","",182,[[]]],[11,"drop","wasmer_compiler::lib::std::sync","",213,[[]]],[11,"drop","","",211,[[]]],[11,"drop","","",212,[[]]],[11,"drop","wasmer_compiler::lib::std::sync::mpsc","",183,[[]]],[11,"drop","","",178,[[]]],[11,"into_iter","wasmer_compiler::lib::std::collections","Creates a consuming iterator, that is, one that moves each…",68,[[],["intoiter",3]]],[11,"into_iter","wasmer_compiler::lib::std::sync::mpsc","",178,[[],["intoiter",3]]],[11,"into_iter","wasmer_compiler::lib::std::collections","Creates a consuming iterator, that is, one that moves each…",47,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","",46,[[],[["box",3],["cstr",3],["global",3]]]],[11,"clone","","",46,[[],[["osstr",3],["box",3],["global",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",52,[[],["values",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",184,[[],["senderror",3]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",51,[[],["keys",3]]],[11,"clone","","",66,[[],["randomstate",3]]],[11,"clone","wasmer_compiler::lib::std::sync","",206,[[],["waittimeoutresult",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",47,[[],["hashmap",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",185,[[],["tryrecverror",4]]],[11,"clone","","",229,[[],["recverror",3]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_set","",69,[[],["iter",3]]],[11,"clone","","",76,[[],["union",3]]],[11,"clone","","",74,[[],["difference",3]]],[11,"clone","","",75,[[],["symmetricdifference",3]]],[11,"clone","","",73,[[],["intersection",3]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",67,[[],["defaulthasher",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",186,[[],["recvtimeouterror",4]]],[11,"clone","","",187,[[],["trysenderror",4]]],[11,"clone","wasmer_compiler::lib::std::boxed","",46,[[],[["path",3],["global",3],["box",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",48,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",68,[[],["hashset",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",183,[[],["syncsender",3]]],[11,"clone","","",182,[[],["sender",3]]],[11,"write","wasmer_compiler::lib::std::collections::hash_map","",67,[[]]],[11,"finish","","",67,[[]]],[11,"fill_buf","wasmer_compiler::lib::std::boxed","",46,[[],[["result",4],["error",3]]]],[11,"consume","","",46,[[]]],[11,"read_until","","",46,[[["vec",3]],[["result",4],["error",3]]]],[11,"read_line","","",46,[[["string",3]],[["result",4],["error",3]]]],[11,"to_socket_addrs","wasmer_compiler::lib::std::string","",173,[[],[["error",3],["intoiter",3],["result",4]]]],[11,"seek","wasmer_compiler::lib::std::boxed","",46,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["path",3]]]],[11,"eq","wasmer_compiler::lib::std::collections","",68,[[["hashset",3]]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",229,[[["recverror",3]]]],[11,"eq","wasmer_compiler::lib::std::collections","",47,[[["hashmap",3]]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["osstr",3]]]],[11,"eq","","",43,[[["osstr",3]]]],[11,"eq","","",43,[[["path",3]]]],[11,"eq","","",43,[[["osstr",3]]]],[11,"eq","wasmer_compiler::lib::std::sync","",206,[[["waittimeoutresult",3]]]],[11,"ne","","",206,[[["waittimeoutresult",3]]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",186,[[["recvtimeouterror",4]]]],[11,"eq","","",184,[[["senderror",3]]]],[11,"ne","","",184,[[["senderror",3]]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["path",3]]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",185,[[["tryrecverror",4]]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["pathbuf",3]]]],[11,"eq","","",43,[[["path",3]]]],[11,"eq","","",43,[[["osstring",3]]]],[11,"eq","","",43,[[["pathbuf",3]]]],[11,"eq","","",43,[[["osstr",3]]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",187,[[["trysenderror",4]]]],[11,"ne","","",187,[[["trysenderror",4]]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["osstring",3]]]],[11,"write","wasmer_compiler::lib::std::boxed","",46,[[],[["result",4],["error",3]]]],[11,"write_vectored","","",46,[[],[["result",4],["error",3]]]],[11,"is_write_vectored","","",46,[[]]],[11,"flush","","",46,[[],[["error",3],["result",4]]]],[11,"write_all","","",46,[[],[["error",3],["result",4]]]],[11,"write_fmt","","",46,[[["arguments",3]],[["error",3],["result",4]]]],[11,"write","wasmer_compiler::lib::std::vec","",216,[[],[["result",4],["error",3]]]],[11,"write_vectored","","",216,[[],[["result",4],["error",3]]]],[11,"is_write_vectored","","",216,[[]]],[11,"write_all","","",216,[[],[["error",3],["result",4]]]],[11,"flush","","",216,[[],[["error",3],["result",4]]]],[11,"deref_mut","wasmer_compiler::lib::std::sync","",208,[[]]],[11,"deref_mut","","",213,[[]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"read","wasmer_compiler::lib::std::boxed","",46,[[],[["result",4],["error",3]]]],[11,"read_vectored","","",46,[[],[["result",4],["error",3]]]],[11,"is_read_vectored","","",46,[[]]],[11,"initializer","","",46,[[],["initializer",3]]],[11,"read_to_end","","",46,[[["vec",3]],[["result",4],["error",3]]]],[11,"read_to_string","","",46,[[["string",3]],[["result",4],["error",3]]]],[11,"read_exact","","",46,[[],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","Creates a `Condvar` which is ready to be waited on and…",205,[[],["condvar",3]]],[11,"default","wasmer_compiler::lib::std::collections::hash_map","Creates a new `DefaultHasher` using `new`. See its…",67,[[],["defaulthasher",3]]],[11,"default","wasmer_compiler::lib::std::boxed","",46,[[],[["osstr",3],["box",3],["global",3]]]],[11,"default","","",46,[[],[["box",3],["cstr",3],["global",3]]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty `HashMap<K, V, S>`, with the `Default`…",47,[[],["hashmap",3]]],[11,"default","wasmer_compiler::lib::std::sync","Creates a new `RwLock<T>`, with the `Default` value for T.",211,[[],["rwlock",3]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty `HashSet<T, S>` with the `Default` value…",68,[[],["hashset",3]]],[11,"default","wasmer_compiler::lib::std::sync","Creates a `Mutex<T>`, with the `Default` value for T.",207,[[],["mutex",3]]],[11,"default","wasmer_compiler::lib::std::collections::hash_map","Constructs a new `RandomState`.",66,[[],["randomstate",3]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",69,[[],["option",4]]],[11,"size_hint","","",69,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"next","","",51,[[],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"next","","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"next","","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",71,[[],["option",4]]],[11,"size_hint","","",71,[[]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"next","wasmer_compiler::lib::std::sync::mpsc","",181,[[],["option",4]]],[11,"next","","",179,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",49,[[],["option",4]]],[11,"size_hint","","",49,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",70,[[],["option",4]]],[11,"size_hint","","",70,[[]]],[11,"next","","",72,[[],["option",4]]],[11,"size_hint","","",72,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",52,[[],["option",4]]],[11,"size_hint","","",52,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",75,[[],["option",4]]],[11,"size_hint","","",75,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",76,[[],["option",4]]],[11,"size_hint","","",76,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"next","wasmer_compiler::lib::std::sync::mpsc","",180,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",74,[[],["option",4]]],[11,"size_hint","","",74,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",48,[[],["option",4]]],[11,"size_hint","","",48,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",68,[[]]],[11,"extend_one","","",68,[[]]],[11,"extend_reserve","","",68,[[]]],[11,"extend","","",47,[[]]],[11,"extend_one","","",47,[[]]],[11,"extend_reserve","","",47,[[]]],[11,"extend","","",47,[[]]],[11,"extend_one","","",47,[[]]],[11,"extend_reserve","","",47,[[]]],[11,"extend","","",68,[[]]],[11,"extend_one","","",68,[[]]],[11,"extend_reserve","","",68,[[]]],[11,"next","wasmer_compiler::lib::std::str","",163,[[],["option",4]]],[11,"next","","",169,[[],["option",4]]],[11,"next","","",172,[[],["option",4]]],[11,"next","","",153,[[],["option",4]]],[11,"count","","",153,[[]]],[11,"size_hint","","",153,[[]]],[11,"last","","",153,[[],["option",4]]],[11,"next","","",166,[[],["option",4]]],[11,"next","","",149,[[],["option",4]]],[11,"size_hint","","",149,[[]]],[11,"next","","",156,[[],["option",4]]],[11,"size_hint","","",156,[[]]],[11,"try_fold","","",156,[[]]],[11,"fold","","",156,[[]]],[11,"next","","",171,[[],["option",4]]],[11,"next","","",168,[[],["option",4]]],[11,"next","","",162,[[],["option",4]]],[11,"size_hint","","",162,[[]]],[11,"next","","",170,[[],["option",4]]],[11,"next","","",158,[[],["option",4]]],[11,"size_hint","","",158,[[]]],[11,"try_fold","","",158,[[]]],[11,"fold","","",158,[[]]],[11,"next","","",157,[[],["option",4]]],[11,"size_hint","","",157,[[]]],[11,"try_fold","","",157,[[]]],[11,"fold","","",157,[[]]],[11,"next","","",165,[[],["option",4]]],[11,"next","","",167,[[],["option",4]]],[11,"next","","",161,[[],["option",4]]],[11,"size_hint","","",161,[[]]],[11,"last","","",161,[[],["option",4]]],[11,"next","","",152,[[],["option",4]]],[11,"size_hint","","",152,[[]]],[11,"count","","",152,[[]]],[11,"last","","",152,[[],["option",4]]],[11,"nth","","",152,[[],["option",4]]],[11,"all","","",152,[[]]],[11,"any","","",152,[[]]],[11,"find","","",152,[[],["option",4]]],[11,"position","","",152,[[],["option",4]]],[11,"rposition","","",152,[[],["option",4]]],[11,"__iterator_get_unchecked","","",152,[[]]],[11,"next","","",154,[[],["option",4]]],[11,"count","","",154,[[]]],[11,"size_hint","","",154,[[]]],[11,"last","","",154,[[],["option",4]]],[11,"next","","",164,[[],["option",4]]],[11,"next","","",150,[[],["option",4]]],[11,"size_hint","","",150,[[]]],[11,"last","","",150,[[],["option",4]]],[11,"next","","",151,[[],["option",4]]],[11,"size_hint","","",151,[[]]],[11,"last","","",151,[[],["option",4]]],[11,"eq","wasmer_compiler::lib::std::collections","",77,[[["bound",4]]]],[11,"ne","","",77,[[["bound",4]]]],[11,"eq","wasmer_compiler::lib::std::str","",155,[[["parseboolerror",3]]]],[11,"ne","","",155,[[["parseboolerror",3]]]],[11,"eq","wasmer_compiler::lib::std::sync::atomic","",192,[[["ordering",4]]]],[11,"eq","wasmer_compiler::lib::std::str::pattern","",142,[[["searchstep",4]]]],[11,"ne","","",142,[[["searchstep",4]]]],[11,"eq","wasmer_compiler::lib::std::str","",160,[[["utf8error",3]]]],[11,"ne","","",160,[[["utf8error",3]]]],[11,"eq","wasmer_compiler::lib::std::fmt","",228,[[["error",3]]]],[11,"hash","wasmer_compiler::lib::std::collections","",77,[[]]],[11,"hash","wasmer_compiler::lib::std::sync::atomic","",192,[[]]],[11,"hash","wasmer_compiler::lib::std::fmt","",228,[[]]],[11,"default","wasmer_compiler::lib::std::sync::atomic","",201,[[],["atomicisize",3]]],[11,"default","","",195,[[],["atomici16",3]]],[11,"default","wasmer_compiler::lib::std::fmt","",228,[[],["error",3]]],[11,"default","wasmer_compiler::lib::std::sync::atomic","",198,[[],["atomicu32",3]]],[11,"default","","Creates a null `AtomicPtr<T>`.",191,[[],["atomicptr",3]]],[11,"default","","",194,[[],["atomicu8",3]]],[11,"default","","",199,[[],["atomici64",3]]],[11,"default","","Creates an `AtomicBool` initialized to `false`.",190,[[],["atomicbool",3]]],[11,"default","","",202,[[],["atomicusize",3]]],[11,"default","","",196,[[],["atomicu16",3]]],[11,"default","","",197,[[],["atomici32",3]]],[11,"default","","",193,[[],["atomici8",3]]],[11,"default","","",200,[[],["atomicu64",3]]],[11,"len","wasmer_compiler::lib::std::str","",152,[[]]],[11,"is_empty","","",152,[[]]],[11,"cmp","wasmer_compiler::lib::std::fmt","",228,[[["error",3]],["ordering",4]]],[11,"write_str","","",134,[[],[["error",3],["result",4]]]],[11,"write_char","","",134,[[],[["error",3],["result",4]]]],[11,"write_fmt","","",134,[[["arguments",3]],[["error",3],["result",4]]]],[11,"haystack","wasmer_compiler::lib::std::str::pattern","",148,[[]]],[11,"next","","",148,[[],["searchstep",4]]],[11,"next_match","","",148,[[],["option",4]]],[11,"haystack","","",147,[[]]],[11,"next","","",147,[[],["searchstep",4]]],[11,"next_match","","",147,[[],["option",4]]],[11,"next_reject","","",147,[[],["option",4]]],[11,"haystack","","",146,[[]]],[11,"next","","",146,[[],["searchstep",4]]],[11,"next_match","","",146,[[],["option",4]]],[11,"next_reject","","",146,[[],["option",4]]],[11,"haystack","","",145,[[]]],[11,"next","","",145,[[],["searchstep",4]]],[11,"next_match","","",145,[[],["option",4]]],[11,"from","wasmer_compiler::lib::std::sync::atomic","Converts an `u64` into an `AtomicU64`.",200,[[],["atomicu64",3]]],[11,"from","","Converts an `i16` into an `AtomicI16`.",195,[[],["atomici16",3]]],[11,"from","","Converts an `isize` into an `AtomicIsize`.",201,[[],["atomicisize",3]]],[11,"from","","Converts an `u32` into an `AtomicU32`.",198,[[],["atomicu32",3]]],[11,"from","","Converts an `i64` into an `AtomicI64`.",199,[[],["atomici64",3]]],[11,"from","","Converts an `u8` into an `AtomicU8`.",194,[[],["atomicu8",3]]],[11,"from","","Converts an `i8` into an `AtomicI8`.",193,[[],["atomici8",3]]],[11,"from","","",191,[[],["atomicptr",3]]],[11,"from","","Converts an `u16` into an `AtomicU16`.",196,[[],["atomicu16",3]]],[11,"from","","Converts an `usize` into an `AtomicUsize`.",202,[[],["atomicusize",3]]],[11,"from","","Converts a `bool` into an `AtomicBool`.",190,[[],["atomicbool",3]]],[11,"from","","Converts an `i32` into an `AtomicI32`.",197,[[],["atomici32",3]]],[11,"fmt","","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::fmt","",228,[[["error",3]],[["ordering",4],["option",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next_back","","",163,[[],["option",4]]],[11,"next_back","","",166,[[],["option",4]]],[11,"next_back","","",171,[[],["option",4]]],[11,"next_back","","",165,[[],["option",4]]],[11,"next_back","","",153,[[],["option",4]]],[11,"next_back","","",162,[[],["option",4]]],[11,"next_back","","",172,[[],["option",4]]],[11,"next_back","","",161,[[],["option",4]]],[11,"next_back","","",164,[[],["option",4]]],[11,"next_back","","",150,[[],["option",4]]],[11,"next_back","","",168,[[],["option",4]]],[11,"next_back","","",167,[[],["option",4]]],[11,"next_back","","",154,[[],["option",4]]],[11,"next_back","","",152,[[],["option",4]]],[11,"nth_back","","",152,[[],["option",4]]],[11,"rfind","","",152,[[],["option",4]]],[11,"next_back","","",151,[[],["option",4]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",160,[[],["utf8error",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",146,[[],["charslicesearcher",3]]],[11,"clone","wasmer_compiler::lib::std::fmt","",228,[[],["error",3]]],[11,"clone","wasmer_compiler::lib::std::str","",167,[[],["rsplit",3]]],[11,"clone","","",163,[[],["matchindices",3]]],[11,"clone","","",171,[[],["rsplitterminator",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",142,[[],["searchstep",4]]],[11,"clone","wasmer_compiler::lib::std::str","",172,[[],["splitterminator",3]]],[11,"clone","","",157,[[],["escapedefault",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",145,[[],["charsearcher",3]]],[11,"clone","wasmer_compiler::lib::std::str","",154,[[],["chars",3]]],[11,"clone","","",168,[[],["split",3]]],[11,"clone","","",169,[[],["rsplitn",3]]],[11,"clone","wasmer_compiler::lib::std::sync::atomic","",192,[[],["ordering",4]]],[11,"clone","wasmer_compiler::lib::std::str","",170,[[],["splitn",3]]],[11,"clone","","",165,[[],["matches",3]]],[11,"clone","","",162,[[],["linesany",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",147,[[],["charpredicatesearcher",3]]],[11,"clone","wasmer_compiler::lib::std::fmt","",124,[[],["arguments",3]]],[11,"clone","wasmer_compiler::lib::std::str","",151,[[],["splitwhitespace",3]]],[11,"clone","","",149,[[],["encodeutf16",3]]],[11,"clone","","",161,[[],["lines",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",148,[[],["strsearcher",3]]],[11,"clone","wasmer_compiler::lib::std::str","",150,[[],["splitasciiwhitespace",3]]],[11,"clone","","",155,[[],["parseboolerror",3]]],[11,"clone","","",152,[[],["bytes",3]]],[11,"clone","","",158,[[],["escapeunicode",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",77,[[],["bound",4]]],[11,"clone","wasmer_compiler::lib::std::str","",166,[[],["rmatches",3]]],[11,"clone","","",156,[[],["escapedebug",3]]],[11,"clone","","",153,[[],["charindices",3]]],[11,"clone","","",164,[[],["rmatchindices",3]]],[11,"next_back","wasmer_compiler::lib::std::str::pattern","",148,[[],["searchstep",4]]],[11,"next_match_back","","",148,[[],["option",4]]],[11,"next_back","","",146,[[],["searchstep",4]]],[11,"next_match_back","","",146,[[],["option",4]]],[11,"next_reject_back","","",146,[[],["option",4]]],[11,"next_back","","",145,[[],["searchstep",4]]],[11,"next_match_back","","",145,[[],["option",4]]],[11,"next_back","","",147,[[],["searchstep",4]]],[11,"next_match_back","","",147,[[],["option",4]]],[11,"next_reject_back","","",147,[[],["option",4]]],[11,"index_mut","wasmer_compiler::lib::std::string","",173,[[["range",3]]]],[11,"index_mut","","",173,[[["rangefull",3]]]],[11,"index_mut","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"index_mut","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"index_mut","wasmer_compiler::lib::std::string","",173,[[["rangefrom",3]]]],[11,"index_mut","","",173,[[["rangeinclusive",3]]]],[11,"index_mut","","",173,[[["rangetoinclusive",3]]]],[11,"index_mut","","",173,[[["rangeto",3]]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",82,[[],["option",4]]],[11,"size_hint","","",82,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",103,[[],["option",4]]],[11,"size_hint","","",103,[[]]],[11,"min","","",103,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",95,[[],["option",4]]],[11,"size_hint","","",95,[[]]],[11,"last","","",95,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::vec","",219,[[],["option",4]]],[11,"size_hint","","",219,[[]]],[11,"next","wasmer_compiler::lib::std::collections::linked_list","",115,[[],["option",4]]],[11,"size_hint","","",115,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",108,[[],["option",4]]],[11,"last","","",108,[[],["option",4]]],[11,"min","","",108,[[],["option",4]]],[11,"max","","",108,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",84,[[],["option",4]]],[11,"size_hint","","",84,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",99,[[],["option",4]]],[11,"size_hint","","",99,[[]]],[11,"last","","",99,[[],["option",4]]],[11,"min","","",99,[[],["option",4]]],[11,"max","","",99,[[],["option",4]]],[11,"next","","",89,[[],["option",4]]],[11,"size_hint","","",89,[[]]],[11,"last","","",89,[[],["option",4]]],[11,"min","","",89,[[],["option",4]]],[11,"max","","",89,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::vec","",217,[[],["option",4]]],[11,"size_hint","","",217,[[]]],[11,"count","","",217,[[]]],[11,"__iterator_get_unchecked","","",217,[[]]],[11,"next","wasmer_compiler::lib::std::collections::vec_deque","",117,[[],["option",4]]],[11,"size_hint","","",117,[[]]],[11,"fold","","",117,[[]]],[11,"try_fold","","",117,[[]]],[11,"nth","","",117,[[],["option",4]]],[11,"last","","",117,[[],["option",4]]],[11,"next","","",118,[[],["option",4]]],[11,"size_hint","","",118,[[]]],[11,"fold","","",118,[[]]],[11,"nth","","",118,[[],["option",4]]],[11,"last","","",118,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",83,[[],["option",4]]],[11,"size_hint","","",83,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",97,[[],["option",4]]],[11,"last","","",97,[[],["option",4]]],[11,"min","","",97,[[],["option",4]]],[11,"max","","",97,[[],["option",4]]],[11,"next","","",94,[[],["option",4]]],[11,"size_hint","","",94,[[]]],[11,"last","","",94,[[],["option",4]]],[11,"min","","",94,[[],["option",4]]],[11,"max","","",94,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::linked_list","",110,[[],["option",4]]],[11,"size_hint","","",110,[[]]],[11,"last","","",110,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",105,[[],["option",4]]],[11,"size_hint","","",105,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",90,[[],["option",4]]],[11,"size_hint","","",90,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",107,[[],["option",4]]],[11,"size_hint","","",107,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",96,[[],["option",4]]],[11,"last","","",96,[[],["option",4]]],[11,"min","","",96,[[],["option",4]]],[11,"max","","",96,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",100,[[],["option",4]]],[11,"size_hint","","",100,[[]]],[11,"last","","",100,[[],["option",4]]],[11,"min","","",100,[[],["option",4]]],[11,"max","","",100,[[],["option",4]]],[11,"next","","",101,[[],["option",4]]],[11,"size_hint","","",101,[[]]],[11,"min","","",101,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::vec_deque","",120,[[],["option",4]]],[11,"size_hint","","",120,[[]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",80,[[],["option",4]]],[11,"size_hint","","",80,[[]]],[11,"last","","",80,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::vec_deque","",119,[[],["option",4]]],[11,"size_hint","","",119,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",104,[[],["option",4]]],[11,"size_hint","","",104,[[]]],[11,"min","","",104,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::vec","",218,[[],["option",4]]],[11,"size_hint","","",218,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",102,[[],["option",4]]],[11,"size_hint","","",102,[[]]],[11,"min","","",102,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::vec","",220,[[],["option",4]]],[11,"size_hint","","",220,[[]]],[11,"next","wasmer_compiler::lib::std::string","",177,[[],["option",4]]],[11,"size_hint","","",177,[[]]],[11,"last","","",177,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",92,[[],["option",4]]],[11,"size_hint","","",92,[[]]],[11,"last","","",92,[[],["option",4]]],[11,"next","","",93,[[],["option",4]]],[11,"size_hint","","",93,[[]]],[11,"last","","",93,[[],["option",4]]],[11,"next","","",98,[[],["option",4]]],[11,"size_hint","","",98,[[]]],[11,"next","","",91,[[],["option",4]]],[11,"size_hint","","",91,[[]]],[11,"last","","",91,[[],["option",4]]],[11,"min","","",91,[[],["option",4]]],[11,"max","","",91,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::linked_list","",111,[[],["option",4]]],[11,"size_hint","","",111,[[]]],[11,"last","","",111,[[],["option",4]]],[11,"next","","",112,[[],["option",4]]],[11,"size_hint","","",112,[[]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",81,[[],["option",4]]],[11,"size_hint","","",81,[[]]],[11,"next","wasmer_compiler::lib::std::boxed","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"nth","","",46,[[],["option",4]]],[11,"last","","",46,[[],["option",4]]],[11,"write_str","wasmer_compiler::lib::std::string","",173,[[],[["error",3],["result",4]]]],[11,"write_char","","",173,[[],[["error",3],["result",4]]]],[11,"resume","wasmer_compiler::lib::std::boxed","",46,[[["pin",3],["box",3]],["generatorstate",4]]],[11,"deref","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"deref","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"deref","wasmer_compiler::lib::std::string","",173,[[]]],[11,"deref","wasmer_compiler::lib::std::collections::binary_heap","",79,[[]]],[11,"deref","wasmer_compiler::lib::std::sync","",188,[[]]],[11,"deref","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"partial_cmp","wasmer_compiler::lib::std::collections","",116,[[["vecdeque",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::borrow","",43,[[["cow",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::collections","",88,[[["btreemap",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::boxed","",46,[[["box",3]],[["ordering",4],["option",4]]]],[11,"lt","","",46,[[["box",3]]]],[11,"le","","",46,[[["box",3]]]],[11,"ge","","",46,[[["box",3]]]],[11,"gt","","",46,[[["box",3]]]],[11,"partial_cmp","wasmer_compiler::lib::std::collections","",109,[[["linkedlist",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::sync","Partial comparison for two `Arc`s.",188,[[["arc",3]],[["ordering",4],["option",4]]]],[11,"lt","","Less-than comparison for two `Arc`s.",188,[[["arc",3]]]],[11,"le","","\'Less than or equal to\' comparison for two `Arc`s.",188,[[["arc",3]]]],[11,"gt","","Greater-than comparison for two `Arc`s.",188,[[["arc",3]]]],[11,"ge","","\'Greater than or equal to\' comparison for two `Arc`s.",188,[[["arc",3]]]],[11,"partial_cmp","wasmer_compiler::lib::std::vec","",216,[[["vec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::collections","",106,[[["btreeset",3]],[["ordering",4],["option",4]]]],[11,"lt","","",106,[[["btreeset",3]]]],[11,"le","","",106,[[["btreeset",3]]]],[11,"gt","","",106,[[["btreeset",3]]]],[11,"ge","","",106,[[["btreeset",3]]]],[11,"partial_cmp","wasmer_compiler::lib::std::string","",173,[[["string",3]],[["ordering",4],["option",4]]]],[11,"lt","","",173,[[["string",3]]]],[11,"le","","",173,[[["string",3]]]],[11,"gt","","",173,[[["string",3]]]],[11,"ge","","",173,[[["string",3]]]],[11,"call_mut","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"from","wasmer_compiler::lib::std::string","",173,[[["cow",4]],["string",3]]],[11,"from","wasmer_compiler::lib::std::sync","",188,[[],["arc",3]]],[11,"from","wasmer_compiler::lib::std::string","Converts the given boxed `str` slice to a `String`. It is…",173,[[["global",3],["box",3]],["string",3]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a `Box<str>` into a `Box<[u8]>`",46,[[["box",3]],["box",3]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["vec",3]],["cow",4]]],[11,"from","","",43,[[["string",3]],["cow",4]]],[11,"from","wasmer_compiler::lib::std::vec","",216,[[],["vec",3]]],[11,"from","","Converts a `BinaryHeap<T>` into a `Vec<T>`.",216,[[["binaryheap",3]],["vec",3]]],[11,"from","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"from","wasmer_compiler::lib::std::collections","Turn a `Vec<T>` into a `VecDeque<T>`.",116,[[["vec",3]],["vecdeque",3]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts the given `String` to a boxed `str` slice that is…",46,[[["string",3]],[["global",3],["box",3]]]],[11,"from","wasmer_compiler::lib::std::vec","",216,[[["cow",4]],["vec",3]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[],["cow",4]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a generic type `T` into a `Box<T>`",46,[[],[["global",3],["box",3]]]],[11,"from","wasmer_compiler::lib::std::sync","",188,[[],["arc",3]]],[11,"from","","",188,[[["vec",3]],["arc",3]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a `&str` into a `Box<str>`",46,[[],[["global",3],["box",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[],["cow",4]]],[11,"from","wasmer_compiler::lib::std::vec","Turn a `VecDeque<T>` into a `Vec<T>`.",216,[[["vecdeque",3]],["vec",3]]],[11,"from","","Converts the given `String` to a vector `Vec` that holds…",216,[[["string",3]],["vec",3]]],[11,"from","","",216,[[["global",3],["box",3]],["vec",3]]],[11,"from","wasmer_compiler::lib::std::collections","",121,[[["layouterr",3]],["tryreserveerror",4]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a `&[T]` into a `Box<[T]>`",46,[[],[["global",3],["box",3]]]],[11,"from","","",46,[[["cow",4]],[["global",3],["box",3]]]],[11,"from","wasmer_compiler::lib::std::sync","",188,[[["global",3],["box",3]],["arc",3]]],[11,"from","","",188,[[["string",3]],["arc",3]]],[11,"from","","",188,[[],["arc",3]]],[11,"from","wasmer_compiler::lib::std::boxed","",46,[[["cow",4]],[["global",3],["box",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["string",3]],["cow",4]]],[11,"from","wasmer_compiler::lib::std::sync","",188,[[["cow",4]],["arc",3]]],[11,"from","wasmer_compiler::lib::std::vec","",216,[[],["vec",3]]],[11,"from","","",216,[[],["vec",3]]],[11,"from","wasmer_compiler::lib::std::collections","Converts a `Vec<T>` into a `BinaryHeap<T>`.",78,[[["vec",3]],["binaryheap",3]]],[11,"from","wasmer_compiler::lib::std::string","",173,[[["string",3]],["string",3]]],[11,"from","","Converts a `&mut str` into a `String`.",173,[[],["string",3]]],[11,"from","wasmer_compiler::lib::std::borrow","",43,[[["vec",3]],["cow",4]]],[11,"from","wasmer_compiler::lib::std::vec","",216,[[],["vec",3]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a `[T; N]` into a `Box<[T]>`",46,[[],[["global",3],["box",3]]]],[11,"from","","",46,[[["vec",3]],[["global",3],["box",3]]]],[11,"from","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"poll","wasmer_compiler::lib::std::boxed","",46,[[["context",3],["pin",3],["box",3]],["poll",4]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",89,[[]]],[11,"len","","",94,[[]]],[11,"len","","",93,[[]]],[11,"len","","",95,[[]]],[11,"len","wasmer_compiler::lib::std::collections::btree_set","",107,[[]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",92,[[]]],[11,"is_empty","wasmer_compiler::lib::std::vec","",218,[[]]],[11,"is_empty","wasmer_compiler::lib::std::collections::binary_heap","",81,[[]]],[11,"is_empty","","",83,[[]]],[11,"len","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"is_empty","","",46,[[]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",90,[[]]],[11,"is_empty","wasmer_compiler::lib::std::vec","",217,[[]]],[11,"len","wasmer_compiler::lib::std::collections::btree_set","",100,[[]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",99,[[]]],[11,"is_empty","wasmer_compiler::lib::std::collections::binary_heap","",80,[[]]],[11,"is_empty","wasmer_compiler::lib::std::collections::vec_deque","",117,[[]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",91,[[]]],[11,"is_empty","wasmer_compiler::lib::std::collections::vec_deque","",119,[[]]],[11,"is_empty","","",118,[[]]],[11,"add","wasmer_compiler::lib::std::borrow","",43,[[["cow",4]]]],[11,"add","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"add","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"from_str","wasmer_compiler::lib::std::string","",173,[[],[["result",4],["string",3]]]],[11,"as_ref","wasmer_compiler::lib::std::vec","",216,[[],["vec",3]]],[11,"as_ref","","",216,[[]]],[11,"as_ref","","",217,[[]]],[11,"as_ref","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"as_ref","wasmer_compiler::lib::std::vec","",218,[[]]],[11,"as_ref","wasmer_compiler::lib::std::string","",173,[[]]],[11,"as_ref","wasmer_compiler::lib::std::sync","",188,[[]]],[11,"as_ref","wasmer_compiler::lib::std::string","",173,[[]]],[11,"as_ref","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"fmt","wasmer_compiler::lib::std::sync","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::boxed","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","wasmer_compiler::lib::std::string","",173,[[["rangetoinclusive",3]]]],[11,"index","","",173,[[["rangeinclusive",3]]]],[11,"index","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"index","wasmer_compiler::lib::std::string","",173,[[["rangeto",3]]]],[11,"index","","",173,[[["rangefrom",3]]]],[11,"index","","",173,[[["range",3]]]],[11,"index","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"index","wasmer_compiler::lib::std::string","",173,[[["rangefull",3]]]],[11,"index","wasmer_compiler::lib::std::collections","Returns a reference to the value corresponding to the…",88,[[]]],[11,"from_iter","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::sync","Takes each element in the `Iterator` and collects it into…",188,[[],["arc",3]]],[11,"from_iter","wasmer_compiler::lib::std::borrow","",43,[[],["cow",4]]],[11,"from_iter","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::vec","",216,[[],["vec",3]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",88,[[],["btreemap",3]]],[11,"from_iter","wasmer_compiler::lib::std::boxed","",46,[[],[["global",3],["box",3]]]],[11,"from_iter","wasmer_compiler::lib::std::borrow","",43,[[],["cow",4]]],[11,"from_iter","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",116,[[],["vecdeque",3]]],[11,"from_iter","","",109,[[],["linkedlist",3]]],[11,"from_iter","","",78,[[],["binaryheap",3]]],[11,"from_iter","wasmer_compiler::lib::std::borrow","",43,[[],["cow",4]]],[11,"from_iter","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"from_iter","","",173,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",106,[[],["btreeset",3]]],[11,"from_iter","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::borrow","",43,[[],["cow",4]]],[11,"drop","wasmer_compiler::lib::std::vec","",219,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::binary_heap","Removes heap elements in heap order.",84,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::btree_map","",90,[[]]],[11,"drop","wasmer_compiler::lib::std::collections","",109,[[]]],[11,"drop","wasmer_compiler::lib::std::string","",177,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::btree_set","",105,[[]]],[11,"drop","wasmer_compiler::lib::std::sync","Drops the `Arc`.",188,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::btree_map","",98,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::vec_deque","",120,[[]]],[11,"drop","wasmer_compiler::lib::std::sync","Drops the `Weak` pointer.",189,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::binary_heap","",79,[[]]],[11,"drop","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"drop","","",88,[[]]],[11,"drop","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",217,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::linked_list","",115,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",220,[[]]],[11,"drop","","",218,[[]]],[11,"to_string","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"to_string","wasmer_compiler::lib::std::borrow","",43,[[],["string",3]]],[11,"into_iter","wasmer_compiler::lib::std::collections","Consumes the `VecDeque` into a front-to-back iterator…",116,[[],["intoiter",3]]],[11,"into_iter","","",88,[[],["intoiter",3]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each…",78,[[],["intoiter",3]]],[11,"into_iter","","Gets an iterator for moving out the `BTreeSet`\'s contents.",106,[[],["intoiter",3]]],[11,"into_iter","","Consumes the list into an iterator yielding elements by…",109,[[],["intoiter",3]]],[11,"into_iter","wasmer_compiler::lib::std::vec","Creates a consuming iterator, that is, one that moves each…",216,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",88,[[],["btreemap",3]]],[11,"clone","wasmer_compiler::lib::std::collections::vec_deque","",119,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::sync","Makes a clone of the `Arc` pointer.",188,[[],["arc",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_map","",89,[[],["iter",3]]],[11,"clone","","",92,[[],["values",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",100,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::vec","",216,[[],["vec",3]]],[11,"clone_from","","",216,[[["vec",3]]]],[11,"clone","wasmer_compiler::lib::std::collections","",116,[[],["vecdeque",3]]],[11,"clone_from","","",116,[[["vecdeque",3]]]],[11,"clone","wasmer_compiler::lib::std::sync","Makes a clone of the `Weak` pointer that points to the…",189,[[],["weak",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",103,[[],["intersection",3]]],[11,"clone","wasmer_compiler::lib::std::string","",173,[[],["string",3]]],[11,"clone_from","","",173,[[["string",3]]]],[11,"clone","wasmer_compiler::lib::std::collections","",109,[[],["linkedlist",3]]],[11,"clone_from","","",109,[[["linkedlist",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",102,[[],["symmetricdifference",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","",46,[[],[["global",3],["box",3]]]],[11,"clone_from","","",46,[[["box",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",108,[[],["range",3]]],[11,"clone","wasmer_compiler::lib::std::collections::linked_list","",112,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::binary_heap","",80,[[],["iter",3]]],[11,"clone","","",81,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_map","",96,[[],["range",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",106,[[],["btreeset",3]]],[11,"clone_from","","",106,[[["btreeset",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",104,[[],["union",3]]],[11,"clone","wasmer_compiler::lib::std::collections::linked_list","",113,[[],["cursor",3]]],[11,"clone","wasmer_compiler::lib::std::collections::vec_deque","",117,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::binary_heap","",82,[[],["intoitersorted",3]]],[11,"clone","wasmer_compiler::lib::std::borrow","",43,[[],["cow",4]]],[11,"clone_from","","",43,[[["cow",4]]]],[11,"clone","wasmer_compiler::lib::std::collections","",78,[[],["binaryheap",3]]],[11,"clone_from","","",78,[[["binaryheap",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::linked_list","",110,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_map","",91,[[],["keys",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","",46,[[],[["global",3],["box",3]]]],[11,"clone","wasmer_compiler::lib::std::string","",174,[[],["fromutf8error",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",101,[[],["difference",3]]],[11,"clone","wasmer_compiler::lib::std::vec","",217,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",121,[[],["tryreserveerror",4]]],[11,"clone","wasmer_compiler::lib::std::boxed","Returns a new box with a `clone()` of this box\'s contents.",46,[[],["box",3]]],[11,"clone_from","","Copies `source`\'s contents into `self` without creating a…",46,[[["box",3]]]],[11,"finish","","",46,[[]]],[11,"write","","",46,[[]]],[11,"write_u8","","",46,[[]]],[11,"write_u16","","",46,[[]]],[11,"write_u32","","",46,[[]]],[11,"write_u64","","",46,[[]]],[11,"write_u128","","",46,[[]]],[11,"write_usize","","",46,[[]]],[11,"write_i8","","",46,[[]]],[11,"write_i16","","",46,[[]]],[11,"write_i32","","",46,[[]]],[11,"write_i64","","",46,[[]]],[11,"write_i128","","",46,[[]]],[11,"write_isize","","",46,[[]]],[11,"as_inner","wasmer_compiler::lib::std::collections::binary_heap","",81,[[]]],[11,"as_inner","wasmer_compiler::lib::std::vec","",217,[[]]],[11,"as_mut","","",216,[[],["vec",3]]],[11,"as_mut","wasmer_compiler::lib::std::string","",173,[[]]],[11,"as_mut","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"as_mut","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"eq","wasmer_compiler::lib::std::collections","",116,[[["vecdeque",3]]]],[11,"eq","","",116,[[]]],[11,"eq","wasmer_compiler::lib::std::string","",173,[[["string",3]]]],[11,"ne","","",173,[[["string",3]]]],[11,"eq","wasmer_compiler::lib::std::vec","",216,[[["vec",3]]]],[11,"ne","","",216,[[["vec",3]]]],[11,"eq","wasmer_compiler::lib::std::sync","Equality for two `Arc`s.",188,[[["arc",3]]]],[11,"ne","","Inequality for two `Arc`s.",188,[[["arc",3]]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"ne","","",43,[[]]],[11,"eq","wasmer_compiler::lib::std::string","",173,[[]]],[11,"ne","","",173,[[]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"ne","","",43,[[]]],[11,"eq","wasmer_compiler::lib::std::collections","",106,[[["btreeset",3]]]],[11,"ne","","",106,[[["btreeset",3]]]],[11,"eq","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"ne","","",216,[[]]],[11,"eq","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"eq","","",116,[[]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["string",3]]]],[11,"ne","","",43,[[["string",3]]]],[11,"eq","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"ne","","",216,[[]]],[11,"eq","wasmer_compiler::lib::std::collections","",109,[[["linkedlist",3]]]],[11,"ne","","",109,[[["linkedlist",3]]]],[11,"eq","wasmer_compiler::lib::std::boxed","",46,[[["box",3]]]],[11,"ne","","",46,[[["box",3]]]],[11,"eq","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"ne","","",216,[[]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"ne","","",43,[[]]],[11,"eq","wasmer_compiler::lib::std::string","",173,[[]]],[11,"ne","","",173,[[]]],[11,"eq","wasmer_compiler::lib::std::collections","",121,[[["tryreserveerror",4]]]],[11,"ne","","",121,[[["tryreserveerror",4]]]],[11,"eq","","",116,[[]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["vec",3]]]],[11,"ne","","",43,[[["vec",3]]]],[11,"eq","","",43,[[]]],[11,"ne","","",43,[[]]],[11,"eq","wasmer_compiler::lib::std::string","",173,[[["cow",4]]]],[11,"ne","","",173,[[["cow",4]]]],[11,"eq","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"eq","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"ne","","",216,[[]]],[11,"eq","wasmer_compiler::lib::std::string","",174,[[["fromutf8error",3]]]],[11,"ne","","",174,[[["fromutf8error",3]]]],[11,"eq","wasmer_compiler::lib::std::borrow","",43,[[["cow",4]]]],[11,"eq","wasmer_compiler::lib::std::collections","",88,[[["btreemap",3]]]],[11,"eq","","",116,[[["vec",3]]]],[11,"eq","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"ne","","",216,[[]]],[11,"call","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"add_assign","wasmer_compiler::lib::std::string","",173,[[]]],[11,"add_assign","wasmer_compiler::lib::std::borrow","",43,[[["cow",4]]]],[11,"add_assign","","",43,[[]]],[11,"cmp","wasmer_compiler::lib::std::collections","",116,[[["vecdeque",3]],["ordering",4]]],[11,"cmp","","",106,[[["btreeset",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::borrow","",43,[[["cow",4]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::collections","",109,[[["linkedlist",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::boxed","",46,[[["box",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::collections","",88,[[["btreemap",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::vec","",216,[[["vec",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::string","",173,[[["string",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::sync","Comparison for two `Arc`s.",188,[[["arc",3]],["ordering",4]]],[11,"deref_mut","wasmer_compiler::lib::std::string","",173,[[]]],[11,"deref_mut","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"deref_mut","wasmer_compiler::lib::std::collections::binary_heap","",79,[[]]],[11,"deref_mut","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"hash","","",216,[[]]],[11,"hash","wasmer_compiler::lib::std::collections","",109,[[]]],[11,"hash","wasmer_compiler::lib::std::sync","",188,[[]]],[11,"hash","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"hash","wasmer_compiler::lib::std::collections","",106,[[]]],[11,"hash","","",116,[[]]],[11,"hash","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"hash","wasmer_compiler::lib::std::collections","",88,[[]]],[11,"hash","wasmer_compiler::lib::std::string","",173,[[]]],[11,"fmt","wasmer_compiler::lib::std::boxed","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::borrow","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"borrow_mut","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"borrow_mut","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"borrow_mut","wasmer_compiler::lib::std::string","",173,[[]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::boxed","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::borrow","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",219,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",220,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty `LinkedList<T>`.",109,[[],["linkedlist",3]]],[11,"default","","Makes an empty `BTreeSet<T>` with a reasonable choice of B.",106,[[],["btreeset",3]]],[11,"default","","Creates an empty `BinaryHeap<T>`.",78,[[],["binaryheap",3]]],[11,"default","wasmer_compiler::lib::std::boxed","",46,[[],[["global",3],["box",3]]]],[11,"default","wasmer_compiler::lib::std::string","Creates an empty `String`.",173,[[],["string",3]]],[11,"default","wasmer_compiler::lib::std::vec","Creates an empty `Vec<T>`.",216,[[],["vec",3]]],[11,"default","wasmer_compiler::lib::std::boxed","Creates a `Box<T>`, with the `Default` value for T.",46,[[],[["global",3],["box",3]]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty `BTreeMap<K, V>`.",88,[[],["btreemap",3]]],[11,"default","wasmer_compiler::lib::std::borrow","Creates an owned Cow<\'a, B> with the default value for the…",43,[[],["cow",4]]],[11,"default","wasmer_compiler::lib::std::boxed","",46,[[],[["global",3],["box",3]]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty `VecDeque<T>`.",116,[[],["vecdeque",3]]],[11,"default","wasmer_compiler::lib::std::sync","Creates a new `Arc<T>`, with the `Default` value for `T`.",188,[[],["arc",3]]],[11,"default","","Constructs a new `Weak<T>`, without allocating memory.…",189,[[],["weak",3]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",93,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::vec_deque","",119,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",94,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::linked_list","",110,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_set","",108,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::binary_heap","",83,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",99,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::linked_list","",111,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",91,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::binary_heap","",80,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",95,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::string","",177,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::linked_list","",112,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",89,[[],["option",4]]],[11,"next_back","","",97,[[],["option",4]]],[11,"next_back","","",92,[[],["option",4]]],[11,"next_back","","",96,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::vec_deque","",120,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_set","",107,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::boxed","",46,[[],["option",4]]],[11,"nth_back","","",46,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_set","",100,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::vec_deque","",118,[[],["option",4]]],[11,"rfold","","",118,[[]]],[11,"next_back","wasmer_compiler::lib::std::vec","",218,[[],["option",4]]],[11,"next_back","","",217,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::binary_heap","",81,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::vec_deque","",117,[[],["option",4]]],[11,"rfold","","",117,[[]]],[11,"try_rfold","","",117,[[]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",90,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::vec","",219,[[],["option",4]]],[11,"try_from","wasmer_compiler::lib::std::boxed","",46,[[["global",3],["box",3]],[["result",4],["box",3]]]],[11,"try_from","wasmer_compiler::lib::std::sync","",188,[[["arc",3]],[["arc",3],["result",4]]]],[11,"borrow","wasmer_compiler::lib::std::borrow","",43,[[]]],[11,"borrow","wasmer_compiler::lib::std::string","",173,[[]]],[11,"borrow","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"borrow","wasmer_compiler::lib::std::sync","",188,[[]]],[11,"borrow","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"call_once","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",78,[[]]],[11,"extend_one","","",78,[[]]],[11,"extend_reserve","","",78,[[]]],[11,"extend","wasmer_compiler::lib::std::string","",173,[[]]],[11,"extend_one","","",173,[[]]],[11,"extend_reserve","","",173,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",106,[[]]],[11,"extend_one","","",106,[[]]],[11,"extend","wasmer_compiler::lib::std::string","",173,[[]]],[11,"extend_one","","",173,[[["string",3]]]],[11,"extend","","",173,[[]]],[11,"extend_one","","",173,[[]]],[11,"extend_reserve","","",173,[[]]],[11,"extend","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"extend_one","","",216,[[]]],[11,"extend_reserve","","",216,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",109,[[]]],[11,"extend_one","","",109,[[]]],[11,"extend","","",109,[[]]],[11,"extend_one","","",109,[[]]],[11,"extend","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"extend_one","","",216,[[]]],[11,"extend_reserve","","",216,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"extend_one","","",116,[[]]],[11,"extend_reserve","","",116,[[]]],[11,"extend","","",88,[[]]],[11,"extend_one","","",88,[[]]],[11,"extend","wasmer_compiler::lib::std::string","",173,[[]]],[11,"extend_one","","",173,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",78,[[]]],[11,"extend_one","","",78,[[]]],[11,"extend_reserve","","",78,[[]]],[11,"extend","","",106,[[]]],[11,"extend_one","","",106,[[]]],[11,"extend","wasmer_compiler::lib::std::string","",173,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",116,[[]]],[11,"extend_one","","",116,[[]]],[11,"extend_reserve","","",116,[[]]],[11,"extend","","",88,[[]]],[11,"extend_one","","",88,[[]]],[11,"extend","wasmer_compiler::lib::std::string","",173,[[]]],[11,"extend_one","","",173,[[["cow",4]]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",202,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",201,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",198,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",194,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",195,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",193,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::sync","",207,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",211,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",200,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::sync","",188,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::vec","",216,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::string","",173,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",196,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",197,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::collections","",47,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",199,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::boxed","",46,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",190,[[["memoryusagetracker",8]]]],[11,"track","wasmer_compiler::lib::std::collections","",106,[[]]],[11,"track","","",68,[[]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",116,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",211,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",194,[[],["result",4]]],[11,"serialize","","",196,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::string","",173,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",190,[[],["result",4]]],[11,"serialize","","",200,[[],["result",4]]],[11,"serialize","","",195,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",109,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",189,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",201,[[],["result",4]]],[11,"serialize","","",202,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",207,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",106,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",188,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",198,[[],["result",4]]],[11,"serialize","","",197,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::boxed","",46,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",88,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",78,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::vec","",216,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::fmt","",124,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",193,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::borrow","",43,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",68,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",199,[[],["result",4]]],[11,"into_deserializer","wasmer_compiler::lib::std::collections","",106,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::vec","",216,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::collections","",88,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::string","",173,[[],["stringdeserializer",3]]],[11,"into_deserializer","wasmer_compiler::lib::std::collections","",47,[[]]],[11,"into_deserializer","","",68,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::borrow","",43,[[],["cowstrdeserializer",3]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",190,[[],[["atomicbool",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::string","",173,[[],[["result",4],["string",3]]]],[11,"deserialize_in_place","","",173,[[["string",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",78,[[],[["binaryheap",3],["result",4]]]],[11,"deserialize_in_place","","",78,[[["binaryheap",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",202,[[],[["result",4],["atomicusize",3]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",46,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",199,[[],[["atomici64",3],["result",4]]]],[11,"deserialize","","",195,[[],[["result",4],["atomici16",3]]]],[11,"deserialize","","",200,[[],[["result",4],["atomicu64",3]]]],[11,"deserialize","","",198,[[],[["result",4],["atomicu32",3]]]],[11,"deserialize","wasmer_compiler::lib::std::borrow","",43,[[],[["result",4],["cow",4]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",46,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",77,[[],[["bound",4],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::vec","",216,[[],[["result",4],["vec",3]]]],[11,"deserialize_in_place","","",216,[[["vec",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",116,[[],[["result",4],["vecdeque",3]]]],[11,"deserialize_in_place","","",116,[[["vecdeque",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",193,[[],[["result",4],["atomici8",3]]]],[11,"deserialize","wasmer_compiler::lib::std::sync","",188,[[],[["arc",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",46,[[],[["box",3],["result",4]]]],[11,"deserialize","","",46,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",197,[[],[["result",4],["atomici32",3]]]],[11,"deserialize","wasmer_compiler::lib::std::sync","",211,[[],[["result",4],["rwlock",3]]]],[11,"deserialize","","",207,[[],[["result",4],["mutex",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",47,[[],[["result",4],["hashmap",3]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",194,[[],[["result",4],["atomicu8",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",106,[[],[["result",4],["btreeset",3]]]],[11,"deserialize_in_place","","",106,[[["btreeset",3]],["result",4]]],[11,"deserialize","","",88,[[],[["btreemap",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",196,[[],[["result",4],["atomicu16",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",109,[[],[["linkedlist",3],["result",4]]]],[11,"deserialize_in_place","","",109,[[["linkedlist",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync","",189,[[],[["weak",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",68,[[],[["hashset",3],["result",4]]]],[11,"deserialize_in_place","","",68,[[["hashset",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",46,[[],[["box",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",201,[[],[["result",4],["atomicisize",3]]]],[11,"custom","wasmer_compiler::lib::std::fmt","",228,[[],["error",3]]],[11,"default","wasmer_compiler","",8,[[],["features",3]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",8,[[["features",3]]]],[11,"ne","","",8,[[["features",3]]]],[11,"serialize","","",8,[[],["result",4]]],[11,"clone","","",8,[[],["features",3]]],[11,"deserialize","","",8,[[],[["result",4],["features",3]]]],[11,"size_of_val","","",8,[[["memoryusagetracker",8]]]],[11,"from_fallible_iter","wasmer_compiler::lib::std::vec","",216,[[],[["vec",3],["result",4]]]],[11,"from_fallible_iter","wasmer_compiler::lib::std::collections","",68,[[],[["hashset",3],["result",4]]]],[11,"from_fallible_iter","","",106,[[],[["btreeset",3],["result",4]]]],[11,"from_fallible_iter","","",88,[[],[["btreemap",3],["result",4]]]],[11,"from_fallible_iter","","",47,[[],[["hashmap",3],["result",4]]]],[11,"next_back","wasmer_compiler::lib::std::boxed","",46,[[],[["result",4],["option",4]]]],[11,"next","","",46,[[],[["result",4],["option",4]]]],[11,"size_hint","","",46,[[]]],[11,"nth","","",46,[[],[["result",4],["option",4]]]],[11,"eq","wasmer_compiler::target","",4,[[["operatingsystem",4]]]],[11,"ne","","",4,[[["operatingsystem",4]]]],[11,"eq","","",6,[[["pointerwidth",4]]]],[11,"eq","","",1,[[["binaryformat",4]]]],[11,"eq","","",3,[[["endianness",4]]]],[11,"eq","","",0,[[["architecture",4]]]],[11,"ne","","",0,[[["architecture",4]]]],[11,"eq","","",2,[[["callingconvention",4]]]],[11,"eq","","",7,[[["triple",3]]]],[11,"ne","","",7,[[["triple",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",3,[[],["endianness",4]]],[11,"clone","","",1,[[],["binaryformat",4]]],[11,"clone","","",0,[[],["architecture",4]]],[11,"clone","","",4,[[],["operatingsystem",4]]],[11,"clone","","",7,[[],["triple",3]]],[11,"clone","","",6,[[],["pointerwidth",4]]],[11,"clone","","",2,[[],["callingconvention",4]]],[11,"from_str","","",0,[[],[["architecture",4],["result",4]]]],[11,"from_str","","",4,[[],[["result",4],["operatingsystem",4]]]],[11,"from_str","","",7,[[],[["result",4],["triple",3]]]],[11,"from_str","","",1,[[],[["result",4],["binaryformat",4]]]],[11,"hash","","",2,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",0,[[]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","wasmer_compiler::lib::std::boxed","",46,[[],[["bytes",3],["global",3],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::vec","",216,[[],[["result",4],["vec",3]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",46,[[],[["result",4],["box",3]]]],[11,"deserialize","","",46,[[],[["box",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::borrow","",43,[[],[["result",4],["cow",4]]]],[11,"deserialize","","",43,[[],[["result",4],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::boxed","",46,[[["global",3],["box",3]],[["bytes",3],["global",3],["box",3]]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::borrow","",43,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::vec","",216,[[],["result",4]]],[11,"from","wasmer_compiler::lib::std::boxed","",46,[[]]],[11,"from","wasmer_compiler","",33,[[["wasmerror",4]]]],[11,"from","","",35,[[["middlewareerror",3]]]],[11,"from","","",35,[[["binaryreadererror",3]]]],[11,"from","","",33,[[["binaryreadererror",3]]]],[11,"extend","","",27,[[["intoiterator",8]]]],[11,"extend","","",27,[[["intoiterator",8]]]],[11,"next","wasmer_compiler::function","",224,[[],["option",4]]],[11,"clone","wasmer_compiler","",10,[[],["instructionaddressmap",3]]],[11,"clone","","",9,[[],["functionaddressmap",3]]],[11,"clone","","",32,[[],["symbol",4]]],[11,"clone","","",14,[[],["compiledfunctionframeinfo",3]]],[11,"clone","","",16,[[],["functionbody",3]]],[11,"clone","","",13,[[],["compiledfunction",3]]],[11,"clone","","",15,[[],["dwarf",3]]],[11,"clone","","",17,[[],["jumptable",3]]],[11,"clone","","",37,[[],["relocationkind",4]]],[11,"clone","","",19,[[],["relocation",3]]],[11,"clone","","",38,[[],["relocationtarget",4]]],[11,"clone","","",40,[[]]],[11,"clone","","",24,[[],["target",3]]],[11,"clone","","",31,[[],["trapinformation",3]]],[11,"clone","","",41,[[],["compiledfunctionunwindinfo",4]]],[11,"clone","","",22,[[],["sectionindex",3]]],[11,"clone","","",39,[[],["customsectionprotection",4]]],[11,"clone","","",20,[[],["customsection",3]]],[11,"clone","","",21,[[],["sectionbody",3]]],[11,"clone","","",23,[[],["sourceloc",3]]],[11,"default","","",9,[[],["functionaddressmap",3]]],[11,"default","","",14,[[],["compiledfunctionframeinfo",3]]],[11,"default","","",24,[[]]],[11,"default","","",21,[[],["sectionbody",3]]],[11,"default","","",23,[[]]],[11,"cmp","","",17,[[["jumptable",3]],["ordering",4]]],[11,"cmp","","",22,[[["sectionindex",3]],["ordering",4]]],[11,"eq","","",10,[[["instructionaddressmap",3]]]],[11,"ne","","",10,[[["instructionaddressmap",3]]]],[11,"eq","","",9,[[["functionaddressmap",3]]]],[11,"ne","","",9,[[["functionaddressmap",3]]]],[11,"eq","","",32,[[["symbol",4]]]],[11,"ne","","",32,[[["symbol",4]]]],[11,"eq","","",14,[[["compiledfunctionframeinfo",3]]]],[11,"ne","","",14,[[["compiledfunctionframeinfo",3]]]],[11,"eq","","",16,[[["functionbody",3]]]],[11,"ne","","",16,[[["functionbody",3]]]],[11,"eq","","",13,[[["compiledfunction",3]]]],[11,"ne","","",13,[[["compiledfunction",3]]]],[11,"eq","","",15,[[["dwarf",3]]]],[11,"ne","","",15,[[["dwarf",3]]]],[11,"eq","","",12,[[["compilation",3]]]],[11,"ne","","",12,[[["compilation",3]]]],[11,"eq","","",17,[[["jumptable",3]]]],[11,"ne","","",17,[[["jumptable",3]]]],[11,"eq","","",37,[[["relocationkind",4]]]],[11,"eq","","",19,[[["relocation",3]]]],[11,"ne","","",19,[[["relocation",3]]]],[11,"eq","","",38,[[["relocationtarget",4]]]],[11,"ne","","",38,[[["relocationtarget",4]]]],[11,"eq","","",40,[[]]],[11,"eq","","",40,[[["enumset",3]]]],[11,"eq","","",24,[[["target",3]]]],[11,"ne","","",24,[[["target",3]]]],[11,"eq","","",31,[[["trapinformation",3]]]],[11,"ne","","",31,[[["trapinformation",3]]]],[11,"eq","","",41,[[["compiledfunctionunwindinfo",4]]]],[11,"ne","","",41,[[["compiledfunctionunwindinfo",4]]]],[11,"eq","","",22,[[["sectionindex",3]]]],[11,"ne","","",22,[[["sectionindex",3]]]],[11,"eq","","",39,[[["customsectionprotection",4]]]],[11,"eq","","",20,[[["customsection",3]]]],[11,"ne","","",20,[[["customsection",3]]]],[11,"eq","","",21,[[["sectionbody",3]]]],[11,"ne","","",21,[[["sectionbody",3]]]],[11,"eq","","",23,[[["sourceloc",3]]]],[11,"ne","","",23,[[["sourceloc",3]]]],[11,"partial_cmp","","",17,[[["jumptable",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["jumptable",3]]]],[11,"le","","",17,[[["jumptable",3]]]],[11,"gt","","",17,[[["jumptable",3]]]],[11,"ge","","",17,[[["jumptable",3]]]],[11,"partial_cmp","","",22,[[["sectionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["sectionindex",3]]]],[11,"le","","",22,[[["sectionindex",3]]]],[11,"gt","","",22,[[["sectionindex",3]]]],[11,"ge","","",22,[[["sectionindex",3]]]],[11,"to_string","","",40,[[],["string",3]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","Display trait implementation drops the arch, since its…",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"sub","","",40,[[]]],[11,"not","","",40,[[]]],[11,"bitand","","",40,[[]]],[11,"bitor","","",40,[[]]],[11,"bitxor","","",40,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",22,[[]]],[11,"from_str","","",40,[[],["result",4]]],[11,"size_of_val","","",10,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",9,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",14,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",16,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",15,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",17,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",18,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",37,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",19,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",38,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",24,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",31,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",41,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",22,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",39,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",20,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",21,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",23,[[["memoryusagetracker",8]]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"new","","",17,[[]]],[11,"index","","",17,[[]]],[11,"new","","",22,[[]]],[11,"index","","",22,[[]]],[11,"reserved_value","","",17,[[],["jumptable",3]]],[11,"is_reserved_value","","",17,[[]]],[11,"reserved_value","","",22,[[],["sectionindex",3]]],[11,"is_reserved_value","","",22,[[]]],[11,"enum_into_u32","","",40,[[]]],[11,"enum_from_u32","","",40,[[]]],[11,"endianness","wasmer_compiler::target","Return the endianness of this architecture.",0,[[],[["result",4],["endianness",4]]]],[11,"pointer_width","","Return the pointer bit width of this target\'s architecture.",0,[[],[["result",4],["pointerwidth",4]]]],[11,"host","","Return the architecture for the current host.",0,[[],["architecture",4]]],[11,"host","","Return the binary format for the current host.",1,[[],["binaryformat",4]]],[11,"host","","Return the operating system for the current host.",4,[[],["operatingsystem",4]]],[11,"bits","","Return the number of bits in a pointer.",6,[[]]],[11,"bytes","","Return the number of bytes in a pointer.",6,[[]]],[11,"endianness","","Return the endianness of this target\'s architecture.",7,[[],[["result",4],["endianness",4]]]],[11,"pointer_width","","Return the pointer width of this target\'s architecture.",7,[[],[["result",4],["pointerwidth",4]]]],[11,"default_calling_convention","","Return the default calling convention for the given target…",7,[[],[["result",4],["callingconvention",4]]]],[11,"data_model","","The C data model for a given target. If the model is not…",7,[[],[["result",4],["cdatamodel",4]]]],[11,"unknown","","Return a `Triple` with all unknown fields.",7,[[],["triple",3]]],[11,"host","","Return the triple for the current host.",7,[[],["triple",3]]],[11,"new","wasmer_compiler","Create a new feature",8,[[],["features",3]]],[11,"threads","","Configures whether the WebAssembly threads proposal will…",8,[[],["features",3]]],[11,"reference_types","","Configures whether the WebAssembly reference types…",8,[[],["features",3]]],[11,"simd","","Configures whether the WebAssembly SIMD proposal will be…",8,[[],["features",3]]],[11,"bulk_memory","","Configures whether the WebAssembly bulk memory operations…",8,[[],["features",3]]],[11,"multi_value","","Configures whether the WebAssembly multi-value proposal…",8,[[],["features",3]]],[11,"tail_call","","Configures whether the WebAssembly tail-call proposal will…",8,[[],["features",3]]],[11,"module_linking","","Configures whether the WebAssembly tail-call proposal will…",8,[[],["features",3]]],[11,"multi_memory","","Configures whether the WebAssembly multi-memory proposal…",8,[[],["features",3]]],[11,"memory64","","Configures whether the WebAssembly 64-bit memory proposal…",8,[[],["features",3]]],[11,"is_borrowed","wasmer_compiler::lib::std::borrow","Returns true if the data is borrowed, i.e. if `to_mut`…",43,[[]]],[11,"is_owned","","Returns true if the data is owned, i.e. if `to_mut` would…",43,[[]]],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",43,[[]]],[11,"into_owned","","Extracts the owned data.",43,[[]]],[11,"new","wasmer_compiler::lib::std::boxed","Allocates memory on the heap and then places `x` into it.",46,[[],[["global",3],["box",3]]]],[11,"new_uninit","","Constructs a new box with uninitialized contents.",46,[[],[["box",3],["global",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new `Box` with uninitialized contents, with…",46,[[],[["box",3],["global",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new `Pin<Box<T>>`. If `T` does not implement…",46,[[],[["pin",3],["box",3]]]],[11,"new_in","","Allocates memory in the given allocator then places `x`…",46,[[],["box",3]]],[11,"new_uninit_in","","Constructs a new box with uninitialized contents in the…",46,[[],[["box",3],["maybeuninit",19]]]],[11,"new_zeroed_in","","Constructs a new `Box` with uninitialized contents, with…",46,[[],[["box",3],["maybeuninit",19]]]],[11,"pin_in","","Constructs a new `Pin<Box<T, A>>`. If `T` does not…",46,[[],[["box",3],["pin",3]]]],[11,"into_boxed_slice","","Converts a `Box<T>` into a `Box<[T]>`",46,[[["box",3]],["box",3]]],[11,"new_uninit_slice","","Constructs a new boxed slice with uninitialized contents.",46,[[],[["global",3],["box",3]]]],[11,"new_zeroed_slice","","Constructs a new boxed slice with uninitialized contents,…",46,[[],[["global",3],["box",3]]]],[11,"new_uninit_slice_in","","Constructs a new boxed slice with uninitialized contents…",46,[[],["box",3]]],[11,"new_zeroed_slice_in","","Constructs a new boxed slice with uninitialized contents…",46,[[],["box",3]]],[11,"assume_init","","Converts to `Box<T, A>`.",46,[[],["box",3]]],[11,"assume_init","","Converts to `Box<[T], A>`.",46,[[],["box",3]]],[11,"from_raw","","Constructs a box from a raw pointer.",46,[[],[["global",3],["box",3]]]],[11,"from_raw_in","","Constructs a box from a raw pointer in the given allocator.",46,[[],["box",3]]],[11,"into_raw","","Consumes the `Box`, returning a wrapped raw pointer.",46,[[["box",3]]]],[11,"into_raw_with_alloc","","Consumes the `Box`, returning a wrapped raw pointer and…",46,[[["box",3]]]],[11,"alloc_ref","","Returns a reference to the underlying allocator.",46,[[["box",3]]]],[11,"leak","","Consumes and leaks the `Box`, returning a mutable…",46,[[["box",3]]]],[11,"into_pin","","Converts a `Box<T>` into a `Pin<Box<T>>`",46,[[["box",3]],[["box",3],["pin",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",46,[[],[["result",4],["box",3],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",46,[[],[["box",3],["result",4],["box",3]]]],[11,"new","wasmer_compiler::lib::std::collections","Creates an empty `HashMap`.",47,[[],[["hashmap",3],["randomstate",3]]]],[11,"with_capacity","","Creates an empty `HashMap` with the specified capacity.",47,[[],[["hashmap",3],["randomstate",3]]]],[11,"with_hasher","","Creates an empty `HashMap` which will use the given hash…",47,[[],["hashmap",3]]],[11,"with_capacity_and_hasher","","Creates an empty `HashMap` with the specified capacity,…",47,[[],["hashmap",3]]],[11,"capacity","","Returns the number of elements the map can hold without…",47,[[]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The…",47,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The…",47,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary…",47,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary…",47,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary…",47,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",47,[[]]],[11,"is_empty","","Returns `true` if the map contains no elements.",47,[[]]],[11,"drain","","Clears the map, returning all key-value pairs as an…",47,[[],["drain",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if…",47,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",47,[[]]],[11,"hasher","","Returns a reference to the map\'s [`BuildHasher`].",47,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",47,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",47,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",47,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It…",47,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",47,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",47,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",47,[[],["option",4]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",47,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",47,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",47,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the key…",47,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",47,[[],["option",4]]],[11,"retain","","Retains only the elements specified by the predicate.",47,[[]]],[11,"into_keys","","Creates a consuming iterator visiting all the keys in…",47,[[],["intokeys",3]]],[11,"into_values","","Creates a consuming iterator visiting all the values in…",47,[[],["intovalues",3]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",47,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",47,[[],["rawentrybuilder",3]]],[11,"from_key","wasmer_compiler::lib::std::collections::hash_map","Creates a `RawEntryMut` from the given key.",58,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a `RawEntryMut` from the given key and its hash.",58,[[],["rawentrymut",4]]],[11,"from_hash","","Creates a `RawEntryMut` from the given hash.",58,[[],["rawentrymut",4]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",59,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",59,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",59,[[],["rawentrymut",4]]],[11,"key","","Gets a reference to the key in the entry.",60,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",60,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in…",60,[[]]],[11,"get","","Gets a reference to the value in the entry.",60,[[]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",60,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",60,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",60,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the entry.",60,[[]]],[11,"into_key_value","","Converts the `OccupiedEntry` into a mutable reference to…",60,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old…",60,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry\'s old…",60,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",60,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",60,[[]]],[11,"insert","","Sets the value of the entry with the `VacantEntry`\'s key,…",61,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry\'s key,…",61,[[]]],[11,"from_key","","Access an entry by key.",62,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",62,[[],["option",4]]],[11,"from_hash","","Access an entry by hash.",62,[[],["option",4]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",63,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",63,[[]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty,…",63,[[]]],[11,"key","","Returns a reference to this entry\'s key.",63,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",63,[[],["entry",4]]],[11,"insert","","Sets the value of the entry, and returns an `OccupiedEntry`.",63,[[],["occupiedentry",3]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",63,[[]]],[11,"key","","Gets a reference to the key in the entry.",64,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",64,[[]]],[11,"get","","Gets a reference to the value in the entry.",64,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",64,[[]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference to…",64,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old…",64,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",64,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The…",64,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to…",64,[[]]],[11,"key","","Gets a reference to the key that would be used when…",65,[[]]],[11,"into_key","","Take ownership of the key.",65,[[]]],[11,"insert","","Sets the value of the entry with the `VacantEntry`\'s key,…",65,[[]]],[11,"new","","Constructs a new `RandomState` that is initialized with…",66,[[],["randomstate",3]]],[11,"new","","Creates a new `DefaultHasher`.",67,[[],["defaulthasher",3]]],[11,"new","wasmer_compiler::lib::std::collections","Creates an empty `HashSet`.",68,[[],[["hashset",3],["randomstate",3]]]],[11,"with_capacity","","Creates an empty `HashSet` with the specified capacity.",68,[[],[["hashset",3],["randomstate",3]]]],[11,"capacity","","Returns the number of elements the set can hold without…",68,[[]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The…",68,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",68,[[]]],[11,"is_empty","","Returns `true` if the set contains no elements.",68,[[]]],[11,"drain","","Clears the set, returning all elements in an iterator.",68,[[],["drain",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if a…",68,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",68,[[]]],[11,"with_hasher","","Creates a new empty hash set which will use the given…",68,[[],["hashset",3]]],[11,"with_capacity_and_hasher","","Creates an empty `HashSet` with the specified capacity,…",68,[[],["hashset",3]]],[11,"hasher","","Returns a reference to the set\'s [`BuildHasher`].",68,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",68,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",68,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It…",68,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It…",68,[[]]],[11,"difference","","Visits the values representing the difference, i.e., the…",68,[[["hashset",3]],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",68,[[["hashset",3]],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., the…",68,[[["hashset",3]],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the…",68,[[["hashset",3]],["union",3]]],[11,"contains","","Returns `true` if the set contains a value.",68,[[]]],[11,"get","","Returns a reference to the value in the set, if any, that…",68,[[],["option",4]]],[11,"get_or_insert","","Inserts the given `value` into the set if it is not…",68,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given `value` into the set if…",68,[[]]],[11,"get_or_insert_with","","Inserts a value computed from `f` into the set if the…",68,[[]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",68,[[["hashset",3]]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.,…",68,[[["hashset",3]]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.,…",68,[[["hashset",3]]]],[11,"insert","","Adds a value to the set.",68,[[]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",68,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value…",68,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is…",68,[[],["option",4]]],[11,"retain","","Retains only the elements specified by the predicate.",68,[[]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",77,[[],["bound",4]]],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",78,[[],["binaryheap",3]]],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.…",78,[[],["binaryheap",3]]],[11,"peek_mut","","Returns a mutable reference to the greatest item in the…",78,[[],[["peekmut",3],["option",4]]]],[11,"pop","","Removes the greatest item from the binary heap and returns…",78,[[],["option",4]]],[11,"push","","Pushes an item onto the binary heap.",78,[[]]],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted…",78,[[],["vec",3]]],[11,"append","","Moves all the elements of `other` into `self`, leaving…",78,[[["binaryheap",3]]]],[11,"drain_sorted","","Returns an iterator which retrieves elements in heap…",78,[[],["drainsorted",3]]],[11,"retain","","Retains only the elements specified by the predicate.",78,[[]]],[11,"iter","","Returns an iterator visiting all values in the underlying…",78,[[],["iter",3]]],[11,"into_iter_sorted","","Returns an iterator which retrieves elements in heap…",78,[[],["intoitersorted",3]]],[11,"peek","","Returns the greatest item in the binary heap, or `None` if…",78,[[],["option",4]]],[11,"capacity","","Returns the number of elements the binary heap can hold…",78,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",78,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",78,[[]]],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",78,[[]]],[11,"shrink_to","","Discards capacity with a lower bound.",78,[[]]],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying…",78,[[],["vec",3]]],[11,"len","","Returns the length of the binary heap.",78,[[]]],[11,"is_empty","","Checks if the binary heap is empty.",78,[[]]],[11,"drain","","Clears the binary heap, returning an iterator over the…",78,[[],["drain",3]]],[11,"clear","","Drops all items from the binary heap.",78,[[]]],[11,"pop","wasmer_compiler::lib::std::collections::binary_heap","Removes the peeked value from the heap and returns it.",79,[[["peekmut",3]]]],[11,"or_insert","wasmer_compiler::lib::std::collections::btree_map","Ensures a value is in the entry by inserting the default…",85,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",85,[[]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty,…",85,[[]]],[11,"key","","Returns a reference to this entry\'s key.",85,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",85,[[],["entry",4]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",85,[[]]],[11,"key","","Gets a reference to the key in the entry.",86,[[]]],[11,"remove_entry","","Take ownership of the key and value from the map.",86,[[]]],[11,"get","","Gets a reference to the value in the entry.",86,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",86,[[]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",86,[[]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`\'s…",86,[[]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",86,[[]]],[11,"key","","Gets a reference to the key that would be used when…",87,[[]]],[11,"into_key","","Take ownership of the key.",87,[[]]],[11,"insert","","Sets the value of the entry with the `VacantEntry`\'s key,…",87,[[]]],[11,"new","wasmer_compiler::lib::std::collections","Makes a new empty BTreeMap.",88,[[],["btreemap",3]]],[11,"clear","","Clears the map, removing all elements.",88,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",88,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",88,[[],["option",4]]],[11,"first_key_value","","Returns the first key-value pair in the map. The key in…",88,[[],["option",4]]],[11,"first_entry","","Returns the first entry in the map for in-place…",88,[[],[["option",4],["occupiedentry",3]]]],[11,"pop_first","","Removes and returns the first element in the map. The key…",88,[[],["option",4]]],[11,"last_key_value","","Returns the last key-value pair in the map. The key in…",88,[[],["option",4]]],[11,"last_entry","","Returns the last entry in the map for in-place…",88,[[],[["option",4],["occupiedentry",3]]]],[11,"pop_last","","Removes and returns the last element in the map. The key…",88,[[],["option",4]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",88,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",88,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",88,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the key…",88,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",88,[[],["option",4]]],[11,"append","","Moves all elements from `other` into `Self`, leaving…",88,[[["btreemap",3]]]],[11,"range","","Constructs a double-ended iterator over a sub-range of…",88,[[],["range",3]]],[11,"range_mut","","Constructs a mutable double-ended iterator over a…",88,[[],["rangemut",3]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",88,[[],["entry",4]]],[11,"split_off","","Splits the collection into two at the given key. Returns…",88,[[],["btreemap",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if…",88,[[],["drainfilter",3]]],[11,"into_keys","","Creates a consuming iterator visiting all the keys, in…",88,[[],["intokeys",3]]],[11,"into_values","","Creates a consuming iterator visiting all the values, in…",88,[[],["intovalues",3]]],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",88,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map,…",88,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",88,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map, in order by…",88,[[],["values",3]]],[11,"values_mut","","Gets a mutable iterator over the values of the map, in…",88,[[],["valuesmut",3]]],[11,"len","","Returns the number of elements in the map.",88,[[]]],[11,"is_empty","","Returns `true` if the map contains no elements.",88,[[]]],[11,"new","","Makes a new `BTreeSet` with a reasonable choice of B.",106,[[],["btreeset",3]]],[11,"range","","Constructs a double-ended iterator over a sub-range of…",106,[[],["range",3]]],[11,"difference","","Visits the values representing the difference, i.e., the…",106,[[["btreeset",3]],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",106,[[["btreeset",3]],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., the…",106,[[["btreeset",3]],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the…",106,[[["btreeset",3]],["union",3]]],[11,"clear","","Clears the set, removing all values.",106,[[]]],[11,"contains","","Returns `true` if the set contains a value.",106,[[]]],[11,"get","","Returns a reference to the value in the set, if any, that…",106,[[],["option",4]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",106,[[["btreeset",3]]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.,…",106,[[["btreeset",3]]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.,…",106,[[["btreeset",3]]]],[11,"first","","Returns a reference to the first value in the set, if any.…",106,[[],["option",4]]],[11,"last","","Returns a reference to the last value in the set, if any.…",106,[[],["option",4]]],[11,"pop_first","","Removes the first value from the set and returns it, if…",106,[[],["option",4]]],[11,"pop_last","","Removes the last value from the set and returns it, if…",106,[[],["option",4]]],[11,"insert","","Adds a value to the set.",106,[[]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",106,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value…",106,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is…",106,[[],["option",4]]],[11,"append","","Moves all elements from `other` into `Self`, leaving…",106,[[["btreeset",3]]]],[11,"split_off","","Splits the collection into two at the given key. Returns…",106,[[],["btreeset",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if a…",106,[[],["drainfilter",3]]],[11,"iter","","Gets an iterator that visits the values in the `BTreeSet`…",106,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",106,[[]]],[11,"is_empty","","Returns `true` if the set contains no elements.",106,[[]]],[11,"new","","Creates an empty `LinkedList`.",109,[[],["linkedlist",3]]],[11,"append","","Moves all elements from `other` to the end of the list.",109,[[["linkedlist",3]]]],[11,"prepend","","Moves all elements from `other` to the begin of the list.",109,[[["linkedlist",3]]]],[11,"iter","","Provides a forward iterator.",109,[[],["iter",3]]],[11,"iter_mut","","Provides a forward iterator with mutable references.",109,[[],["itermut",3]]],[11,"cursor_front","","Provides a cursor at the front element.",109,[[],["cursor",3]]],[11,"cursor_front_mut","","Provides a cursor with editing operations at the front…",109,[[],["cursormut",3]]],[11,"cursor_back","","Provides a cursor at the back element.",109,[[],["cursor",3]]],[11,"cursor_back_mut","","Provides a cursor with editing operations at the back…",109,[[],["cursormut",3]]],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",109,[[]]],[11,"len","","Returns the length of the `LinkedList`.",109,[[]]],[11,"clear","","Removes all elements from the `LinkedList`.",109,[[]]],[11,"contains","","Returns `true` if the `LinkedList` contains an element…",109,[[]]],[11,"front","","Provides a reference to the front element, or `None` if…",109,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the front element, or…",109,[[],["option",4]]],[11,"back","","Provides a reference to the back element, or `None` if the…",109,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the back element, or…",109,[[],["option",4]]],[11,"push_front","","Adds an element first in the list.",109,[[]]],[11,"pop_front","","Removes the first element and returns it, or `None` if the…",109,[[],["option",4]]],[11,"push_back","","Appends an element to the back of a list.",109,[[]]],[11,"pop_back","","Removes the last element from a list and returns it, or…",109,[[],["option",4]]],[11,"split_off","","Splits the list into two at the given index. Returns…",109,[[],["linkedlist",3]]],[11,"remove","","Removes the element at the given index and returns it.",109,[[]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if…",109,[[],["drainfilter",3]]],[11,"insert_next","wasmer_compiler::lib::std::collections::linked_list","Inserts the given element just after the element most…",111,[[]]],[11,"peek_next","","Provides a reference to the next element, without changing…",111,[[],["option",4]]],[11,"index","","Returns the cursor position index within the `LinkedList`.",113,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element of the `LinkedList`.",113,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the…",113,[[]]],[11,"current","","Returns a reference to the element that the cursor is…",113,[[],["option",4]]],[11,"peek_next","","Returns a reference to the next element.",113,[[],["option",4]]],[11,"peek_prev","","Returns a reference to the previous element.",113,[[],["option",4]]],[11,"index","","Returns the cursor position index within the `LinkedList`.",114,[[],["option",4]]],[11,"move_next","","Moves the cursor to the next element of the `LinkedList`.",114,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the…",114,[[]]],[11,"current","","Returns a reference to the element that the cursor is…",114,[[],["option",4]]],[11,"peek_next","","Returns a reference to the next element.",114,[[],["option",4]]],[11,"peek_prev","","Returns a reference to the previous element.",114,[[],["option",4]]],[11,"as_cursor","","Returns a read-only cursor pointing to the current element.",114,[[],["cursor",3]]],[11,"insert_after","","Inserts a new element into the `LinkedList` after the…",114,[[]]],[11,"insert_before","","Inserts a new element into the `LinkedList` before the…",114,[[]]],[11,"remove_current","","Removes the current element from the `LinkedList`.",114,[[],["option",4]]],[11,"remove_current_as_list","","Removes the current element from the `LinkedList` without…",114,[[],[["linkedlist",3],["option",4]]]],[11,"splice_after","","Inserts the elements from the given `LinkedList` after the…",114,[[["linkedlist",3]]]],[11,"splice_before","","Inserts the elements from the given `LinkedList` before…",114,[[["linkedlist",3]]]],[11,"split_after","","Splits the list into two after the current element. This…",114,[[],["linkedlist",3]]],[11,"split_before","","Splits the list into two before the current element. This…",114,[[],["linkedlist",3]]],[11,"new","wasmer_compiler::lib::std::collections","Creates an empty `VecDeque`.",116,[[],["vecdeque",3]]],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least…",116,[[],["vecdeque",3]]],[11,"get","","Provides a reference to the element at the given index.",116,[[],["option",4]]],[11,"get_mut","","Provides a mutable reference to the element at the given…",116,[[],["option",4]]],[11,"swap","","Swaps elements at indices `i` and `j`.",116,[[]]],[11,"capacity","","Returns the number of elements the `VecDeque` can hold…",116,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",116,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",116,[[]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly…",116,[[],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",116,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",116,[[]]],[11,"shrink_to","","Shrinks the capacity of the `VecDeque` with a lower bound.",116,[[]]],[11,"truncate","","Shortens the `VecDeque`, keeping the first `len` elements…",116,[[]]],[11,"iter","","Returns a front-to-back iterator.",116,[[],["iter",3]]],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable…",116,[[],["itermut",3]]],[11,"as_slices","","Returns a pair of slices which contain, in order, the…",116,[[]]],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the…",116,[[]]],[11,"len","","Returns the number of elements in the `VecDeque`.",116,[[]]],[11,"is_empty","","Returns `true` if the `VecDeque` is empty.",116,[[]]],[11,"range","","Creates an iterator that covers the specified range in the…",116,[[],["iter",3]]],[11,"range_mut","","Creates an iterator that covers the specified mutable…",116,[[],["itermut",3]]],[11,"drain","","Creates a draining iterator that removes the specified…",116,[[],["drain",3]]],[11,"clear","","Clears the `VecDeque`, removing all values.",116,[[]]],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal…",116,[[]]],[11,"front","","Provides a reference to the front element, or `None` if…",116,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the front element, or…",116,[[],["option",4]]],[11,"back","","Provides a reference to the back element, or `None` if the…",116,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the back element, or…",116,[[],["option",4]]],[11,"pop_front","","Removes the first element and returns it, or `None` if the…",116,[[],["option",4]]],[11,"pop_back","","Removes the last element from the `VecDeque` and returns…",116,[[],["option",4]]],[11,"push_front","","Prepends an element to the `VecDeque`.",116,[[]]],[11,"push_back","","Appends an element to the back of the `VecDeque`.",116,[[]]],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and…",116,[[],["option",4]]],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and…",116,[[],["option",4]]],[11,"insert","","Inserts an element at `index` within the `VecDeque`,…",116,[[]]],[11,"remove","","Removes and returns the element at `index` from the…",116,[[],["option",4]]],[11,"split_off","","Splits the `VecDeque` into two at the given index.",116,[[],["vecdeque",3]]],[11,"append","","Moves all the elements of `other` into `self`, leaving…",116,[[["vecdeque",3]]]],[11,"retain","","Retains only the elements specified by the predicate.",116,[[]]],[11,"resize_with","","Modifies the `VecDeque` in-place so that `len()` is equal…",116,[[]]],[11,"make_contiguous","","Rearranges the internal storage of this deque so it is one…",116,[[]]],[11,"rotate_left","","Rotates the double-ended queue `mid` places to the left.",116,[[]]],[11,"rotate_right","","Rotates the double-ended queue `k` places to the right.",116,[[]]],[11,"binary_search","","Binary searches this sorted `VecDeque` for a given element.",116,[[],["result",4]]],[11,"binary_search_by","","Binary searches this sorted `VecDeque` with a comparator…",116,[[],["result",4]]],[11,"binary_search_by_key","","Binary searches this sorted `VecDeque` with a key…",116,[[],["result",4]]],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal…",116,[[]]],[11,"as_str","wasmer_compiler::lib::std::fmt","Get the formatted string, if it has no arguments to be…",124,[[],["option",4]]],[11,"entry","","Adds a new entry to the list output.",129,[[["debug",8]],["debuglist",3]]],[11,"entries","","Adds the contents of an iterator of entries to the list…",129,[[],["debuglist",3]]],[11,"finish","","Finishes output and returns any error encountered.",129,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the map output.",130,[[["debug",8]],["debugmap",3]]],[11,"key","","Adds the key part of a new entry to the map output.",130,[[["debug",8]],["debugmap",3]]],[11,"value","","Adds the value part of a new entry to the map output.",130,[[["debug",8]],["debugmap",3]]],[11,"entries","","Adds the contents of an iterator of entries to the map…",130,[[],["debugmap",3]]],[11,"finish","","Finishes output and returns any error encountered.",130,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the set output.",131,[[["debug",8]],["debugset",3]]],[11,"entries","","Adds the contents of an iterator of entries to the set…",131,[[],["debugset",3]]],[11,"finish","","Finishes output and returns any error encountered.",131,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated struct output.",132,[[["debug",8]],["debugstruct",3]]],[11,"finish_non_exhaustive","","Marks the struct as non-exhaustive, indicating to the…",132,[[],[["error",3],["result",4]]]],[11,"finish","","Finishes output and returns any error encountered.",132,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated tuple struct output.",133,[[["debug",8]],["debugtuple",3]]],[11,"finish","","Finishes output and returns any error encountered.",133,[[],[["error",3],["result",4]]]],[11,"pad_integral","","Performs the correct padding for an integer which has…",134,[[],[["error",3],["result",4]]]],[11,"pad","","This function takes a string slice and emits it to the…",134,[[],[["error",3],["result",4]]]],[11,"write_str","","Writes some data to the underlying buffer contained within…",134,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Writes some formatted information into this instance.",134,[[["arguments",3]],[["error",3],["result",4]]]],[11,"flags","","Flags for formatting",134,[[]]],[11,"fill","","Character used as \'fill\' whenever there is alignment.",134,[[]]],[11,"align","","Flag indicating what form of alignment was requested.",134,[[],[["alignment",4],["option",4]]]],[11,"width","","Optionally specified integer width that the output should…",134,[[],["option",4]]],[11,"precision","","Optionally specified precision for numeric types.…",134,[[],["option",4]]],[11,"sign_plus","","Determines if the `+` flag was specified.",134,[[]]],[11,"sign_minus","","Determines if the `-` flag was specified.",134,[[]]],[11,"alternate","","Determines if the `#` flag was specified.",134,[[]]],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",134,[[]]],[11,"debug_struct","","Creates a [`DebugStruct`] builder designed to assist with…",134,[[],["debugstruct",3]]],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with…",134,[[],["debugtuple",3]]],[11,"debug_list","","Creates a `DebugList` builder designed to assist with…",134,[[],["debuglist",3]]],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with…",134,[[],["debugset",3]]],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with…",134,[[],["debugmap",3]]],[11,"as_str","wasmer_compiler::lib::std::str","Views the underlying data as a subslice of the original…",153,[[]]],[11,"as_str","","Views the underlying data as a subslice of the original…",154,[[]]],[11,"valid_up_to","","Returns the index in the given string up to which valid…",160,[[]]],[11,"error_len","","Provides more information about the failure:",160,[[],["option",4]]],[11,"as_str","","Returns remainder of the splitted string",167,[[]]],[11,"as_str","","Returns remainder of the splitted string",168,[[]]],[11,"as_str","","Returns remainder of the splitted string",169,[[]]],[11,"as_str","","Returns remainder of the splitted string",170,[[]]],[11,"as_str","","Returns remainder of the splitted string",171,[[]]],[11,"as_str","","Returns remainder of the splitted string",172,[[]]],[11,"new","wasmer_compiler::lib::std::string","Creates a new empty `String`.",173,[[],["string",3]]],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",173,[[],["string",3]]],[11,"from_utf8","","Converts a vector of bytes to a `String`.",173,[[["vec",3]],[["string",3],["result",4],["fromutf8error",3]]]],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid…",173,[[],["cow",4]]],[11,"from_utf16","","Decode a UTF-16–encoded vector `v` into a `String`,…",173,[[],[["string",3],["result",4],["fromutf16error",3]]]],[11,"from_utf16_lossy","","Decode a UTF-16–encoded slice `v` into a `String`,…",173,[[],["string",3]]],[11,"into_raw_parts","","Decomposes a `String` into its raw components.",173,[[]]],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",173,[[],["string",3]]],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking…",173,[[["vec",3]],["string",3]]],[11,"into_bytes","","Converts a `String` into a byte vector.",173,[[],["vec",3]]],[11,"as_str","","Extracts a string slice containing the entire `String`.",173,[[]]],[11,"as_mut_str","","Converts a `String` into a mutable string slice.",173,[[]]],[11,"push_str","","Appends a given string slice onto the end of this `String`.",173,[[]]],[11,"capacity","","Returns this `String`\'s capacity, in bytes.",173,[[]]],[11,"reserve","","Ensures that this `String`\'s capacity is at least…",173,[[]]],[11,"reserve_exact","","Ensures that this `String`\'s capacity is `additional`…",173,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",173,[[],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserves the minimum capacity for exactly…",173,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",173,[[]]],[11,"shrink_to","","Shrinks the capacity of this `String` with a lower bound.",173,[[]]],[11,"push","","Appends the given [`char`] to the end of this `String`.",173,[[]]],[11,"as_bytes","","Returns a byte slice of this `String`\'s contents.",173,[[]]],[11,"truncate","","Shortens this `String` to the specified length.",173,[[]]],[11,"pop","","Removes the last character from the string buffer and…",173,[[],["option",4]]],[11,"remove","","Removes a [`char`] from this `String` at a byte position…",173,[[]]],[11,"retain","","Retains only the characters specified by the predicate.",173,[[]]],[11,"insert","","Inserts a character into this `String` at a byte position.",173,[[]]],[11,"insert_str","","Inserts a string slice into this `String` at a byte…",173,[[]]],[11,"as_mut_vec","","Returns a mutable reference to the contents of this…",173,[[],["vec",3]]],[11,"len","","Returns the length of this `String`, in bytes, not…",173,[[]]],[11,"is_empty","","Returns `true` if this `String` has a length of zero, and…",173,[[]]],[11,"split_off","","Splits the string into two at the given index.",173,[[],["string",3]]],[11,"clear","","Truncates this `String`, removing all contents.",173,[[]]],[11,"drain","","Creates a draining iterator that removes the specified…",173,[[],["drain",3]]],[11,"replace_range","","Removes the specified range in the string, and replaces it…",173,[[]]],[11,"into_boxed_str","","Converts this `String` into a [`Box`]`<``str``>`.",173,[[],[["global",3],["box",3]]]],[11,"as_bytes","","Returns a slice of [`u8`]s bytes that were attempted to…",174,[[]]],[11,"into_bytes","","Returns the bytes that were attempted to convert to a…",174,[[],["vec",3]]],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the…",174,[[],["utf8error",3]]],[11,"as_str","","Returns the remaining (sub)string of this iterator as a…",177,[[]]],[11,"try_recv","wasmer_compiler::lib::std::sync::mpsc","Attempts to return a pending value on this receiver…",178,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Attempts to wait for a value on this receiver, returning…",178,[[],[["recverror",3],["result",4]]]],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning…",178,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_deadline","","Attempts to wait for a value on this receiver, returning…",178,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"iter","","Returns an iterator that will block waiting for messages,…",178,[[],["iter",3]]],[11,"try_iter","","Returns an iterator that will attempt to yield all pending…",178,[[],["tryiter",3]]],[11,"send","","Attempts to send a value on this channel, returning it…",182,[[],[["result",4],["senderror",3]]]],[11,"send","","Sends a value on this synchronous channel.",183,[[],[["result",4],["senderror",3]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",183,[[],[["result",4],["trysenderror",4]]]],[11,"new","wasmer_compiler::lib::std::sync","Constructs a new `Arc<T>`.",188,[[],["arc",3]]],[11,"new_cyclic","","Constructs a new `Arc<T>` using a weak reference to…",188,[[],["arc",3]]],[11,"new_uninit","","Constructs a new `Arc` with uninitialized contents.",188,[[],[["arc",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new `Arc` with uninitialized contents, with…",188,[[],[["arc",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new `Pin<Arc<T>>`. If `T` does not implement…",188,[[],[["arc",3],["pin",3]]]],[11,"try_unwrap","","Returns the inner value, if the `Arc` has exactly one…",188,[[["arc",3]],[["arc",3],["result",4]]]],[11,"new_uninit_slice","","Constructs a new atomically reference-counted slice with…",188,[[],["arc",3]]],[11,"new_zeroed_slice","","Constructs a new atomically reference-counted slice with…",188,[[],["arc",3]]],[11,"assume_init","","Converts to `Arc<T>`.",188,[[],["arc",3]]],[11,"assume_init","","Converts to `Arc<[T]>`.",188,[[],["arc",3]]],[11,"into_raw","","Consumes the `Arc`, returning the wrapped pointer.",188,[[["arc",3]]]],[11,"as_ptr","","Provides a raw pointer to the data.",188,[[["arc",3]]]],[11,"from_raw","","Constructs an `Arc<T>` from a raw pointer.",188,[[],["arc",3]]],[11,"downgrade","","Creates a new [`Weak`] pointer to this allocation.",188,[[["arc",3]],["weak",3]]],[11,"weak_count","","Gets the number of [`Weak`] pointers to this allocation.",188,[[["arc",3]]]],[11,"strong_count","","Gets the number of strong (`Arc`) pointers to this…",188,[[["arc",3]]]],[11,"incr_strong_count","","Increments the strong reference count on the `Arc<T>`…",188,[[]]],[11,"decr_strong_count","","Decrements the strong reference count on the `Arc<T>`…",188,[[]]],[11,"ptr_eq","","Returns `true` if the two `Arc`s point to the same…",188,[[["arc",3]]]],[11,"make_mut","","Makes a mutable reference into the given `Arc`.",188,[[["arc",3]]]],[11,"get_mut","","Returns a mutable reference into the given `Arc`, if there…",188,[[["arc",3]],["option",4]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given `Arc`, without…",188,[[["arc",3]]]],[11,"downcast","","Attempt to downcast the `Arc<dyn Any + Send + Sync>` to a…",188,[[],[["arc",3],["result",4],["arc",3]]]],[11,"new","","Constructs a new `Weak<T>`, without allocating any memory.…",189,[[],["weak",3]]],[11,"as_ptr","","Returns a raw pointer to the object `T` pointed to by this…",189,[[]]],[11,"into_raw","","Consumes the `Weak<T>` and turns it into a raw pointer.",189,[[]]],[11,"from_raw","","Converts a raw pointer previously created by `into_raw`…",189,[[],["weak",3]]],[11,"upgrade","","Attempts to upgrade the `Weak` pointer to an [`Arc`],…",189,[[],[["arc",3],["option",4]]]],[11,"strong_count","","Gets the number of strong (`Arc`) pointers pointing to…",189,[[]]],[11,"weak_count","","Gets an approximation of the number of `Weak` pointers…",189,[[]]],[11,"ptr_eq","","Returns `true` if the two `Weak`s point to the same…",189,[[["weak",3]]]],[11,"new","wasmer_compiler::lib::std::sync::atomic","Creates a new `AtomicBool`.",190,[[],["atomicbool",3]]],[11,"get_mut","","Returns a mutable reference to the underlying [`bool`].",190,[[]]],[11,"from_mut","","Get atomic access to a `&mut bool`.",190,[[],["atomicbool",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",190,[[]]],[11,"load","","Loads a value from the bool.",190,[[["ordering",4]]]],[11,"store","","Stores a value into the bool.",190,[[["ordering",4]]]],[11,"swap","","Stores a value into the bool, returning the previous value.",190,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the [`bool`] if the current value is…",190,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the [`bool`] if the current value is…",190,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the [`bool`] if the current value is…",190,[[["ordering",4]],["result",4]]],[11,"fetch_and","","Logical \\\"and\\\" with a boolean value.",190,[[["ordering",4]]]],[11,"fetch_nand","","Logical \\\"nand\\\" with a boolean value.",190,[[["ordering",4]]]],[11,"fetch_or","","Logical \\\"or\\\" with a boolean value.",190,[[["ordering",4]]]],[11,"fetch_xor","","Logical \\\"xor\\\" with a boolean value.",190,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying [`bool`].",190,[[]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",190,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new `AtomicPtr`.",191,[[],["atomicptr",3]]],[11,"get_mut","","Returns a mutable reference to the underlying pointer.",191,[[]]],[11,"from_mut","","Get atomic access to a pointer.",191,[[],["atomicptr",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",191,[[]]],[11,"load","","Loads a value from the pointer.",191,[[["ordering",4]]]],[11,"store","","Stores a value into the pointer.",191,[[["ordering",4]]]],[11,"swap","","Stores a value into the pointer, returning the previous…",191,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the pointer if the current value is…",191,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the pointer if the current value is…",191,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is…",191,[[["ordering",4]],["result",4]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",191,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new atomic integer.",193,[[],["atomici8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",193,[[]]],[11,"from_mut","","Get atomic access to a `&mut i8`.",193,[[],["atomici8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",193,[[]]],[11,"load","","Loads a value from the atomic integer.",193,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",193,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",193,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",193,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",193,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",193,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",193,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",193,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",193,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",193,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",193,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",193,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",193,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",193,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",193,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",193,[[]]],[11,"new","","Creates a new atomic integer.",194,[[],["atomicu8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",194,[[]]],[11,"from_mut","","Get atomic access to a `&mut u8`.",194,[[],["atomicu8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",194,[[]]],[11,"load","","Loads a value from the atomic integer.",194,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",194,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",194,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",194,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",194,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",194,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",194,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",194,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",194,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",194,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",194,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",194,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",194,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",194,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",194,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",194,[[]]],[11,"new","","Creates a new atomic integer.",195,[[],["atomici16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",195,[[]]],[11,"from_mut","","Get atomic access to a `&mut i16`.",195,[[],["atomici16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",195,[[]]],[11,"load","","Loads a value from the atomic integer.",195,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",195,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",195,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",195,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",195,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",195,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",195,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",195,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",195,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",195,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",195,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",195,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",195,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",195,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",195,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",195,[[]]],[11,"new","","Creates a new atomic integer.",196,[[],["atomicu16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",196,[[]]],[11,"from_mut","","Get atomic access to a `&mut u16`.",196,[[],["atomicu16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",196,[[]]],[11,"load","","Loads a value from the atomic integer.",196,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",196,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",196,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",196,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",196,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",196,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",196,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",196,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",196,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",196,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",196,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",196,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",196,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",196,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",196,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",196,[[]]],[11,"new","","Creates a new atomic integer.",197,[[],["atomici32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",197,[[]]],[11,"from_mut","","Get atomic access to a `&mut i32`.",197,[[],["atomici32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",197,[[]]],[11,"load","","Loads a value from the atomic integer.",197,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",197,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",197,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",197,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",197,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",197,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",197,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",197,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",197,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",197,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",197,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",197,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",197,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",197,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",197,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",197,[[]]],[11,"new","","Creates a new atomic integer.",198,[[],["atomicu32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",198,[[]]],[11,"from_mut","","Get atomic access to a `&mut u32`.",198,[[],["atomicu32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",198,[[]]],[11,"load","","Loads a value from the atomic integer.",198,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",198,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",198,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",198,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",198,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",198,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",198,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",198,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",198,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",198,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",198,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",198,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",198,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",198,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",198,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",198,[[]]],[11,"new","","Creates a new atomic integer.",199,[[],["atomici64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",199,[[]]],[11,"from_mut","","Get atomic access to a `&mut i64`.",199,[[],["atomici64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",199,[[]]],[11,"load","","Loads a value from the atomic integer.",199,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",199,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",199,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",199,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",199,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",199,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",199,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",199,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",199,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",199,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",199,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",199,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",199,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",199,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",199,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",199,[[]]],[11,"new","","Creates a new atomic integer.",200,[[],["atomicu64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",200,[[]]],[11,"from_mut","","Get atomic access to a `&mut u64`.",200,[[],["atomicu64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",200,[[]]],[11,"load","","Loads a value from the atomic integer.",200,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",200,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",200,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",200,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",200,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",200,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",200,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",200,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",200,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",200,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",200,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",200,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",200,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",200,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",200,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",200,[[]]],[11,"new","","Creates a new atomic integer.",201,[[],["atomicisize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",201,[[]]],[11,"from_mut","","Get atomic access to a `&mut isize`.",201,[[],["atomicisize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",201,[[]]],[11,"load","","Loads a value from the atomic integer.",201,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",201,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",201,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",201,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",201,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",201,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",201,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",201,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",201,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",201,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",201,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",201,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",201,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",201,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",201,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",201,[[]]],[11,"new","","Creates a new atomic integer.",202,[[],["atomicusize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",202,[[]]],[11,"from_mut","","Get atomic access to a `&mut usize`.",202,[[],["atomicusize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",202,[[]]],[11,"load","","Loads a value from the atomic integer.",202,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",202,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",202,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",202,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",202,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",202,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",202,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",202,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",202,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",202,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",202,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",202,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",202,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",202,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",202,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",202,[[]]],[11,"new","wasmer_compiler::lib::std::sync","Creates a new barrier that can block a given number of…",203,[[],["barrier",3]]],[11,"wait","","Blocks the current thread until all threads have…",203,[[],["barrierwaitresult",3]]],[11,"is_leader","","Returns `true` if this thread is the \\\"leader thread\\\" for…",204,[[]]],[11,"new","","Creates a new condition variable which is ready to be…",205,[[],["condvar",3]]],[11,"wait","","Blocks the current thread until this condition variable…",205,[[["mutexguard",3]],[["result",4],["poisonerror",3],["mutexguard",3]]]],[11,"wait_while","","Blocks the current thread until this condition variable…",205,[[["mutexguard",3]],[["result",4],["poisonerror",3],["mutexguard",3]]]],[11,"wait_timeout_ms","","Waits on this condition variable for a notification,…",205,[[["mutexguard",3]],[["result",4],["poisonerror",3]]]],[11,"wait_timeout","","Waits on this condition variable for a notification,…",205,[[["duration",3],["mutexguard",3]],[["poisonerror",3],["result",4]]]],[11,"wait_timeout_while","","Waits on this condition variable for a notification,…",205,[[["duration",3],["mutexguard",3]],[["poisonerror",3],["result",4]]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",205,[[]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",205,[[]]],[11,"timed_out","","Returns `true` if the wait was known to have timed out.",206,[[]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",207,[[],["mutex",3]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",207,[[],[["result",4],["mutexguard",3],["poisonerror",3]]]],[11,"try_lock","","Attempts to acquire this lock.",207,[[],[["result",4],["mutexguard",3],["trylockerror",4]]]],[11,"is_poisoned","","Determines whether the mutex is poisoned.",207,[[]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",207,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",207,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a new `Once` value.",209,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. The…",209,[[]]],[11,"call_once_force","","Performs the same function as `call_once()` except ignores…",209,[[]]],[11,"is_completed","","Returns `true` if some `call_once()` call has completed…",209,[[]]],[11,"poisoned","","Returns `true` if the associated [`Once`] was poisoned…",210,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",211,[[],["rwlock",3]]],[11,"read","","Locks this rwlock with shared read access, blocking the…",211,[[],[["result",4],["rwlockreadguard",3],["poisonerror",3]]]],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",211,[[],[["result",4],["rwlockreadguard",3],["trylockerror",4]]]],[11,"write","","Locks this rwlock with exclusive write access, blocking…",211,[[],[["result",4],["rwlockwriteguard",3],["poisonerror",3]]]],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",211,[[],[["trylockerror",4],["rwlockwriteguard",3],["result",4]]]],[11,"is_poisoned","","Determines whether the lock is poisoned.",211,[[]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",211,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",211,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a `PoisonError`.",214,[[],["poisonerror",3]]],[11,"into_inner","","Consumes this error indicating that a lock is poisoned,…",214,[[]]],[11,"get_ref","","Reaches into this error indicating that a lock is…",214,[[]]],[11,"get_mut","","Reaches into this error indicating that a lock is…",214,[[]]],[11,"new","wasmer_compiler::lib::std::vec","Constructs a new, empty `Vec<T>`.",216,[[],["vec",3]]],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified…",216,[[],["vec",3]]],[11,"into_raw_parts","","Decomposes a `Vec<T>` into its raw components.",216,[[]]],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of…",216,[[],["vec",3]]],[11,"capacity","","Returns the number of elements the vector can hold without…",216,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",216,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",216,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",216,[[],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly…",216,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",216,[[]]],[11,"shrink_to","","Shrinks the capacity of the vector with a lower bound.",216,[[]]],[11,"into_boxed_slice","","Converts the vector into `Box<[T]>`.",216,[[],[["global",3],["box",3]]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",216,[[]]],[11,"as_slice","","Extracts a slice containing the entire vector.",216,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",216,[[]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",216,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the vector\'s buffer.",216,[[]]],[11,"set_len","","Forces the length of the vector to `new_len`.",216,[[]]],[11,"swap_remove","","Removes an element from the vector and returns it.",216,[[]]],[11,"insert","","Inserts an element at position `index` within the vector,…",216,[[]]],[11,"remove","","Removes and returns the element at position `index` within…",216,[[]]],[11,"retain","","Retains only the elements specified by the predicate.",216,[[]]],[11,"dedup_by_key","","Removes all but the first of consecutive elements in the…",216,[[]]],[11,"dedup_by","","Removes all but the first of consecutive elements in the…",216,[[]]],[11,"push","","Appends an element to the back of a collection.",216,[[]]],[11,"pop","","Removes the last element from a vector and returns it, or…",216,[[],["option",4]]],[11,"append","","Moves all the elements of `other` into `Self`, leaving…",216,[[["vec",3]]]],[11,"drain","","Creates a draining iterator that removes the specified…",216,[[],["drain",3]]],[11,"clear","","Clears the vector, removing all values.",216,[[]]],[11,"len","","Returns the number of elements in the vector, also…",216,[[]]],[11,"is_empty","","Returns `true` if the vector contains no elements.",216,[[]]],[11,"split_off","","Splits the collection into two at the given index.",216,[[],["vec",3]]],[11,"resize_with","","Resizes the `Vec` in-place so that `len` is equal to…",216,[[]]],[11,"leak","","Consumes and leaks the `Vec`, returning a mutable…",216,[[]]],[11,"spare_capacity_mut","","Returns the remaining spare capacity of the vector as a…",216,[[]]],[11,"resize","","Resizes the `Vec` in-place so that `len` is equal to…",216,[[]]],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",216,[[]]],[11,"dedup","","Removes consecutive repeated elements in the vector…",216,[[]]],[11,"remove_item","","Removes the first instance of `item` from the vector if…",216,[[],["option",4]]],[11,"splice","","Creates a splicing iterator that replaces the specified…",216,[[],["splice",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if…",216,[[],["drainfilter",3]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",217,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",217,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",218,[[]]]],"p":[[4,"Architecture"],[4,"BinaryFormat"],[4,"CallingConvention"],[4,"Endianness"],[4,"OperatingSystem"],[13,"MacOSX"],[4,"PointerWidth"],[3,"Triple"],[3,"Features"],[3,"FunctionAddressMap"],[3,"InstructionAddressMap"],[3,"MiddlewareError"],[3,"Compilation"],[3,"CompiledFunction"],[3,"CompiledFunctionFrameInfo"],[3,"Dwarf"],[3,"FunctionBody"],[3,"JumpTable"],[3,"CompileModuleInfo"],[3,"Relocation"],[3,"CustomSection"],[3,"SectionBody"],[3,"SectionIndex"],[3,"SourceLoc"],[3,"Target"],[3,"FunctionBodyData"],[3,"MiddlewareBinaryReader"],[3,"MiddlewareReaderState"],[3,"ModuleEnvironment"],[3,"ModuleInfoTranslation"],[3,"ModuleTranslationState"],[3,"TrapInformation"],[4,"Symbol"],[4,"CompileError"],[4,"ParseCpuFeatureError"],[4,"WasmError"],[13,"InvalidWebAssembly"],[4,"RelocationKind"],[4,"RelocationTarget"],[4,"CustomSectionProtection"],[4,"CpuFeature"],[4,"CompiledFunctionUnwindInfo"],[8,"ToOwned"],[4,"Cow"],[8,"Borrow"],[8,"BorrowMut"],[3,"Box"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"IntoKeys"],[3,"IntoValues"],[3,"RawEntryBuilderMut"],[4,"RawEntryMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[4,"Bound"],[3,"BinaryHeap"],[3,"PeekMut"],[3,"Iter"],[3,"IntoIter"],[3,"IntoIterSorted"],[3,"Drain"],[3,"DrainSorted"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"BTreeMap"],[3,"Iter"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoKeys"],[3,"IntoValues"],[3,"Range"],[3,"RangeMut"],[3,"DrainFilter"],[3,"IterMut"],[3,"Iter"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"DrainFilter"],[3,"BTreeSet"],[3,"IntoIter"],[3,"Range"],[3,"LinkedList"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Cursor"],[3,"CursorMut"],[3,"DrainFilter"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"TryReserveError"],[13,"AllocError"],[4,"Alignment"],[3,"Arguments"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Formatter"],[8,"Write"],[8,"LowerExp"],[8,"UpperExp"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"Pattern"],[4,"SearchStep"],[8,"Searcher"],[8,"ReverseSearcher"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"EncodeUtf16"],[3,"SplitAsciiWhitespace"],[3,"SplitWhitespace"],[3,"Bytes"],[3,"CharIndices"],[3,"Chars"],[3,"ParseBoolError"],[3,"EscapeDebug"],[3,"EscapeDefault"],[3,"EscapeUnicode"],[8,"FromStr"],[3,"Utf8Error"],[3,"Lines"],[3,"LinesAny"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"RSplit"],[3,"Split"],[3,"RSplitN"],[3,"SplitN"],[3,"RSplitTerminator"],[3,"SplitTerminator"],[3,"String"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"ToString"],[3,"Drain"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Sender"],[3,"SyncSender"],[3,"SendError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Arc"],[3,"Weak"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"WaitTimeoutResult"],[3,"Mutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"PoisonError"],[4,"TryLockError"],[3,"Vec"],[3,"IntoIter"],[3,"Drain"],[3,"Splice"],[3,"DrainFilter"],[8,"CompilerConfig"],[8,"Compiler"],[8,"SymbolRegistry"],[3,"Iter"],[8,"ModuleMiddleware"],[8,"FunctionMiddleware"],[8,"ModuleMiddlewareChain"],[3,"Error"],[3,"RecvError"]],"a":{"{:?}":[494],"{}":[497]}},\
"wasmer_compiler_cranelift":{"doc":"A WebAssembly `Compiler` implementation using Cranelift.","i":[[3,"CraneliftCompiler","wasmer_compiler_cranelift","A compiler that compiles a WebAssembly module with…",null,null],[12,"config","","",0,null],[3,"Cranelift","","Global configuration options used to create an…",null,null],[12,"enable_nan_canonicalization","","",1,null],[12,"enable_verifier","","",1,null],[12,"enable_simd","","",1,null],[12,"enable_pic","","",1,null],[12,"opt_level","","",1,null],[12,"middlewares","","The middleware chain.",1,null],[3,"ModuleInfoVmctxInfo","","ModuleInfo `vmctx` related info.",null,null],[12,"memory_offset","","The memory definition offset in the VMContext structure.",2,null],[12,"stack_slots","","The functions stack slots.",2,null],[4,"CraneliftOptLevel","","Possible optimization levels for the Cranelift codegen…",null,null],[13,"None","","No optimizations performed, minimizes compilation time by…",3,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",3,null],[13,"SpeedAndSize","","Similar to `speed`, but also performs transformations…",3,null],[4,"ModuleInfoMemoryOffset","","Memory definition offset in the VMContext structure.",null,null],[13,"None","","Not available.",4,null],[13,"Defined","","Offset to the defined memory.",4,null],[13,"Imported","","Offset to the imported memory.",4,null],[5,"make_trampoline_function_call","","Create a trampoline for invoking a WebAssembly function.",null,[[["functionbuildercontext",3],["targetisa",8],["functiontype",3]],[["result",4],["functionbody",3],["compileerror",4]]]],[0,"address_map","","",null,null],[5,"get_function_address_map","wasmer_compiler_cranelift::address_map","",null,[[["targetisa",8],["context",3],["functionbodydata",3]],["functionaddressmap",3]]],[0,"compiler","wasmer_compiler_cranelift","Support for compiling with Cranelift.",null,null],[3,"CraneliftCompiler","wasmer_compiler_cranelift::compiler","A compiler that compiles a WebAssembly module with…",null,null],[12,"config","","",0,null],[11,"new","wasmer_compiler_cranelift","Creates a new Cranelift compiler",0,[[["cranelift",3]]]],[11,"config","","Gets the WebAssembly features for this Compiler",0,[[],["cranelift",3]]],[0,"config","","",null,null],[3,"Cranelift","wasmer_compiler_cranelift::config","Global configuration options used to create an…",null,null],[12,"enable_nan_canonicalization","","",1,null],[12,"enable_verifier","","",1,null],[12,"enable_simd","","",1,null],[12,"enable_pic","","",1,null],[12,"opt_level","","",1,null],[12,"middlewares","","The middleware chain.",1,null],[4,"CraneliftOptLevel","","Possible optimization levels for the Cranelift codegen…",null,null],[13,"None","","No optimizations performed, minimizes compilation time by…",3,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",3,null],[13,"SpeedAndSize","","Similar to `speed`, but also performs transformations…",3,null],[11,"new","wasmer_compiler_cranelift","Creates a new configuration object with the default…",1,[[]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",1,[[]]],[11,"enable_simd","","Enable SIMD support.",1,[[]]],[11,"opt_level","","The optimization levels when optimizing the IR.",1,[[["craneliftoptlevel",4]]]],[11,"isa","","Generates the ISA for the provided target",1,[[["target",3]],[["targetisa",8],["box",3]]]],[11,"flags","","Generates the flags for the compiler",1,[[],["flags",3]]],[0,"debug","","",null,null],[0,"address_map","wasmer_compiler_cranelift::debug","Data structures to provide transformation of the source",null,null],[3,"ModuleInfoVmctxInfo","wasmer_compiler_cranelift::debug::address_map","ModuleInfo `vmctx` related info.",null,null],[12,"memory_offset","","The memory definition offset in the VMContext structure.",2,null],[12,"stack_slots","","The functions stack slots.",2,null],[4,"ModuleInfoMemoryOffset","","Memory definition offset in the VMContext structure.",null,null],[13,"None","","Not available.",4,null],[13,"Defined","","Offset to the defined memory.",4,null],[13,"Imported","","Offset to the imported memory.",4,null],[6,"ValueLabelsRanges","","Value ranges for functions.",null,null],[6,"StackSlots","","Stack slots for functions.",null,null],[0,"dwarf","wasmer_compiler_cranelift","",null,null],[3,"WriterRelocate","wasmer_compiler_cranelift::dwarf","",null,null],[12,"relocs","","",5,null],[12,"writer","","",5,null],[18,"FUNCTION_SYMBOL","","",5,null],[11,"new","","",5,[[["option",4],["endianness",4]]]],[11,"into_section","","",5,[[],["customsection",3]]],[0,"func_environ","wasmer_compiler_cranelift","",null,null],[3,"FuncEnvironment","wasmer_compiler_cranelift::func_environ","The `FuncEnvironment` implementation for use by the…",null,null],[12,"target_config","","Target-specified configuration.",6,null],[12,"module","","The module-level environment which this function-level…",6,null],[12,"signatures","","The module function signatures",6,null],[12,"vmctx","","The Cranelift global holding the vmctx address.",6,null],[12,"memory32_size_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"memory_grow_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"table_copy_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"table_init_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"elem_drop_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"memory_copy_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"memory_fill_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"memory_init_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"data_drop_sig","","The external function signature for implementing wasm\'s…",6,null],[12,"offsets","","Offsets to struct fields accessed by JIT code.",6,null],[12,"memory_styles","","The memory styles",6,null],[12,"table_styles","","The table styles",6,null],[5,"get_function_name","","Compute an `ir::ExternalName` for a given wasm function…",null,[[["functionindex",3]],["externalname",4]]],[5,"type_of_vmmemory_definition_current_length","","The type of the `current_length` field.",null,[[["vmoffsets",3]],["type",3]]],[5,"type_of_vmtable_definition_current_elements","","The type of the `current_elements` field.",null,[[["vmoffsets",3]],["type",3]]],[11,"new","","",6,[[["primarymap",3],["moduleinfo",3],["targetfrontendconfig",3],["primarymap",3],["primarymap",3]]]],[11,"pointer_type","","",6,[[],["type",3]]],[11,"vmctx","","",6,[[["function",3]],["globalvalue",3]]],[11,"get_memory_grow_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_grow_func","","Return the memory.grow function signature to call for the…",6,[[["memoryindex",3],["function",3]]]],[11,"get_memory32_size_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_size_func","","Return the memory.size function signature to call for the…",6,[[["memoryindex",3],["function",3]]]],[11,"get_table_copy_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_copy_func","","",6,[[["tableindex",3],["function",3]]]],[11,"get_table_init_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_init_func","","",6,[[["tableindex",3],["function",3]]]],[11,"get_elem_drop_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_elem_drop_func","","",6,[[["function",3]]]],[11,"get_memory_copy_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_copy_func","","",6,[[["memoryindex",3],["function",3]]]],[11,"get_memory_fill_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_fill_func","","",6,[[["memoryindex",3],["function",3]]]],[11,"get_memory_init_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_init_func","","",6,[[["function",3]]]],[11,"get_data_drop_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_data_drop_func","","",6,[[["function",3]]]],[11,"translate_load_builtin_function_address","","Translates load of builtin function and returns a pair of…",6,[[["funccursor",3],["vmbuiltinfunctionindex",3]]]],[0,"sink","wasmer_compiler_cranelift","Support for compiling with Cranelift.",null,null],[3,"RelocSink","wasmer_compiler_cranelift::sink","Implementation of a relocation sink that just saves all…",null,null],[12,"module","","",7,null],[12,"local_func_index","","Current function index.",7,null],[12,"func_relocs","","Relocations recorded for the function.",7,null],[3,"TrapSink","","",null,null],[12,"traps","","",8,null],[5,"translate_ir_trapcode","","Translates the Cranelift IR TrapCode into generic Trap Code",null,[[["trapcode",4]],["trapcode",4]]],[11,"new","","Return a new `RelocSink` instance.",7,[[["moduleinfo",3],["functionindex",3]]]],[11,"new","","",8,[[]]],[0,"trampoline","wasmer_compiler_cranelift","",null,null],[5,"pretty_error","wasmer_compiler_cranelift::trampoline","Pretty-print a Cranelift error.",null,[[["function",3],["codegenerror",4],["option",4],["targetisa",8]],["string",3]]],[3,"Context","","Persistent data structures and compilation pipeline.",null,null],[12,"func","","The function we\'re compiling.",9,null],[12,"cfg","","The control flow graph of `func`.",9,null],[12,"domtree","","Dominator tree for `func`.",9,null],[12,"regalloc","","Register allocation context.",9,null],[12,"loop_analysis","","Loop analysis of `func`.",9,null],[12,"redundant_reload_remover","","Redundant-reload remover context.",9,null],[12,"mach_compile_result","","Result of MachBackend compilation, if computed.",9,null],[12,"want_disasm","","Flag: do we want a disassembly with the MachCompileResult?",9,null],[3,"FunctionBuilder","","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",10,null],[12,"srcloc","","Source location to assign to all new instructions.",10,null],[12,"func_ctx","","",10,null],[12,"position","","",10,null],[3,"FunctionBuilderContext","","Structure used for translating a series of functions into…",null,null],[12,"ssa","","",11,null],[12,"blocks","","",11,null],[12,"types","","",11,null],[0,"dynamic_function","","A trampoline generator for calling dynamic host functions…",null,null],[5,"make_trampoline_dynamic_function","wasmer_compiler_cranelift::trampoline::dynamic_function","Create a trampoline for invoking a WebAssembly function.",null,[[["functionbuildercontext",3],["targetisa",8],["vmoffsets",3],["functiontype",3]],[["result",4],["functionbody",3],["compileerror",4]]]],[0,"function_call","wasmer_compiler_cranelift::trampoline","A trampoline generator for calling Wasm functions easily.",null,null],[5,"make_trampoline_function_call","wasmer_compiler_cranelift::trampoline::function_call","Create a trampoline for invoking a WebAssembly function.",null,[[["functionbuildercontext",3],["targetisa",8],["functiontype",3]],[["result",4],["functionbody",3],["compileerror",4]]]],[0,"binemit","wasmer_compiler_cranelift::trampoline","",null,null],[3,"NullTrapSink","wasmer_compiler_cranelift::trampoline::binemit","A `TrapSink` implementation that does nothing, which is…",null,null],[6,"CodeOffset","","Offset in bytes from the beginning of the function.",null,null],[3,"NullStackMapSink","","Placeholder StackMapSink that does nothing.",null,null],[8,"TrapSink","","A trait for receiving trap codes and offsets.",null,null],[10,"trap","","Add trap information for a specific offset.",12,[[["sourceloc",3],["trapcode",4]]]],[3,"TrampolineRelocSink","","We don\'t expect trampoline compilation to produce any…",null,null],[0,"translator","wasmer_compiler_cranelift","Tools for translating wasm function bytecode to Cranelift…",null,null],[0,"code_translator","wasmer_compiler_cranelift::translator","This module contains the bulk of the interesting code…",null,null],[5,"translate_operator","wasmer_compiler_cranelift::translator::code_translator","Translates wasm operators into Cranelift IR instructions.…",null,[[["operator",4],["functionbuilder",3],["functranslationstate",3],["moduletranslationstate",3]],["wasmresult",6]]],[5,"translate_unreachable_operator","","Deals with a Wasm instruction located in an unreachable…",null,[[["operator",4],["functionbuilder",3],["functranslationstate",3],["moduletranslationstate",3]],["wasmresult",6]]],[5,"get_heap_addr","","Get the address+offset to use for a heap access.",null,[[["type",3],["heap",3],["functionbuilder",3],["value",3]]]],[5,"prepare_load","","Prepare for a load; factors out common functionality…",null,[[["functionbuilder",3],["memoryimmediate",3],["functranslationstate",3]],["wasmresult",6]]],[5,"translate_load","","Translate a load instruction.",null,[[["type",3],["functionbuilder",3],["functranslationstate",3],["memoryimmediate",3],["opcode",4]],["wasmresult",6]]],[5,"translate_store","","Translate a store instruction.",null,[[["functionbuilder",3],["functranslationstate",3],["memoryimmediate",3],["opcode",4]],["wasmresult",6]]],[5,"mem_op_size","","",null,[[["type",3],["opcode",4]]]],[5,"translate_icmp","","",null,[[["intcc",4],["functionbuilder",3],["functranslationstate",3]]]],[5,"finalise_atomic_mem_addr","","",null,[[["type",3],["functionbuilder",3],["functranslationstate",3],["value",3],["memoryimmediate",3]],[["wasmresult",6],["value",3]]]],[5,"translate_atomic_rmw","","",null,[[["atomicrmwop",4],["type",3],["functionbuilder",3],["functranslationstate",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_atomic_cas","","",null,[[["type",3],["functionbuilder",3],["functranslationstate",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_atomic_load","","",null,[[["type",3],["functionbuilder",3],["functranslationstate",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_atomic_store","","",null,[[["type",3],["functionbuilder",3],["functranslationstate",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_vector_icmp","","",null,[[["intcc",4],["type",3],["functionbuilder",3],["functranslationstate",3]]]],[5,"translate_fcmp","","",null,[[["floatcc",4],["functionbuilder",3],["functranslationstate",3]]]],[5,"translate_vector_fcmp","","",null,[[["floatcc",4],["type",3],["functionbuilder",3],["functranslationstate",3]]]],[5,"translate_br_if","","",null,[[["functionbuilder",3],["functranslationstate",3]]]],[5,"translate_br_if_args","","",null,[[["functranslationstate",3]]]],[5,"type_of","","Determine the returned value type of a WebAssembly operator",null,[[["operator",4]],["type",3]]],[5,"optionally_bitcast_vector","","Some SIMD operations only operate on I8X16 in CLIF; this…",null,[[["value",3],["type",3],["functionbuilder",3]],["value",3]]],[5,"is_non_canonical_v128","","",null,[[["type",3]]]],[5,"canonicalise_v128_values","","Cast to I8X16, any vector values in `values` that are of…",null,[[["functionbuilder",3],["smallvec",3]]]],[5,"canonicalise_then_jump","","Generate a `jump` instruction, but first cast all 128-bit…",null,[[["functionbuilder",3],["block",3]],["inst",3]]],[5,"canonicalise_then_brz","","The same but for a `brz` instruction.",null,[[["functionbuilder",3],["value",3],["block",3]],["inst",3]]],[5,"canonicalise_then_brnz","","The same but for a `brnz` instruction.",null,[[["functionbuilder",3],["value",3],["block",3]],["inst",3]]],[5,"pop1_with_bitcast","","A helper for popping and bitcasting a single value; since…",null,[[["functranslationstate",3],["type",3],["functionbuilder",3]],["value",3]]],[5,"pop2_with_bitcast","","A helper for popping and bitcasting two values; since SIMD…",null,[[["functranslationstate",3],["type",3],["functionbuilder",3]]]],[5,"bitcast_arguments","","A helper for bitcasting a sequence of values (e.g.…",null,[[["functionbuilder",3]]]],[5,"wasm_param_types","","A helper to extract all the `Type` listings of each…",null,[[],[["type",3],["vec",3]]]],[0,"func_environ","wasmer_compiler_cranelift::translator","All the runtime support necessary for the wasm to…",null,null],[4,"GlobalVariable","wasmer_compiler_cranelift::translator::func_environ","The value of a WebAssembly global variable.",null,null],[13,"Const","","This is a constant global with a value known at compile…",13,null],[13,"Memory","","This is a variable in memory that should be referenced…",13,null],[12,"gv","wasmer_compiler_cranelift::translator::func_environ::GlobalVariable","The address of the global variable storage.",14,null],[12,"offset","","An offset to add to the address.",14,null],[12,"ty","","The global variable\'s type.",14,null],[13,"Custom","wasmer_compiler_cranelift::translator::func_environ","This is a global variable that needs to be handled by the…",13,null],[4,"ReturnMode","","How to return from functions.",null,null],[13,"NormalReturns","","Use normal return instructions as needed.",15,null],[13,"FallthroughReturn","","Use a single fallthrough return at the end of the function.",15,null],[8,"TargetEnvironment","","Environment affecting the translation of a WebAssembly.",null,null],[10,"target_config","","Get the information needed to produce Cranelift IR for the…",16,[[],["targetfrontendconfig",3]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",16,[[],["type",3]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",16,[[]]],[11,"reference_type","","Get the Cranelift reference type to use for native…",16,[[],["type",3]]],[8,"FuncEnvironment","","Environment affecting the translation of a single…",null,null],[11,"is_wasm_parameter","","Is the given parameter of the given function a wasm-level…",17,[[["signature",3]]]],[11,"is_wasm_return","","Is the given return of the given function a wasm-level…",17,[[["signature",3]]]],[11,"return_mode","","Should the code be structured to use a single…",17,[[],["returnmode",4]]],[10,"make_global","","Set up the necessary preamble definitions in `func` to…",17,[[["globalindex",3],["function",3]],[["wasmresult",6],["globalvariable",4]]]],[10,"make_heap","","Set up the necessary preamble definitions in `func` to…",17,[[["memoryindex",3],["function",3]],[["wasmresult",6],["heap",3]]]],[10,"make_table","","Set up the necessary preamble definitions in `func` to…",17,[[["tableindex",3],["function",3]],[["wasmresult",6],["table",3]]]],[10,"make_indirect_sig","","Set up a signature definition in the preamble of `func`…",17,[[["signatureindex",3],["function",3]],[["sigref",3],["wasmresult",6]]]],[10,"make_direct_func","","Set up an external function definition in the preamble of…",17,[[["functionindex",3],["function",3]],[["wasmresult",6],["funcref",3]]]],[10,"translate_call_indirect","","Translate a `call_indirect` WebAssembly instruction at…",17,[[["table",3],["tableindex",3],["signatureindex",3],["sigref",3],["value",3],["funccursor",3]],[["inst",3],["wasmresult",6]]]],[11,"translate_call","","Translate a `call` WebAssembly instruction at `pos`.",17,[[["funcref",3],["functionindex",3],["funccursor",3]],[["inst",3],["wasmresult",6]]]],[10,"translate_memory_grow","","Translate a `memory.grow` WebAssembly instruction.",17,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_memory_size","","Translates a `memory.size` WebAssembly instruction.",17,[[["memoryindex",3],["heap",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_memory_copy","","Translate a `memory.copy` WebAssembly instruction.",17,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_memory_fill","","Translate a `memory.fill` WebAssembly instruction.",17,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_memory_init","","Translate a `memory.init` WebAssembly instruction.",17,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_data_drop","","Translate a `data.drop` WebAssembly instruction.",17,[[["funccursor",3]],["wasmresult",6]]],[10,"translate_table_size","","Translate a `table.size` WebAssembly instruction.",17,[[["table",3],["tableindex",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_grow","","Translate a `table.grow` WebAssembly instruction.",17,[[["table",3],["tableindex",3],["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_get","","Translate a `table.get` WebAssembly instruction.",17,[[["table",3],["functionbuilder",3],["tableindex",3],["value",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_set","","Translate a `table.set` WebAssembly instruction.",17,[[["table",3],["functionbuilder",3],["tableindex",3],["value",3]],["wasmresult",6]]],[10,"translate_table_copy","","Translate a `table.copy` WebAssembly instruction.",17,[[["table",3],["tableindex",3],["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_table_fill","","Translate a `table.fill` WebAssembly instruction.",17,[[["tableindex",3],["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_table_init","","Translate a `table.init` WebAssembly instruction.",17,[[["table",3],["tableindex",3],["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_elem_drop","","Translate a `elem.drop` WebAssembly instruction.",17,[[["funccursor",3]],["wasmresult",6]]],[10,"translate_ref_null","","Translate a `ref.null T` WebAssembly instruction.",17,[[["type",4],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_is_null","","Translate a `ref.is_null` WebAssembly instruction.",17,[[["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_ref_func","","Translate a `ref.func` WebAssembly instruction.",17,[[["functionindex",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_custom_global_get","","Translate a `global.get` WebAssembly instruction at `pos`…",17,[[["globalindex",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_custom_global_set","","Translate a `global.set` WebAssembly instruction at `pos`…",17,[[["value",3],["globalindex",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_atomic_wait","","Translate an `i32.atomic.wait` or `i64.atomic.wait`…",17,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[10,"translate_atomic_notify","","Translate an `atomic.notify` WebAssembly instruction. The…",17,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",17,[[["funccursor",3]],["wasmresult",6]]],[11,"before_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",17,[[["operator",4],["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[11,"after_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",17,[[["operator",4],["functionbuilder",3],["functranslationstate",3]],["wasmresult",6]]],[0,"func_state","wasmer_compiler_cranelift::translator","WebAssembly module and function translation state.",null,null],[3,"FuncTranslationState","wasmer_compiler_cranelift::translator::func_state","Contains information passed along during a function\'s…",null,null],[12,"stack","","A stack of values corresponding to the active values in…",18,null],[12,"control_stack","","A stack of active control flow operations at this point in…",18,null],[12,"reachable","","Is the current translation state still reachable? This is…",18,null],[12,"globals","","",18,null],[12,"heaps","","",18,null],[12,"tables","","",18,null],[12,"signatures","","",18,null],[12,"functions","","",18,null],[4,"ElseData","","Information about the presence of an associated `else` for…",null,null],[13,"NoElse","","The `if` does not already have an `else` block.",19,null],[12,"branch_inst","wasmer_compiler_cranelift::translator::func_state::ElseData","If we discover that we need an `else` block, this is the…",20,null],[13,"WithElse","wasmer_compiler_cranelift::translator::func_state","We have already allocated an `else` block.",19,null],[12,"else_block","wasmer_compiler_cranelift::translator::func_state::ElseData","This is the `else` block.",21,null],[4,"ControlStackFrame","wasmer_compiler_cranelift::translator::func_state","A control stack frame can be an `if`, a `block` or a…",null,null],[13,"If","","",22,null],[12,"destination","wasmer_compiler_cranelift::translator::func_state::ControlStackFrame","",23,null],[12,"else_data","","",23,null],[12,"num_param_values","","",23,null],[12,"num_return_values","","",23,null],[12,"original_stack_size","","",23,null],[12,"exit_is_branched_to","","",23,null],[12,"blocktype","","",23,null],[12,"head_is_reachable","","Was the head of the `if` reachable?",23,null],[12,"consequent_ends_reachable","","What was the reachability at the end of the consequent?",23,null],[13,"Block","wasmer_compiler_cranelift::translator::func_state","",22,null],[12,"destination","wasmer_compiler_cranelift::translator::func_state::ControlStackFrame","",24,null],[12,"num_param_values","","",24,null],[12,"num_return_values","","",24,null],[12,"original_stack_size","","",24,null],[12,"exit_is_branched_to","","",24,null],[13,"Loop","wasmer_compiler_cranelift::translator::func_state","",22,null],[12,"destination","wasmer_compiler_cranelift::translator::func_state::ControlStackFrame","",25,null],[12,"header","","",25,null],[12,"num_param_values","","",25,null],[12,"num_return_values","","",25,null],[12,"original_stack_size","","",25,null],[5,"num_wasm_parameters","wasmer_compiler_cranelift::translator::func_state","",null,[[["signature",3]]]],[11,"num_return_values","","",22,[[]]],[11,"num_param_values","","",22,[[]]],[11,"following_code","","",22,[[],["block",3]]],[11,"br_destination","","",22,[[],["block",3]]],[11,"original_stack_size","","Private helper. Use…",22,[[]]],[11,"is_loop","","",22,[[]]],[11,"exit_is_branched_to","","",22,[[]]],[11,"set_branched_to_exit","","",22,[[]]],[11,"truncate_value_stack_to_else_params","","Pop values from the value stack so that it is left at the…",22,[[["vec",3]]]],[11,"truncate_value_stack_to_original_size","","Pop values from the value stack so that it is left at the…",22,[[["vec",3]]]],[11,"reachable","","True if the current translation state expresses reachable…",18,[[]]],[11,"new","","Construct a new, empty, `FuncTranslationState`",18,[[]]],[11,"clear","","",18,[[]]],[11,"initialize","","Initialize the state for compiling a function with the…",18,[[["block",3],["signature",3]]]],[11,"push1","","Push a value.",18,[[["value",3]]]],[11,"pushn","","Push multiple values.",18,[[]]],[11,"pop1","","Pop one value.",18,[[],["value",3]]],[11,"peek1","","Peek at the top of the stack without popping it.",18,[[],["value",3]]],[11,"pop2","","Pop two values. Return them in the order they were pushed.",18,[[]]],[11,"pop3","","Pop three values. Return them in the order they were pushed.",18,[[]]],[11,"ensure_length_is_at_least","","Helper to ensure the the stack size is at least as big as…",18,[[]]],[11,"popn","","Pop the top `n` values on the stack.",18,[[]]],[11,"peekn","","Peek at the top `n` values on the stack in the order they…",18,[[]]],[11,"peekn_mut","","Peek at the top `n` values on the stack in the order they…",18,[[]]],[11,"push_block","","Push a block on the control stack.",18,[[["block",3]]]],[11,"push_loop","","Push a loop on the control stack.",18,[[["block",3]]]],[11,"push_if","","Push an if on the control stack.",18,[[["block",3],["typeorfunctype",4],["elsedata",4]]]],[11,"get_global","","Get the `GlobalVariable` reference that should be used to…",18,[[["function",3]],[["wasmresult",6],["globalvariable",4]]]],[11,"get_heap","","Get the `Heap` reference that should be used to access…",18,[[["function",3]],[["wasmresult",6],["heap",3]]]],[11,"get_or_create_table","","Get the `Table` reference that should be used to access…",18,[[["function",3]],[["wasmresult",6],["table",3]]]],[11,"get_indirect_sig","","Get the `SigRef` reference that should be used to make an…",18,[[["function",3]],["wasmresult",6]]],[11,"get_direct_func","","Get the `FuncRef` reference that should be used to make a…",18,[[["function",3]],["wasmresult",6]]],[0,"func_translator","wasmer_compiler_cranelift::translator","Standalone WebAssembly to Cranelift IR translator.",null,null],[3,"FuncTranslator","wasmer_compiler_cranelift::translator::func_translator","WebAssembly to Cranelift IR function translator.",null,null],[12,"func_ctx","","",26,null],[12,"state","","",26,null],[5,"declare_wasm_parameters","","Declare local variables for the signature parameters that…",null,[[["block",3],["functionbuilder",3]]]],[5,"parse_local_decls","","Parse the local variable declarations that precede the…",null,[[["functionbuilder",3],["middlewarebinaryreader",3]],["wasmresult",6]]],[5,"declare_locals","","Declare `count` local variables of the same type, starting…",null,[[["functionbuilder",3],["type",4]],["wasmresult",6]]],[5,"parse_function_body","","Parse the function body in `reader`.",null,[[["middlewarebinaryreader",3],["functionbuilder",3],["functranslationstate",3],["moduletranslationstate",3]],["wasmresult",6]]],[5,"cur_srcloc","","Get the current source location from a reader.",null,[[["middlewarebinaryreader",3]],["sourceloc",3]]],[11,"new","","Create a new translator.",26,[[]]],[11,"translate","","Translate a binary WebAssembly function.",26,[[["localfunctionindex",3],["cranelift",3],["function",3],["moduletranslationstate",3]],["wasmresult",6]]],[11,"translate_from_reader","","Translate a binary WebAssembly function from a…",26,[[["middlewarebinaryreader",3],["moduletranslationstate",3],["function",3]],["wasmresult",6]]],[0,"translation_utils","wasmer_compiler_cranelift::translator","Helper functions and structures for the translation.",null,null],[5,"signature_to_cranelift_ir","wasmer_compiler_cranelift::translator::translation_utils","Helper function translate a Function signature into…",null,[[["functiontype",3],["targetfrontendconfig",3]],["signature",3]]],[5,"reference_type","","Helper function translating wasmparser types to Cranelift…",null,[[["targetfrontendconfig",3]],[["wasmresult",6],["type",3]]]],[5,"type_to_irtype","","Helper function translating wasmparser types to Cranelift…",null,[[["type",4],["targetfrontendconfig",3]],[["wasmresult",6],["type",3]]]],[5,"irlibcall_to_libcall","","Transform Cranelift LibCall into runtime LibCall",null,[[["libcall",4]],["libcall",4]]],[5,"irreloc_to_relocationkind","","Transform Cranelift Reloc to compiler Relocation",null,[[["reloc",4]],["relocationkind",4]]],[5,"block_with_params","","Create a `Block` with the given Wasm parameters.",null,[[["functionbuilder",3]],[["block",3],["wasmresult",6]]]],[5,"f32_translation","","Turns a `wasmparser` `f32` into a `Cranelift` one.",null,[[["ieee32",3]],["ieee32",3]]],[5,"f64_translation","","Turns a `wasmparser` `f64` into a `Cranelift` one.",null,[[["ieee64",3]],["ieee64",3]]],[5,"get_vmctx_value_label","","Special VMContext value label. It is tracked as…",null,[[],["valuelabel",3]]],[5,"transform_jump_table","","Transforms Cranelift JumpTable\'s into runtime JumpTables",null,[[["jumptable",3],["craneliftsecondarymap",3]],[["jumptable",3],["secondarymap",3]]]],[0,"unwind","wasmer_compiler_cranelift::translator","A `Compilation` contains the compiled function bodies for…",null,null],[4,"CraneliftUnwindInfo","wasmer_compiler_cranelift::translator::unwind","Cranelift specific unwind info",null,null],[13,"WindowsX64","","Windows Unwind info",27,null],[13,"FDE","","Dwarf FDE",27,null],[13,"None","","No Unwind info attached",27,null],[5,"compiled_function_unwind_info","","Constructs unwind info object from Cranelift IR",null,[[["context",3],["targetisa",8]],[["craneliftunwindinfo",4],["compileerror",4],["result",4]]]],[11,"maybe_into_to_windows_unwind","","Transform the `CraneliftUnwindInfo` to the Windows format.",27,[[],[["option",4],["compiledfunctionunwindinfo",4]]]],[6,"ValueLabelsRanges","wasmer_compiler_cranelift","Value ranges for functions.",null,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","wasmer_compiler_cranelift::dwarf","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","wasmer_compiler_cranelift::func_environ","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","wasmer_compiler_cranelift::sink","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","wasmer_compiler_cranelift::trampoline","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","wasmer_compiler_cranelift::trampoline::binemit","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","wasmer_compiler_cranelift::translator::func_environ","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","wasmer_compiler_cranelift::translator::func_state","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","wasmer_compiler_cranelift::translator::func_translator","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","wasmer_compiler_cranelift::translator::unwind","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"trap","wasmer_compiler_cranelift::trampoline::binemit","",28,[[["sourceloc",3],["trapcode",4]]]],[11,"add_stack_map","","",29,[[["stackmap",3]]]],[11,"default","","",28,[[],["nulltrapsink",3]]],[11,"target_config","wasmer_compiler_cranelift::func_environ","",6,[[],["targetfrontendconfig",3]]],[11,"is_wasm_parameter","","",6,[[["signature",3]]]],[11,"make_table","","",6,[[["tableindex",3],["function",3]],[["wasmresult",6],["table",3]]]],[11,"translate_table_grow","","",6,[[["funccursor",3],["table",3],["tableindex",3],["value",3]],[["wasmresult",6],["value",3]]]],[11,"translate_table_get","","",6,[[["table",3],["functionbuilder",3],["tableindex",3],["value",3]],[["wasmresult",6],["value",3]]]],[11,"translate_table_set","","",6,[[["table",3],["functionbuilder",3],["tableindex",3],["value",3]],["wasmresult",6]]],[11,"translate_table_fill","","",6,[[["funccursor",3],["tableindex",3],["value",3]],["wasmresult",6]]],[11,"translate_ref_null","","",6,[[["funccursor",3],["type",4]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_is_null","","",6,[[["funccursor",3],["value",3]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_func","","",6,[[["funccursor",3],["functionindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_custom_global_get","","",6,[[["funccursor",3],["globalindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_custom_global_set","","",6,[[["funccursor",3],["value",3],["globalindex",3]],["wasmresult",6]]],[11,"make_heap","","",6,[[["memoryindex",3],["function",3]],[["wasmresult",6],["heap",3]]]],[11,"make_global","","",6,[[["globalindex",3],["function",3]],[["wasmresult",6],["globalvariable",4]]]],[11,"make_indirect_sig","","",6,[[["signatureindex",3],["function",3]],[["sigref",3],["wasmresult",6]]]],[11,"make_direct_func","","",6,[[["functionindex",3],["function",3]],[["wasmresult",6],["funcref",3]]]],[11,"translate_call_indirect","","",6,[[["table",3],["tableindex",3],["signatureindex",3],["sigref",3],["value",3],["funccursor",3]],[["inst",3],["wasmresult",6]]]],[11,"translate_call","","",6,[[["funcref",3],["functionindex",3],["funccursor",3]],[["inst",3],["wasmresult",6]]]],[11,"translate_memory_grow","","",6,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_memory_size","","",6,[[["memoryindex",3],["heap",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_memory_copy","","",6,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],["wasmresult",6]]],[11,"translate_memory_fill","","",6,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],["wasmresult",6]]],[11,"translate_memory_init","","",6,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],["wasmresult",6]]],[11,"translate_data_drop","","",6,[[["funccursor",3]],["wasmresult",6]]],[11,"translate_table_size","","",6,[[["table",3],["tableindex",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_table_copy","","",6,[[["table",3],["tableindex",3],["value",3],["funccursor",3]],["wasmresult",6]]],[11,"translate_table_init","","",6,[[["table",3],["tableindex",3],["value",3],["funccursor",3]],["wasmresult",6]]],[11,"translate_elem_drop","","",6,[[["funccursor",3]],["wasmresult",6]]],[11,"translate_atomic_wait","","",6,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_atomic_notify","","",6,[[["memoryindex",3],["heap",3],["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"clone","wasmer_compiler_cranelift","",3,[[],["craneliftoptlevel",4]]],[11,"clone","","",1,[[],["cranelift",3]]],[11,"clone","","",4,[[],["moduleinfomemoryoffset",4]]],[11,"clone","","",2,[[],["moduleinfovmctxinfo",3]]],[11,"clone","wasmer_compiler_cranelift::dwarf","",5,[[],["writerrelocate",3]]],[11,"clone","wasmer_compiler_cranelift::translator::func_environ","",13,[[],["globalvariable",4]]],[11,"clone","","",15,[[],["returnmode",4]]],[11,"default","wasmer_compiler_cranelift","",1,[[]]],[11,"eq","wasmer_compiler_cranelift::translator::func_environ","",15,[[["returnmode",4]]]],[11,"fmt","wasmer_compiler_cranelift","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_cranelift::dwarf","",5,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_cranelift::translator::func_environ","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_cranelift::translator::func_state","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"reloc_external","wasmer_compiler_cranelift::sink","",7,[[["sourceloc",3],["codeoffset",6],["addend",6],["externalname",4],["reloc",4]]]],[11,"reloc_constant","","",7,[[["reloc",4],["constantoffset",6],["codeoffset",6]]]],[11,"reloc_jt","","",7,[[["reloc",4],["jumptable",3],["codeoffset",6]]]],[11,"reloc_external","wasmer_compiler_cranelift::trampoline::binemit","",30,[[["sourceloc",3],["codeoffset",6],["externalname",4],["addend",6],["reloc",4]]]],[11,"reloc_constant","","",30,[[["reloc",4],["constantoffset",6],["codeoffset",6]]]],[11,"reloc_jt","","",30,[[["reloc",4],["jumptable",3],["codeoffset",6]]]],[11,"trap","wasmer_compiler_cranelift::sink","",8,[[["sourceloc",3],["trapcode",4],["codeoffset",6]]]],[11,"endian","wasmer_compiler_cranelift::dwarf","",5,[[]]],[11,"len","","",5,[[]]],[11,"write","","",5,[[],["result",6]]],[11,"write_at","","",5,[[],["result",6]]],[11,"write_address","","",5,[[["address",4]],["result",6]]],[11,"write_offset","","",5,[[["sectionid",4]],["result",6]]],[11,"write_offset_at","","",5,[[["sectionid",4]],["result",6]]],[11,"size_of_val","wasmer_compiler_cranelift","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]]]],[11,"enable_pic","","",1,[[]]],[11,"enable_verifier","","",1,[[]]],[11,"compiler","","Transform it into the compiler",1,[[["box",3]],[["box",3],["compiler",8]]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",1,[[["modulemiddleware",8],["arc",3]]]],[11,"compile_module","","Compile the module using Cranelift, producing a…",0,[[["compilemoduleinfo",3],["localfunctionindex",3],["target",3],["moduletranslationstate",3],["primarymap",3],["functionbodydata",3]],[["result",4],["compilation",3],["compileerror",4]]]],[11,"new","wasmer_compiler_cranelift::trampoline","Allocate a new compilation context.",9,[[],["context",3]]],[11,"for_function","","Allocate a new compilation context with an existing…",9,[[["function",3]],["context",3]]],[11,"clear","","Clear all data structures in this context.",9,[[]]],[11,"set_disasm","","Set the flag to request a disassembly when compiling with…",9,[[]]],[11,"compile_and_emit","","Compile the function, and emit machine code into a…",9,[[["trapsink",8],["vec",3],["relocsink",8],["stackmapsink",8],["targetisa",8]],[["codeinfo",3],["result",4],["codegenerror",4]]]],[11,"compile","","Compile the function.",9,[[["targetisa",8]],[["codeinfo",3],["result",4],["codegenerror",4]]]],[11,"emit_to_memory","","Emit machine code directly into raw memory.",9,[[["targetisa",8],["stackmapsink",8],["relocsink",8],["trapsink",8]],["codeinfo",3]]],[11,"create_unwind_info","","Creates unwind information for the function.",9,[[["targetisa",8]],[["codegenerror",4],["option",4],["result",4]]]],[11,"verify","","Run the verifier on the function.",9,[[],[["verifiererrors",3],["result",4]]]],[11,"verify_if","","Run the verifier only if the `enable_verifier` setting is…",9,[[],[["result",4],["codegenerror",4]]]],[11,"verify_locations","","Run the locations verifier on the function.",9,[[["targetisa",8]],[["verifiererrors",3],["result",4]]]],[11,"verify_locations_if","","Run the locations verifier only if the `enable_verifier`…",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"dce","","Perform dead-code elimination on the function.",9,[[],[["result",4],["codegenerror",4]]]],[11,"remove_constant_phis","","Perform constant-phi removal on the function.",9,[[],[["result",4],["codegenerror",4]]]],[11,"preopt","","Perform pre-legalization rewrites on the function.",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"canonicalize_nans","","Perform NaN canonicalizing rewrites on the function.",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"legalize","","Run the legalizer for `isa` on the function.",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"postopt","","Perform post-legalization rewrites on the function.",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"compute_cfg","","Compute the control flow graph.",9,[[]]],[11,"compute_domtree","","Compute dominator tree.",9,[[]]],[11,"compute_loop_analysis","","Compute the loop analysis.",9,[[]]],[11,"flowgraph","","Compute the control flow graph and dominator tree.",9,[[]]],[11,"simple_gvn","","Perform simple GVN on the function.",9,[[],[["result",4],["codegenerror",4]]]],[11,"licm","","Perform LICM on the function.",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"eliminate_unreachable_code","","Perform unreachable code elimination.",9,[[],[["result",4],["codegenerror",4]]]],[11,"regalloc","","Run the register allocator.",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"prologue_epilogue","","Insert prologue and epilogues after computing the stack…",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"redundant_reload_remover","","Do redundant-reload removal after allocation of both…",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"shrink_instructions","","Run the instruction shrinking pass.",9,[[["targetisa",8]],[["result",4],["codegenerror",4]]]],[11,"relax_branches","","Run the branch relaxation pass and return information…",9,[[["targetisa",8]],[["codeinfo",3],["result",4],["codegenerror",4]]]],[11,"build_value_labels_ranges","","Builds ranges and location for specified value labels.",9,[[["targetisa",8]],[["codegenerror",4],["hashmap",3],["result",4]]]],[11,"new","","Creates a new FunctionBuilder structure that will operate…",10,[[["function",3],["functionbuildercontext",3]],["functionbuilder",3]]],[11,"current_block","","Get the block that this builder is currently at.",10,[[],[["option",4],["block",3]]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",10,[[["sourceloc",3]]]],[11,"create_block","","Creates a new `Block` and returns its reference.",10,[[],["block",3]]],[11,"insert_block_after","","Insert `block` in the layout after the existing block…",10,[[["block",3]]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",10,[[["block",3]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",10,[[["block",3]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all unsealed blocks in the…",10,[[]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",10,[[["variable",3],["type",3]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",10,[[["variable",3]],["value",3]]],[11,"def_var","","Register a new definition of a user variable. The type of…",10,[[["variable",3],["value",3]]]],[11,"set_val_label","","Set label for Value",10,[[["valuelabel",3],["value",3]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",10,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",10,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",10,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",10,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",10,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",10,[[["heapdata",3]],["heap",3]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",10,[[],["funcinstbuilder",3]]],[11,"ensure_inserted_block","","Make sure that the current block is inserted in the layout.",10,[[]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",10,[[],["funccursor",3]]],[11,"append_block_params_for_function_params","","Append parameters to the given `Block` corresponding to…",10,[[["block",3]]]],[11,"append_block_params_for_function_returns","","Append parameters to the given `Block` corresponding to…",10,[[["block",3]]]],[11,"finalize","","Declare that translation of the current function is…",10,[[]]],[11,"block_params","","Retrieves all the parameters for a `Block` currently…",10,[[["block",3]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",10,[[["sigref",3]],[["option",4],["signature",3]]]],[11,"append_block_param","","Creates a parameter for a specific `Block` by appending it…",10,[[["type",3],["block",3]],["value",3]]],[11,"inst_results","","Returns the result values of an instruction.",10,[[["inst",3]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",10,[[["inst",3],["block",3]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Block` is…",10,[[]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",10,[[]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",10,[[]]],[11,"display","","Returns a displayable object for the function as it is.",10,[[],["displayfunction",3]]],[11,"call_memcpy","","Calls libc.memcpy",10,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memory_copy","","Optimised memcpy or memmove for small copies.",10,[[["targetfrontendconfig",3],["value",3]]]],[11,"call_memset","","Calls libc.memset",10,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memset","","Calls libc.memset",10,[[["targetfrontendconfig",3],["value",3]]]],[11,"call_memmove","","Calls libc.memmove",10,[[["targetfrontendconfig",3],["value",3]]]],[11,"new","","Creates a FunctionBuilderContext structure. The structure…",11,[[],["functionbuildercontext",3]]]],"p":[[3,"CraneliftCompiler"],[3,"Cranelift"],[3,"ModuleInfoVmctxInfo"],[4,"CraneliftOptLevel"],[4,"ModuleInfoMemoryOffset"],[3,"WriterRelocate"],[3,"FuncEnvironment"],[3,"RelocSink"],[3,"TrapSink"],[3,"Context"],[3,"FunctionBuilder"],[3,"FunctionBuilderContext"],[8,"TrapSink"],[4,"GlobalVariable"],[13,"Memory"],[4,"ReturnMode"],[8,"TargetEnvironment"],[8,"FuncEnvironment"],[3,"FuncTranslationState"],[4,"ElseData"],[13,"NoElse"],[13,"WithElse"],[4,"ControlStackFrame"],[13,"If"],[13,"Block"],[13,"Loop"],[3,"FuncTranslator"],[4,"CraneliftUnwindInfo"],[3,"NullTrapSink"],[3,"NullStackMapSink"],[3,"TrampolineRelocSink"]]},\
"wasmer_compiler_llvm":{"doc":"","i":[[4,"LLVMOptLevel","wasmer_compiler_llvm","Defines the optimization level used to compile a `Module`.",null,null],[13,"None","","",0,null],[13,"Less","","",0,null],[13,"Default","","",0,null],[13,"Aggressive","","",0,null],[3,"LLVMCompiler","","A compiler that compiles a WebAssembly module with LLVM,…",null,null],[12,"config","","",1,null],[3,"LLVM","","",null,null],[12,"enable_nan_canonicalization","","",2,null],[12,"enable_verifier","","",2,null],[12,"opt_level","","",2,null],[12,"is_pic","","",2,null],[12,"callbacks","","",2,null],[12,"middlewares","","The middleware chain.",2,null],[4,"CompiledKind","","The compiled function kind, used for debugging in the…",null,null],[13,"Local","","",3,null],[13,"FunctionCallTrampoline","","",3,null],[13,"DynamicFunctionTrampoline","","",3,null],[13,"Module","","",3,null],[0,"abi","","",null,null],[5,"get_abi","wasmer_compiler_llvm::abi","",null,[[["targetmachine",3]],[["abi",8],["box",3]]]],[0,"aarch64_systemv","","",null,null],[3,"Aarch64SystemV","wasmer_compiler_llvm::abi::aarch64_systemv","Implementation of the [`Abi`] trait for the Aarch64 ABI on…",null,null],[0,"x86_64_systemv","wasmer_compiler_llvm::abi","",null,null],[3,"X86_64SystemV","wasmer_compiler_llvm::abi::x86_64_systemv","Implementation of the [`Abi`] trait for the AMD64 SystemV…",null,null],[8,"Abi","wasmer_compiler_llvm::abi","We need to produce different LLVM IR for different…",null,null],[10,"get_vmctx_ptr_param","","Given a function definition, retrieve the parameter that…",4,[[["functionvalue",3]],["pointervalue",3]]],[10,"func_type_to_llvm","","Given a wasm function type, produce an llvm function…",4,[[["context",3],["option",4],["intrinsics",3],["vmoffsets",3],["funcsig",3]],[["compileerror",4],["result",4]]]],[10,"args_to_call","","Marshall wasm stack values into function parameters.",4,[[["builder",3],["funcsig",3],["functiontype",3],["pointervalue",3]],[["vec",3],["basicvalueenum",4]]]],[10,"rets_from_call","","Given a CallSite, extract the returned values and return…",4,[[["builder",3],["intrinsics",3],["callsitevalue",3],["funcsig",3]],[["vec",3],["basicvalueenum",4]]]],[10,"is_sret","","Whether the llvm equivalent of this wasm function has an…",4,[[["funcsig",3]],[["result",4],["compileerror",4]]]],[10,"pack_values_for_register_return","","Pack LLVM IR values representing individual wasm values…",4,[[["builder",3],["functiontype",3],["intrinsics",3]],[["basicvalueenum",4],["result",4],["compileerror",4]]]],[0,"compiler","wasmer_compiler_llvm","",null,null],[3,"LLVMCompiler","wasmer_compiler_llvm::compiler","A compiler that compiles a WebAssembly module with LLVM,…",null,null],[12,"config","","",1,null],[3,"ShortNames","","",null,null],[11,"new","wasmer_compiler_llvm","Creates a new LLVM compiler",1,[[["llvm",3]],["llvmcompiler",3]]],[11,"config","","Gets the config for this Compiler",1,[[],["llvm",3]]],[11,"compile_native_object","","",1,[[["symbolregistry",8],["target",3],["compilemoduleinfo",3],["moduletranslationstate",3],["primarymap",3]],[["compileerror",4],["vec",3],["result",4]]]],[0,"config","","",null,null],[4,"LLVMOptLevel","wasmer_compiler_llvm::config","Defines the optimization level used to compile a `Module`.",null,null],[13,"None","","",0,null],[13,"Less","","",0,null],[13,"Default","","",0,null],[13,"Aggressive","","",0,null],[3,"LLVM","","",null,null],[12,"enable_nan_canonicalization","","",2,null],[12,"enable_verifier","","",2,null],[12,"opt_level","","",2,null],[12,"is_pic","","",2,null],[12,"callbacks","","",2,null],[12,"middlewares","","The middleware chain.",2,null],[4,"CompiledKind","","The compiled function kind, used for debugging in the…",null,null],[13,"Local","","",3,null],[13,"FunctionCallTrampoline","","",3,null],[13,"DynamicFunctionTrampoline","","",3,null],[13,"Module","","",3,null],[6,"InkwellModule","","The InkWell ModuleInfo type",null,null],[6,"InkwellMemoryBuffer","","The InkWell MemoryBuffer type",null,null],[8,"LLVMCallbacks","","Callbacks to the different LLVM compilation phases.",null,null],[10,"preopt_ir","","",5,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"postopt_ir","","",5,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"obj_memory_buffer","","",5,[[["compiledkind",4],["inkwellmemorybuffer",6]]]],[11,"new","wasmer_compiler_llvm","Creates a new configuration object with the default…",2,[[]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",2,[[]]],[11,"opt_level","","The optimization levels when optimizing the IR.",2,[[["llvmoptlevel",4]]]],[11,"callbacks","","Callbacks that will triggered in the different compilation…",2,[[["option",4],["arc",3]]]],[11,"reloc_mode","","",2,[[],["relocmode",4]]],[11,"code_model","","",2,[[],["codemodel",4]]],[11,"target_triple","","",2,[[["target",3]],["targettriple",3]]],[11,"target_machine","","Generates the target machine for the current target",2,[[["target",3]],["targetmachine",3]]],[0,"object_file","","",null,null],[3,"ElfSectionIndex","wasmer_compiler_llvm::object_file","",null,null],[12,"0","","",6,null],[3,"CompiledFunction","","",null,null],[12,"compiled_function","","",7,null],[12,"custom_sections","","",7,null],[12,"eh_frame_section_indices","","",7,null],[5,"map_goblin_err","","",null,[[["error",4]],["compileerror",4]]],[5,"load_object_file","","",null,[[["relocationtarget",4]],[["result",4],["compiledfunction",3],["compileerror",4]]]],[11,"from_u32","","Create a new instance from a `u32`.",6,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",6,[[]]],[11,"is_undef","","",6,[[]]],[11,"from_usize","","",6,[[],[["result",4],["compileerror",4]]]],[11,"as_usize","","",6,[[]]],[0,"trampoline","wasmer_compiler_llvm","",null,null],[0,"wasm","wasmer_compiler_llvm::trampoline","",null,null],[3,"FuncTrampoline","wasmer_compiler_llvm::trampoline::wasm","",null,null],[12,"ctx","","",8,null],[12,"target_machine","","",8,null],[12,"abi","","",8,null],[17,"FUNCTION_SECTION","","",null,null],[11,"new","","",8,[[["targetmachine",3]]]],[11,"trampoline_to_module","","",8,[[["functiontype",3],["llvm",3]],[["result",4],["module",3],["compileerror",4]]]],[11,"trampoline","","",8,[[["functiontype",3],["llvm",3]],[["result",4],["functionbody",3],["compileerror",4]]]],[11,"dynamic_trampoline_to_module","","",8,[[["functiontype",3],["llvm",3]],[["result",4],["module",3],["compileerror",4]]]],[11,"dynamic_trampoline","","",8,[[["functiontype",3],["llvm",3]],[["result",4],["functionbody",3],["compileerror",4]]]],[11,"generate_trampoline","","",8,[[["context",3],["intrinsics",3],["functionvalue",3],["functiontype",3]],[["result",4],["compileerror",4]]]],[11,"generate_dynamic_trampoline","","",8,[[["context",3],["intrinsics",3],["functionvalue",3],["functiontype",3]],[["result",4],["compileerror",4]]]],[0,"translator","wasmer_compiler_llvm","",null,null],[0,"code","wasmer_compiler_llvm::translator","",null,null],[3,"FuncTranslator","wasmer_compiler_llvm::translator::code","",null,null],[12,"ctx","","",9,null],[12,"target_machine","","",9,null],[12,"abi","","",9,null],[3,"LLVMFunctionCodeGenerator","","",null,null],[12,"context","","",10,null],[12,"builder","","",10,null],[12,"alloca_builder","","",10,null],[12,"intrinsics","","",10,null],[12,"state","","",10,null],[12,"function","","",10,null],[12,"locals","","",10,null],[12,"ctx","","",10,null],[12,"unreachable_depth","","",10,null],[12,"memory_styles","","",10,null],[12,"_table_styles","","",10,null],[12,"module","","",10,null],[12,"module_translation","","",10,null],[12,"wasm_module","","",10,null],[12,"symbol_registry","","",10,null],[12,"abi","","",10,null],[5,"to_compile_error","","",null,[[],["compileerror",4]]],[5,"is_f32_arithmetic","","",null,[[]]],[5,"is_f64_arithmetic","","",null,[[]]],[17,"FUNCTION_SECTION","","",null,null],[17,"LEF32_GEQ_I32_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to…",null,null],[17,"GEF32_LEQ_I32_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to…",null,null],[17,"LEF64_GEQ_I32_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to…",null,null],[17,"GEF64_LEQ_I32_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to…",null,null],[17,"LEF32_GEQ_U32_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to…",null,null],[17,"GEF32_LEQ_U32_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to…",null,null],[17,"LEF64_GEQ_U32_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to…",null,null],[17,"GEF64_LEQ_U32_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to…",null,null],[17,"LEF32_GEQ_I64_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to…",null,null],[17,"GEF32_LEQ_I64_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to…",null,null],[17,"LEF64_GEQ_I64_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to…",null,null],[17,"GEF64_LEQ_I64_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to…",null,null],[17,"LEF32_GEQ_U64_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to…",null,null],[17,"GEF32_LEQ_U64_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to…",null,null],[17,"LEF64_GEQ_U64_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to…",null,null],[17,"GEF64_LEQ_U64_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to…",null,null],[11,"new","","",9,[[["targetmachine",3]]]],[11,"translate_to_module","","",9,[[["primarymap",3],["localfunctionindex",3],["symbolregistry",8],["primarymap",3],["functionbodydata",3],["llvm",3],["moduletranslationstate",3],["moduleinfo",3]],[["result",4],["module",3],["compileerror",4]]]],[11,"translate","","",9,[[["primarymap",3],["localfunctionindex",3],["symbolregistry",8],["primarymap",3],["functionbodydata",3],["llvm",3],["moduletranslationstate",3],["moduleinfo",3]],[["result",4],["compiledfunction",3],["compileerror",4]]]],[11,"splat_vector","","",10,[[["basicvalueenum",4],["vectortype",3]],["vectorvalue",3]]],[11,"trunc_sat","","",10,[[["floatmathtype",8],["intvalue",3]],["intvalue",3]]],[11,"trunc_sat_scalar","","",10,[[["floatvalue",3],["inttype",3]],["intvalue",3]]],[11,"trap_if_not_representable_as_int","","",10,[[["floatvalue",3]]]],[11,"trap_if_zero_or_overflow","","",10,[[["intvalue",3]]]],[11,"trap_if_zero","","",10,[[["intvalue",3]]]],[11,"v128_into_int_vec","","",10,[[["extrainfo",3],["basicvalueenum",4],["vectortype",3]]]],[11,"v128_into_i8x16","","",10,[[["extrainfo",3],["basicvalueenum",4]]]],[11,"v128_into_i16x8","","",10,[[["extrainfo",3],["basicvalueenum",4]]]],[11,"v128_into_i32x4","","",10,[[["extrainfo",3],["basicvalueenum",4]]]],[11,"v128_into_i64x2","","",10,[[["extrainfo",3],["basicvalueenum",4]]]],[11,"v128_into_f32x4","","",10,[[["extrainfo",3],["basicvalueenum",4]]]],[11,"v128_into_f64x2","","",10,[[["extrainfo",3],["basicvalueenum",4]]]],[11,"apply_pending_canonicalization","","",10,[[["extrainfo",3],["basicvalueenum",4]],["basicvalueenum",4]]],[11,"canonicalize_nans","","",10,[[["basicvalueenum",4]],["basicvalueenum",4]]],[11,"mark_memaccess_nodelete","","",10,[[["memoryindex",3],["instructionvalue",3]],[["result",4],["compileerror",4]]]],[11,"annotate_user_memaccess","","",10,[[["memoryindex",3],["memoryimmediate",3],["instructionvalue",3]],[["result",4],["compileerror",4]]]],[11,"resolve_memory_ptr","","",10,[[["memoryindex",3],["intvalue",3],["memoryimmediate",3],["pointertype",3]],[["pointervalue",3],["compileerror",4],["result",4]]]],[11,"trap_if_misaligned","","",10,[[["memoryimmediate",3],["pointervalue",3]]]],[11,"finalize","","",10,[[["functiontype",3]],[["result",4],["compileerror",4]]]],[11,"translate_operator","","",10,[[["operator",4]],[["result",4],["compileerror",4]]]],[0,"intrinsics","wasmer_compiler_llvm::translator","Code for dealing with LLVM and VM intrinsics.",null,null],[3,"Intrinsics","wasmer_compiler_llvm::translator::intrinsics","Struct containing LLVM and VM intrinsics.",null,null],[12,"ctlz_i32","","",11,null],[12,"ctlz_i64","","",11,null],[12,"cttz_i32","","",11,null],[12,"cttz_i64","","",11,null],[12,"ctpop_i32","","",11,null],[12,"ctpop_i64","","",11,null],[12,"sqrt_f32","","",11,null],[12,"sqrt_f64","","",11,null],[12,"sqrt_f32x4","","",11,null],[12,"sqrt_f64x2","","",11,null],[12,"ceil_f32","","",11,null],[12,"ceil_f64","","",11,null],[12,"floor_f32","","",11,null],[12,"floor_f64","","",11,null],[12,"trunc_f32","","",11,null],[12,"trunc_f64","","",11,null],[12,"nearbyint_f32","","",11,null],[12,"nearbyint_f64","","",11,null],[12,"fabs_f32","","",11,null],[12,"fabs_f64","","",11,null],[12,"fabs_f32x4","","",11,null],[12,"fabs_f64x2","","",11,null],[12,"copysign_f32","","",11,null],[12,"copysign_f64","","",11,null],[12,"copysign_f32x4","","",11,null],[12,"copysign_f64x2","","",11,null],[12,"sadd_sat_i8x16","","",11,null],[12,"sadd_sat_i16x8","","",11,null],[12,"uadd_sat_i8x16","","",11,null],[12,"uadd_sat_i16x8","","",11,null],[12,"ssub_sat_i8x16","","",11,null],[12,"ssub_sat_i16x8","","",11,null],[12,"usub_sat_i8x16","","",11,null],[12,"usub_sat_i16x8","","",11,null],[12,"expect_i1","","",11,null],[12,"trap","","",11,null],[12,"debug_trap","","",11,null],[12,"personality","","",11,null],[12,"readonly","","",11,null],[12,"stack_probe","","",11,null],[12,"void_ty","","",11,null],[12,"i1_ty","","",11,null],[12,"i8_ty","","",11,null],[12,"i16_ty","","",11,null],[12,"i32_ty","","",11,null],[12,"i64_ty","","",11,null],[12,"i128_ty","","",11,null],[12,"f32_ty","","",11,null],[12,"f64_ty","","",11,null],[12,"i1x128_ty","","",11,null],[12,"i8x16_ty","","",11,null],[12,"i16x8_ty","","",11,null],[12,"i32x4_ty","","",11,null],[12,"i64x2_ty","","",11,null],[12,"f32x4_ty","","",11,null],[12,"f64x2_ty","","",11,null],[12,"i8_ptr_ty","","",11,null],[12,"i16_ptr_ty","","",11,null],[12,"i32_ptr_ty","","",11,null],[12,"i64_ptr_ty","","",11,null],[12,"i128_ptr_ty","","",11,null],[12,"f32_ptr_ty","","",11,null],[12,"f64_ptr_ty","","",11,null],[12,"anyfunc_ty","","",11,null],[12,"i1_zero","","",11,null],[12,"i8_zero","","",11,null],[12,"i32_zero","","",11,null],[12,"i64_zero","","",11,null],[12,"i128_zero","","",11,null],[12,"f32_zero","","",11,null],[12,"f64_zero","","",11,null],[12,"f32x4_zero","","",11,null],[12,"f64x2_zero","","",11,null],[12,"trap_unreachable","","",11,null],[12,"trap_call_indirect_null","","",11,null],[12,"trap_call_indirect_sig","","",11,null],[12,"trap_memory_oob","","",11,null],[12,"trap_illegal_arithmetic","","",11,null],[12,"trap_integer_division_by_zero","","",11,null],[12,"trap_bad_conversion_to_integer","","",11,null],[12,"trap_unaligned_atomic","","",11,null],[12,"trap_table_access_oob","","",11,null],[12,"throw_trap","","",11,null],[12,"experimental_stackmap","","",11,null],[12,"vmfunction_import_ptr_ty","","",11,null],[12,"vmfunction_import_body_element","","",11,null],[12,"vmfunction_import_vmctx_element","","",11,null],[12,"vmmemory_definition_ptr_ty","","",11,null],[12,"vmmemory_definition_base_element","","",11,null],[12,"vmmemory_definition_current_length_element","","",11,null],[12,"memory32_grow_ptr_ty","","",11,null],[12,"imported_memory32_grow_ptr_ty","","",11,null],[12,"memory32_size_ptr_ty","","",11,null],[12,"imported_memory32_size_ptr_ty","","",11,null],[12,"ctx_ptr_ty","","",11,null],[3,"TableCache","","",null,null],[12,"ptr_to_base_ptr","","",12,null],[12,"ptr_to_bounds","","",12,null],[3,"FunctionCache","","",null,null],[12,"func","","",13,null],[12,"vmctx","","",13,null],[12,"attrs","","",13,null],[3,"CtxType","","",null,null],[12,"ctx_ptr_value","","",14,null],[12,"wasm_module","","",14,null],[12,"cache_builder","","",14,null],[12,"abi","","",14,null],[12,"cached_memories","","",14,null],[12,"cached_tables","","",14,null],[12,"cached_sigindices","","",14,null],[12,"cached_globals","","",14,null],[12,"cached_functions","","",14,null],[12,"cached_memory_grow","","",14,null],[12,"cached_memory_size","","",14,null],[12,"offsets","","",14,null],[4,"MemoryCache","","",null,null],[13,"Dynamic","","The memory moves around.",15,null],[12,"ptr_to_base_ptr","wasmer_compiler_llvm::translator::intrinsics::MemoryCache","",16,null],[12,"ptr_to_current_length","","",16,null],[13,"Static","wasmer_compiler_llvm::translator::intrinsics","The memory is always in the same place.",15,null],[12,"base_ptr","wasmer_compiler_llvm::translator::intrinsics::MemoryCache","",17,null],[4,"GlobalCache","wasmer_compiler_llvm::translator::intrinsics","",null,null],[13,"Mut","","",18,null],[12,"ptr_to_value","wasmer_compiler_llvm::translator::intrinsics::GlobalCache","",19,null],[13,"Const","wasmer_compiler_llvm::translator::intrinsics","",18,null],[12,"value","wasmer_compiler_llvm::translator::intrinsics::GlobalCache","",20,null],[5,"type_to_llvm_ptr","wasmer_compiler_llvm::translator::intrinsics","",null,[[["type",4],["intrinsics",3]],[["pointertype",3],["compileerror",4],["result",4]]]],[5,"type_to_llvm","","",null,[[["type",4],["intrinsics",3]],[["compileerror",4],["basictypeenum",4],["result",4]]]],[5,"tbaa_label","","",null,[[["string",3],["intrinsics",3],["instructionvalue",3],["module",3]]]],[11,"declare","","Create an [`Intrinsics`] for the given [`Context`].",11,[[["context",3],["module",3]]]],[11,"new","","",14,[[["functionvalue",3],["builder",3],["abi",8],["wasmercompilermodule",3]],["ctxtype",3]]],[11,"basic","","",14,[[],["basicvalueenum",4]]],[11,"memory","","",14,[[["memoryindex",3],["primarymap",3],["intrinsics",3],["module",3]],["memorycache",4]]],[11,"table_prepare","","",14,[[["tableindex",3],["module",3],["intrinsics",3]]]],[11,"table","","",14,[[["tableindex",3],["module",3],["intrinsics",3]]]],[11,"dynamic_sigindex","","",14,[[["module",3],["signatureindex",3],["intrinsics",3]],["intvalue",3]]],[11,"global","","",14,[[["intrinsics",3],["module",3],["globalindex",3]],[["result",4],["compileerror",4],["globalcache",4]]]],[11,"add_func","","",14,[[["pointervalue",3],["basicvalueenum",4],["functionindex",3]]]],[11,"local_func","","",14,[[["localfunctionindex",3],["context",3],["intrinsics",3],["functionindex",3],["functype",3],["module",3]],[["result",4],["functioncache",3],["compileerror",4]]]],[11,"func","","",14,[[["context",3],["intrinsics",3],["functionindex",3],["functype",3]],[["result",4],["functioncache",3],["compileerror",4]]]],[11,"memory_grow","","",14,[[["memoryindex",3],["intrinsics",3]],["pointervalue",3]]],[11,"memory_size","","",14,[[["memoryindex",3],["intrinsics",3]],["pointervalue",3]]],[11,"get_offsets","","",14,[[],["vmoffsets",3]]],[0,"state","wasmer_compiler_llvm::translator","",null,null],[3,"ExtraInfo","wasmer_compiler_llvm::translator::state","",null,null],[12,"state","","",21,null],[3,"State","","",null,null],[12,"stack","","",22,null],[12,"control_stack","","",22,null],[12,"reachable","","",22,null],[4,"ControlFrame","","",null,null],[13,"Block","","",23,null],[12,"next","wasmer_compiler_llvm::translator::state::ControlFrame","",24,null],[12,"phis","","",24,null],[12,"stack_size_snapshot","","",24,null],[13,"Loop","wasmer_compiler_llvm::translator::state","",23,null],[12,"body","wasmer_compiler_llvm::translator::state::ControlFrame","",25,null],[12,"next","","",25,null],[12,"phis","","",25,null],[12,"loop_body_phis","","",25,null],[12,"stack_size_snapshot","","",25,null],[13,"IfElse","wasmer_compiler_llvm::translator::state","",23,null],[12,"if_then","wasmer_compiler_llvm::translator::state::ControlFrame","",26,null],[12,"if_else","","",26,null],[12,"next","","",26,null],[12,"then_phis","","",26,null],[12,"else_phis","","",26,null],[12,"next_phis","","",26,null],[12,"stack_size_snapshot","","",26,null],[12,"if_else_state","","",26,null],[4,"IfElseState","wasmer_compiler_llvm::translator::state","",null,null],[13,"If","","",27,null],[13,"Else","","",27,null],[11,"code_after","","",23,[[],["basicblock",3]]],[11,"br_dest","","",23,[[],["basicblock",3]]],[11,"phis","","",23,[[]]],[11,"loop_body_phis","","PHI nodes for stack values in the loop body.",23,[[]]],[11,"is_loop","","",23,[[]]],[11,"pending_f32_nan","","",21,[[],["extrainfo",3]]],[11,"pending_f64_nan","","",21,[[],["extrainfo",3]]],[11,"arithmetic_f32","","",21,[[],["extrainfo",3]]],[11,"arithmetic_f64","","",21,[[],["extrainfo",3]]],[11,"has_pending_f32_nan","","",21,[[]]],[11,"has_pending_f64_nan","","",21,[[]]],[11,"is_arithmetic_f32","","",21,[[]]],[11,"is_arithmetic_f64","","",21,[[]]],[11,"strip_pending","","",21,[[],["extrainfo",3]]],[11,"new","","",22,[[]]],[11,"has_control_frames","","",22,[[]]],[11,"reset_stack","","",22,[[["controlframe",4]]]],[11,"outermost_frame","","",22,[[],[["controlframe",4],["result",4],["compileerror",4]]]],[11,"frame_at_depth","","",22,[[],[["controlframe",4],["result",4],["compileerror",4]]]],[11,"frame_at_depth_mut","","",22,[[],[["result",4],["controlframe",4],["compileerror",4]]]],[11,"pop_frame","","",22,[[],[["controlframe",4],["result",4],["compileerror",4]]]],[11,"push1","","",22,[[["basicvalue",8]]]],[11,"push1_extra","","",22,[[["extrainfo",3],["basicvalue",8]]]],[11,"pop1","","",22,[[],[["basicvalueenum",4],["result",4],["compileerror",4]]]],[11,"pop1_extra","","",22,[[],[["compileerror",4],["result",4]]]],[11,"pop2","","",22,[[],[["compileerror",4],["result",4]]]],[11,"pop2_extra","","",22,[[],[["result",4],["compileerror",4]]]],[11,"pop3_extra","","",22,[[],[["result",4],["compileerror",4]]]],[11,"peek1_extra","","",22,[[],[["compileerror",4],["result",4]]]],[11,"peekn","","",22,[[],[["result",4],["vec",3],["compileerror",4]]]],[11,"peekn_extra","","",22,[[],[["result",4],["compileerror",4]]]],[11,"popn_save_extra","","",22,[[],[["compileerror",4],["vec",3],["result",4]]]],[11,"popn","","",22,[[],[["result",4],["compileerror",4]]]],[11,"push_block","","",22,[[["smallvec",3],["basicblock",3]]]],[11,"push_loop","","",22,[[["smallvec",3],["basicblock",3]]]],[11,"push_if","","",22,[[["smallvec",3],["basicblock",3]]]],[6,"InkwellMemoryBuffer","wasmer_compiler_llvm","The InkWell MemoryBuffer type",null,null],[6,"InkwellModule","","The InkWell ModuleInfo type",null,null],[8,"LLVMCallbacks","","Callbacks to the different LLVM compilation phases.",null,null],[10,"preopt_ir","","",5,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"postopt_ir","","",5,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"obj_memory_buffer","","",5,[[["compiledkind",4],["inkwellmemorybuffer",6]]]],[11,"from","wasmer_compiler_llvm::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","wasmer_compiler_llvm","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","wasmer_compiler_llvm::abi::aarch64_systemv","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","wasmer_compiler_llvm::abi::x86_64_systemv","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","wasmer_compiler_llvm::compiler","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","wasmer_compiler_llvm::object_file","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","wasmer_compiler_llvm::trampoline::wasm","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","wasmer_compiler_llvm::translator::code","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","wasmer_compiler_llvm::translator::intrinsics","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","wasmer_compiler_llvm::translator::state","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"default","wasmer_compiler_llvm::config","Returns the default value for `OptimizationLevel`, namely…",0,[[],["optimizationlevel",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",0,[[["optimizationlevel",4]]]],[11,"clone","","",0,[[],["optimizationlevel",4]]],[11,"get_vmctx_ptr_param","wasmer_compiler_llvm::abi::aarch64_systemv","",28,[[["functionvalue",3]],["pointervalue",3]]],[11,"func_type_to_llvm","","",28,[[["context",3],["option",4],["intrinsics",3],["vmoffsets",3],["funcsig",3]],[["compileerror",4],["result",4]]]],[11,"args_to_call","","",28,[[["builder",3],["funcsig",3],["functiontype",3],["pointervalue",3]],[["vec",3],["basicvalueenum",4]]]],[11,"rets_from_call","","",28,[[["builder",3],["intrinsics",3],["callsitevalue",3],["funcsig",3]],[["vec",3],["basicvalueenum",4]]]],[11,"is_sret","","",28,[[["funcsig",3]],[["result",4],["compileerror",4]]]],[11,"pack_values_for_register_return","","",28,[[["builder",3],["functiontype",3],["intrinsics",3]],[["basicvalueenum",4],["result",4],["compileerror",4]]]],[11,"get_vmctx_ptr_param","wasmer_compiler_llvm::abi::x86_64_systemv","",29,[[["functionvalue",3]],["pointervalue",3]]],[11,"func_type_to_llvm","","",29,[[["context",3],["option",4],["intrinsics",3],["vmoffsets",3],["funcsig",3]],[["compileerror",4],["result",4]]]],[11,"args_to_call","","",29,[[["builder",3],["funcsig",3],["functiontype",3],["pointervalue",3]],[["vec",3],["basicvalueenum",4]]]],[11,"rets_from_call","","",29,[[["builder",3],["intrinsics",3],["callsitevalue",3],["funcsig",3]],[["vec",3],["basicvalueenum",4]]]],[11,"is_sret","","",29,[[["funcsig",3]],[["result",4],["compileerror",4]]]],[11,"pack_values_for_register_return","","",29,[[["builder",3],["functiontype",3],["intrinsics",3]],[["basicvalueenum",4],["result",4],["compileerror",4]]]],[11,"clone","wasmer_compiler_llvm","",3,[[],["compiledkind",4]]],[11,"clone","","",2,[[],["llvm",3]]],[11,"clone","wasmer_compiler_llvm::object_file","",6,[[],["elfsectionindex",3]]],[11,"clone","wasmer_compiler_llvm::translator::intrinsics","",15,[[],["memorycache",4]]],[11,"clone","","",18,[[],["globalcache",4]]],[11,"clone","","",13,[[],["functioncache",3]]],[11,"clone","wasmer_compiler_llvm::translator::state","",21,[[],["extrainfo",3]]],[11,"default","wasmer_compiler_llvm","",2,[[],["llvm",3]]],[11,"default","wasmer_compiler_llvm::translator::state","",21,[[],["extrainfo",3]]],[11,"cmp","wasmer_compiler_llvm::object_file","",6,[[["elfsectionindex",3]],["ordering",4]]],[11,"eq","","",6,[[["elfsectionindex",3]]]],[11,"ne","","",6,[[["elfsectionindex",3]]]],[11,"eq","wasmer_compiler_llvm::translator::state","",21,[[["extrainfo",3]]]],[11,"ne","","",21,[[["extrainfo",3]]]],[11,"partial_cmp","wasmer_compiler_llvm::object_file","",6,[[["elfsectionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["elfsectionindex",3]]]],[11,"le","","",6,[[["elfsectionindex",3]]]],[11,"gt","","",6,[[["elfsectionindex",3]]]],[11,"ge","","",6,[[["elfsectionindex",3]]]],[11,"fmt","wasmer_compiler_llvm","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_llvm::object_file","",6,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_llvm::translator::state","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"bitand","","",21,[[]]],[11,"bitor","","",21,[[]]],[11,"bitor_assign","","",21,[[]]],[11,"hash","wasmer_compiler_llvm::object_file","",6,[[]]],[11,"hash","wasmer_compiler_llvm::translator::state","",21,[[]]],[11,"size_of_val","wasmer_compiler_llvm","",1,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]]]],[11,"enable_pic","","Emit code suitable for dlopen.",2,[[]]],[11,"enable_verifier","","Whether to verify compiler IR.",2,[[]]],[11,"compiler","","Transform it into the compiler.",2,[[["box",3]],[["box",3],["compiler",8]]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",2,[[["arc",3],["modulemiddleware",8]]]],[11,"experimental_native_compile_module","","",1,[[["primarymap",3],["symbolregistry",8],["target",3],["moduletranslationstate",3],["compilemoduleinfo",3]],[["option",4],["result",4]]]],[11,"compile_module","","Compile the module using LLVM, producing a compilation…",1,[[["localfunctionindex",3],["target",3],["primarymap",3],["functionbodydata",3],["moduletranslationstate",3],["compilemoduleinfo",3]],[["compilation",3],["result",4],["compileerror",4]]]],[11,"symbol_to_name","wasmer_compiler_llvm::compiler","",30,[[["symbol",4]],["string",3]]],[11,"name_to_symbol","","",30,[[],[["symbol",4],["option",4]]]],[11,"reserved_value","wasmer_compiler_llvm::object_file","",6,[[],["elfsectionindex",3]]],[11,"is_reserved_value","","",6,[[]]],[11,"new","","",6,[[]]],[11,"index","","",6,[[]]]],"p":[[4,"LLVMOptLevel"],[3,"LLVMCompiler"],[3,"LLVM"],[4,"CompiledKind"],[8,"Abi"],[8,"LLVMCallbacks"],[3,"ElfSectionIndex"],[3,"CompiledFunction"],[3,"FuncTrampoline"],[3,"FuncTranslator"],[3,"LLVMFunctionCodeGenerator"],[3,"Intrinsics"],[3,"TableCache"],[3,"FunctionCache"],[3,"CtxType"],[4,"MemoryCache"],[13,"Dynamic"],[13,"Static"],[4,"GlobalCache"],[13,"Mut"],[13,"Const"],[3,"ExtraInfo"],[3,"State"],[4,"ControlFrame"],[13,"Block"],[13,"Loop"],[13,"IfElse"],[4,"IfElseState"],[3,"Aarch64SystemV"],[3,"X86_64SystemV"],[3,"ShortNames"]]},\
"wasmer_compiler_singlepass":{"doc":"A WebAssembly `Compiler` implementation using Singlepass.","i":[[3,"SinglepassCompiler","wasmer_compiler_singlepass","A compiler that compiles a WebAssembly module with…",null,null],[12,"config","","",0,null],[3,"Singlepass","","",null,null],[12,"enable_nan_canonicalization","","",1,null],[12,"enable_stack_check","","",1,null],[12,"middlewares","","The middleware chain.",1,null],[0,"address_map","","",null,null],[5,"get_function_address_map","wasmer_compiler_singlepass::address_map","",null,[[["functionbodydata",3],["instructionaddressmap",3],["vec",3]],["functionaddressmap",3]]],[0,"codegen_x64","wasmer_compiler_singlepass","",null,null],[3,"FuncGen","wasmer_compiler_singlepass::codegen_x64","The singlepass per-function code generator.",null,null],[12,"module","","Static module information.",2,null],[12,"config","","ModuleInfo compilation config.",2,null],[12,"vmoffsets","","Offsets of vmctx fields.",2,null],[12,"memory_styles","","",2,null],[12,"signature","","Function signature.",2,null],[12,"assembler","","The assembler.",2,null],[12,"locals","","Memory locations of local variables.",2,null],[12,"local_types","","Types of local variables, including arguments.",2,null],[12,"value_stack","","Value stack.",2,null],[12,"fp_stack","","Metadata about floating point values on the stack.",2,null],[12,"control_stack","","A list of frames describing the current control stack.",2,null],[12,"machine","","Low-level machine state.",2,null],[12,"unreachable_depth","","Nesting level of unreachable code.",2,null],[12,"fsm","","Function state map. Not yet used in the reborn version but…",2,null],[12,"trap_table","","Trap table.",2,null],[12,"relocations","","Relocation information.",2,null],[12,"special_labels","","A set of special labels for trapping.",2,null],[12,"src_loc","","The source location for the current operator.",2,null],[12,"instructions_address_map","","Map from byte offset into wasm function to range of native…",2,null],[3,"SpecialLabelSet","","",null,null],[12,"integer_division_by_zero","","",3,null],[12,"heap_access_oob","","",3,null],[12,"table_access_oob","","",3,null],[12,"indirect_call_null","","",3,null],[12,"bad_signature","","",3,null],[3,"TrapTable","","A trap table for a `RunnableModuleInfo`.",null,null],[12,"offset_to_code","","Mappings from offsets in generated machine code to the…",4,null],[3,"FloatValue","","Metadata about a floating-point value.",null,null],[12,"canonicalization","","Do we need to canonicalize the value before its bit…",5,null],[12,"depth","","Corresponding depth in the main value stack.",5,null],[3,"ControlFrame","","",null,null],[12,"label","","",6,null],[12,"loop_like","","",6,null],[12,"if_else","","",6,null],[12,"returns","","",6,null],[12,"value_stack_depth","","",6,null],[12,"fp_stack_depth","","",6,null],[12,"state","","",6,null],[12,"state_diff_id","","",6,null],[3,"CodegenError","","",null,null],[12,"message","","",7,null],[3,"I2O1","","Abstraction for a 2-input, 1-output operator. Can be an…",null,null],[12,"loc_a","","",8,null],[12,"loc_b","","",8,null],[12,"ret","","",8,null],[4,"CanonicalizeType","","Type of a pending canonicalization floating point value.…",null,null],[13,"F32","","",9,null],[13,"F64","","",9,null],[4,"IfElseState","","",null,null],[13,"None","","",10,null],[13,"If","","",10,null],[13,"Else","","",10,null],[5,"type_to_wp_type","","",null,[[["type",4]],["wptype",4]]],[5,"sort_call_movs","","",null,[[]]],[5,"gen_std_trampoline","","",null,[[["functiontype",3]],["functionbody",3]]],[5,"gen_std_dynamic_import_trampoline","","Generates dynamic import function call trampoline for a…",null,[[["functiontype",3],["vmoffsets",3]],["functionbody",3]]],[5,"gen_import_call_trampoline","","",null,[[["functiontype",3],["vmoffsets",3],["functionindex",3]],["customsection",3]]],[17,"GEF32_LT_I32_MIN","","Greatest Exact Float (32 bits) less-than i32::MIN when…",null,null],[17,"LEF32_GT_I32_MAX","","Least Exact Float (32 bits) greater-than i32::MAX when…",null,null],[17,"GEF32_LT_I64_MIN","","Greatest Exact Float (32 bits) less-than i64::MIN when…",null,null],[17,"LEF32_GT_I64_MAX","","Least Exact Float (32 bits) greater-than i64::MAX when…",null,null],[17,"GEF32_LT_U32_MIN","","Greatest Exact Float (32 bits) less-than u32::MIN when…",null,null],[17,"LEF32_GT_U32_MAX","","Least Exact Float (32 bits) greater-than u32::MAX when…",null,null],[17,"GEF32_LT_U64_MIN","","Greatest Exact Float (32 bits) less-than u64::MIN when…",null,null],[17,"LEF32_GT_U64_MAX","","Least Exact Float (32 bits) greater-than u64::MAX when…",null,null],[17,"GEF64_LT_I32_MIN","","Greatest Exact Float (64 bits) less-than i32::MIN when…",null,null],[17,"LEF64_GT_I32_MAX","","Least Exact Float (64 bits) greater-than i32::MAX when…",null,null],[17,"GEF64_LT_I64_MIN","","Greatest Exact Float (64 bits) less-than i64::MIN when…",null,null],[17,"LEF64_GT_I64_MAX","","Least Exact Float (64 bits) greater-than i64::MAX when…",null,null],[17,"GEF64_LT_U32_MIN","","Greatest Exact Float (64 bits) less-than u32::MIN when…",null,null],[17,"LEF64_GT_U32_MAX","","Least Exact Float (64 bits) greater-than u32::MAX when…",null,null],[17,"GEF64_LT_U64_MIN","","Greatest Exact Float (64 bits) less-than u64::MIN when…",null,null],[17,"LEF64_GT_U64_MAX","","Least Exact Float (64 bits) greater-than u64::MAX when…",null,null],[8,"PopMany","","",null,null],[10,"peek1","","",11,[[],[["codegenerror",3],["result",4]]]],[10,"pop1","","",11,[[],[["result",4],["codegenerror",3]]]],[10,"pop2","","",11,[[],[["codegenerror",3],["result",4]]]],[8,"WpTypeExt","","",null,null],[10,"is_float","","",12,[[]]],[11,"new","","",5,[[]]],[11,"cncl_f32","","",5,[[]]],[11,"cncl_f64","","",5,[[]]],[11,"promote","","",5,[[],["floatvalue",3]]],[11,"demote","","",5,[[],["floatvalue",3]]],[11,"to_size","","",9,[[],["size",4]]],[11,"set_srcloc","","Set the source location of the Wasm to the given offset.",2,[[]]],[11,"get_location_released","","",2,[[["location",4]],["location",4]]],[11,"pop_value_released","","",2,[[],["location",4]]],[11,"i2o1_prepare","","Prepare data for binary operator with 2 inputs and 1 output.",2,[[["wptype",4]],["i2o1",3]]],[11,"mark_trappable","","",2,[[]]],[11,"mark_range_with_trap_code","","Marks each address in the code range emitted by `f` with…",2,[[["trapcode",4],["fnonce",8]]]],[11,"mark_address_with_trap_code","","Marks one address as trappable with trap code `code`.",2,[[["trapcode",4]]]],[11,"canonicalize_nan","","Canonicalizes the floating point value at `input` into…",2,[[["location",4],["size",4]]]],[11,"emit_relaxed_xdiv","","Moves `loc` to a valid location for `div`/`idiv`.",2,[[["location",4],["size",4]]]],[11,"emit_relaxed_zx_sx","","Moves `src` and `dst` to valid locations for…",2,[[["location",4],["size",4]],[["result",4],["codegenerror",3]]]],[11,"emit_relaxed_binop","","Moves `src` and `dst` to valid locations for generic…",2,[[["location",4],["size",4]]]],[11,"emit_relaxed_avx","","Moves `src1` and `src2` to valid locations and possibly…",2,[[["location",4]],[["result",4],["codegenerror",3]]]],[11,"emit_relaxed_avx_base","","Moves `src1` and `src2` to valid locations and possibly…",2,[[["location",4],["fnonce",8]],[["result",4],["codegenerror",3]]]],[11,"emit_binop_i32","","I32 binary operation with both operands popped from the…",2,[[]]],[11,"emit_binop_i64","","I64 binary operation with both operands popped from the…",2,[[]]],[11,"emit_cmpop_i32_dynamic_b","","I32 comparison with `loc_b` from input.",2,[[["condition",4],["location",4]],[["result",4],["codegenerror",3]]]],[11,"emit_cmpop_i32","","I32 comparison with both operands popped from the virtual…",2,[[["condition",4]],[["result",4],["codegenerror",3]]]],[11,"emit_cmpop_i64_dynamic_b","","I64 comparison with `loc_b` from input.",2,[[["condition",4],["location",4]],[["result",4],["codegenerror",3]]]],[11,"emit_cmpop_i64","","I64 comparison with both operands popped from the virtual…",2,[[["condition",4]],[["result",4],["codegenerror",3]]]],[11,"emit_xcnt_i32","","I32 `lzcnt`/`tzcnt`/`popcnt` with operand popped from the…",2,[[],[["result",4],["codegenerror",3]]]],[11,"emit_xcnt_i64","","I64 `lzcnt`/`tzcnt`/`popcnt` with operand popped from the…",2,[[],[["result",4],["codegenerror",3]]]],[11,"emit_shift_i32","","I32 shift with both operands popped from the virtual stack.",2,[[]]],[11,"emit_shift_i64","","I64 shift with both operands popped from the virtual stack.",2,[[]]],[11,"emit_fp_binop_avx","","Floating point (AVX) binary operation with both operands…",2,[[],[["result",4],["codegenerror",3]]]],[11,"emit_fp_cmpop_avx","","Floating point (AVX) comparison with both operands popped…",2,[[],[["result",4],["codegenerror",3]]]],[11,"emit_fp_unop_avx","","Floating point (AVX) unop with both operands popped from…",2,[[],[["result",4],["codegenerror",3]]]],[11,"emit_call_sysv","","Emits a System V call sequence.",2,[[["fnonce",8],["iterator",8]],[["result",4],["codegenerror",3]]]],[11,"_emit_call_sysv_label","","Emits a System V call sequence, specialized for labels as…",2,[[["iterator",8],["dynamiclabel",3]],[["result",4],["codegenerror",3]]]],[11,"emit_memory_op","","Emits a memory operation.",2,[[["location",4],["memoryimmediate",3],["fnonce",8]],[["result",4],["codegenerror",3]]]],[11,"emit_compare_and_swap","","Emits a memory operation.",2,[[["fnonce",8],["location",4],["memoryimmediate",3],["size",4]],[["result",4],["codegenerror",3]]]],[11,"emit_f32_int_conv_check","","",2,[[["xmm",4]]]],[11,"emit_f32_int_conv_check_trap","","",2,[[["xmm",4]]]],[11,"emit_f32_int_conv_check_sat","","",2,[[["xmm",4],["option",4],["fnonce",8]]]],[11,"emit_f64_int_conv_check","","",2,[[["xmm",4]]]],[11,"emit_f64_int_conv_check_trap","","",2,[[["xmm",4]]]],[11,"emit_f64_int_conv_check_sat","","",2,[[["xmm",4],["option",4],["fnonce",8]]]],[11,"get_state_diff","","",2,[[]]],[11,"emit_head","","",2,[[],[["result",4],["codegenerror",3]]]],[11,"mark_instruction_address_end","","Pushes the instruction to the address map, calculating the…",2,[[]]],[11,"new","","",2,[[["singlepass",3],["primarymap",3],["localfunctionindex",3],["moduleinfo",3],["primarymap",3],["vmoffsets",3]],[["codegenerror",3],["result",4],["funcgen",3]]]],[11,"has_control_frames","","",2,[[]]],[11,"feed_operator","","",2,[[["operator",4]],[["result",4],["codegenerror",3]]]],[11,"finalize","","",2,[[["functionbodydata",3]],["compiledfunction",3]]],[0,"common_decl","wasmer_compiler_singlepass","",null,null],[3,"RegisterIndex","wasmer_compiler_singlepass::common_decl","",null,null],[12,"0","","",13,null],[3,"MachineState","","A container for the state of a running wasm instance.",null,null],[12,"stack_values","","Stack values.",14,null],[12,"register_values","","Register values.",14,null],[12,"prev_frame","","Previous frame.",14,null],[12,"wasm_stack","","Wasm stack.",14,null],[12,"wasm_inst_offset","","Wasm instruction offset.",14,null],[3,"MachineStateDiff","","A diff of two `MachineState`s.",null,null],[12,"last","","Link to the previous diff this diff is based on, or `None`…",15,null],[12,"stack_push","","What values are pushed onto the stack?",15,null],[12,"stack_pop","","How many values are popped from the stack?",15,null],[12,"reg_diff","","Register diff.",15,null],[12,"prev_frame_diff","","Changes in the previous frame\'s data.",15,null],[12,"wasm_stack_push","","Values pushed to the Wasm stack.",15,null],[12,"wasm_stack_pop","","of values popped from the Wasm stack.",15,null],[12,"wasm_inst_offset","","Wasm instruction offset.",15,null],[3,"FunctionStateMap","","A map of function states.",null,null],[12,"initial","","Initial.",16,null],[12,"local_function_id","","Local Function Id.",16,null],[12,"locals","","Locals.",16,null],[12,"shadow_size","","Shadow size.",16,null],[12,"diffs","","Diffs.",16,null],[12,"wasm_function_header_target_offset","","Wasm Function Header target offset.",16,null],[12,"wasm_offset_to_target_offset","","Wasm offset to target offset",16,null],[12,"loop_offsets","","Loop offsets.",16,null],[12,"call_offsets","","Call offsets.",16,null],[12,"trappable_offsets","","Trappable offsets.",16,null],[3,"OffsetInfo","","Description of a machine code range following an offset.",null,null],[12,"end_offset","","Exclusive range-end offset.",17,null],[12,"diff_id","","Index pointing to the `MachineStateDiff` entry.",17,null],[12,"activate_offset","","Offset at which execution can be continued.",17,null],[4,"WasmAbstractValue","","Whether a value is determined at compile-time or run-time.",null,null],[13,"Runtime","","This value is only known at runtime.",18,null],[13,"Const","","A constant value.",18,null],[4,"MachineValue","","A kind of machine value.",null,null],[13,"Undefined","","Undefined.",19,null],[13,"Vmctx","","Vmctx.",19,null],[13,"_VmctxDeref","","Vmctx Deref.",19,null],[13,"PreserveRegister","","Preserve Register.",19,null],[13,"CopyStackBPRelative","","Copy Stack BP Relative.",19,null],[13,"ExplicitShadow","","Explicit Shadow.",19,null],[13,"WasmStack","","Wasm Stack.",19,null],[13,"WasmLocal","","Wasm Local.",19,null],[13,"_TwoHalves","","Two Halves.",19,null],[4,"SuspendOffset","","A kind of suspend offset.",null,null],[13,"_Loop","","A loop.",20,null],[13,"Call","","A call.",20,null],[13,"Trappable","","A trappable.",20,null],[11,"new","","Creates a new `FunctionStateMap` with the given parameters.",16,[[["wasmabstractvalue",4],["machinestate",3],["vec",3]],["functionstatemap",3]]],[11,"diff","","Creates a `MachineStateDiff` from self and the given…",14,[[["machinestate",3]],["machinestatediff",3]]],[11,"_build_state","","Creates a `MachineState` from the given `&FunctionStateMap`.",15,[[["functionstatemap",3]],["machinestate",3]]],[0,"compiler","wasmer_compiler_singlepass","Support for compiling with Singlepass.",null,null],[3,"SinglepassCompiler","wasmer_compiler_singlepass::compiler","A compiler that compiles a WebAssembly module with…",null,null],[12,"config","","",0,null],[5,"to_compile_error","","",null,[[["tocompileerror",8]],["compileerror",4]]],[8,"ToCompileError","","",null,null],[10,"to_compile_error","","",21,[[],["compileerror",4]]],[11,"new","wasmer_compiler_singlepass","Creates a new Singlepass compiler",0,[[["singlepass",3]]]],[11,"config","","Gets the config for this Compiler",0,[[],["singlepass",3]]],[0,"config","","",null,null],[3,"Singlepass","wasmer_compiler_singlepass::config","",null,null],[12,"enable_nan_canonicalization","","",1,null],[12,"enable_stack_check","","",1,null],[12,"middlewares","","The middleware chain.",1,null],[11,"new","wasmer_compiler_singlepass","Creates a new configuration object with the default…",1,[[]]],[11,"enable_stack_check","","Enable stack check.",1,[[]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",1,[[]]],[0,"emitter_x64","","",null,null],[4,"Location","wasmer_compiler_singlepass::emitter_x64","",null,null],[13,"Imm8","","",22,null],[13,"Imm32","","",22,null],[13,"Imm64","","",22,null],[13,"GPR","","",22,null],[13,"XMM","","",22,null],[13,"Memory","","",22,null],[13,"MemoryAddTriple","","",22,null],[4,"Condition","","",null,null],[13,"None","","",23,null],[13,"Above","","",23,null],[13,"AboveEqual","","",23,null],[13,"Below","","",23,null],[13,"BelowEqual","","",23,null],[13,"Greater","","",23,null],[13,"GreaterEqual","","",23,null],[13,"Less","","",23,null],[13,"LessEqual","","",23,null],[13,"Equal","","",23,null],[13,"NotEqual","","",23,null],[13,"Signed","","",23,null],[13,"Carry","","",23,null],[4,"Size","","",null,null],[13,"S8","","",24,null],[13,"S16","","",24,null],[13,"S32","","",24,null],[13,"S64","","",24,null],[4,"XMMOrMemory","","",null,null],[13,"XMM","","",25,null],[13,"Memory","","",25,null],[4,"GPROrMemory","","",null,null],[13,"GPR","","",26,null],[13,"Memory","","",26,null],[5,"_dummy","","Dynasm proc-macro checks for an `.arch` expression in a…",null,[[["assembler",6]]]],[8,"Emitter","","",null,null],[16,"Label","","",27,null],[16,"Offset","","",27,null],[10,"get_label","","",27,[[]]],[10,"get_offset","","",27,[[]]],[10,"get_jmp_instr_size","","",27,[[]]],[11,"finalize_function","","",27,[[]]],[10,"emit_u64","","",27,[[]]],[10,"emit_bytes","","",27,[[]]],[10,"emit_label","","",27,[[]]],[10,"emit_nop","","",27,[[]]],[10,"emit_nop_n","","A high-level assembler method. Emits an instruction…",27,[[]]],[10,"emit_mov","","",27,[[["location",4],["size",4]]]],[10,"emit_lea","","",27,[[["location",4],["size",4]]]],[10,"emit_lea_label","","",27,[[["location",4]]]],[10,"emit_cdq","","",27,[[]]],[10,"emit_cqo","","",27,[[]]],[10,"emit_xor","","",27,[[["location",4],["size",4]]]],[10,"emit_jmp","","",27,[[["condition",4]]]],[10,"emit_jmp_location","","",27,[[["location",4]]]],[10,"emit_set","","",27,[[["condition",4],["gpr",4]]]],[10,"emit_push","","",27,[[["location",4],["size",4]]]],[10,"emit_pop","","",27,[[["location",4],["size",4]]]],[10,"emit_cmp","","",27,[[["location",4],["size",4]]]],[10,"emit_add","","",27,[[["location",4],["size",4]]]],[10,"emit_sub","","",27,[[["location",4],["size",4]]]],[10,"emit_neg","","",27,[[["location",4],["size",4]]]],[10,"emit_imul","","",27,[[["location",4],["size",4]]]],[10,"emit_imul_imm32_gpr64","","",27,[[["gpr",4]]]],[10,"emit_div","","",27,[[["location",4],["size",4]]]],[10,"emit_idiv","","",27,[[["location",4],["size",4]]]],[10,"emit_shl","","",27,[[["location",4],["size",4]]]],[10,"emit_shr","","",27,[[["location",4],["size",4]]]],[10,"emit_sar","","",27,[[["location",4],["size",4]]]],[10,"emit_rol","","",27,[[["location",4],["size",4]]]],[10,"emit_ror","","",27,[[["location",4],["size",4]]]],[10,"emit_and","","",27,[[["location",4],["size",4]]]],[10,"emit_or","","",27,[[["location",4],["size",4]]]],[10,"emit_bsr","","",27,[[["location",4],["size",4]]]],[10,"emit_bsf","","",27,[[["location",4],["size",4]]]],[10,"emit_popcnt","","",27,[[["location",4],["size",4]]]],[10,"emit_movzx","","",27,[[["location",4],["size",4]]]],[10,"emit_movsx","","",27,[[["location",4],["size",4]]]],[10,"emit_xchg","","",27,[[["location",4],["size",4]]]],[10,"emit_lock_xadd","","",27,[[["location",4],["size",4]]]],[10,"emit_lock_cmpxchg","","",27,[[["location",4],["size",4]]]],[10,"emit_rep_stosq","","",27,[[]]],[10,"emit_btc_gpr_imm8_32","","",27,[[["gpr",4]]]],[10,"emit_btc_gpr_imm8_64","","",27,[[["gpr",4]]]],[10,"emit_cmovae_gpr_32","","",27,[[["gpr",4]]]],[10,"emit_cmovae_gpr_64","","",27,[[["gpr",4]]]],[10,"emit_vmovaps","","",27,[[["xmmormemory",4]]]],[10,"emit_vmovapd","","",27,[[["xmmormemory",4]]]],[10,"emit_vxorps","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vxorpd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vaddss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vaddsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vsubss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vsubsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vmulss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vmulsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vdivss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vdivsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vmaxss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vmaxsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vminss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vminsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpeqss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpeqsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpneqss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpneqsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpltss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpltsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpless","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmplesd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpgtss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpgtsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpgess","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpgesd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpunordss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpunordsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpordss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcmpordsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vsqrtss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vsqrtsd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundss_nearest","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundss_floor","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundss_ceil","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundss_trunc","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundsd_nearest","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundsd_floor","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundsd_ceil","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vroundsd_trunc","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcvtss2sd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vcvtsd2ss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_ucomiss","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_ucomisd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_cvttss2si_32","","",27,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_cvttss2si_64","","",27,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_cvttsd2si_32","","",27,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_cvttsd2si_64","","",27,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_vcvtsi2ss_32","","",27,[[["gprormemory",4],["xmm",4]]]],[10,"emit_vcvtsi2ss_64","","",27,[[["gprormemory",4],["xmm",4]]]],[10,"emit_vcvtsi2sd_32","","",27,[[["gprormemory",4],["xmm",4]]]],[10,"emit_vcvtsi2sd_64","","",27,[[["gprormemory",4],["xmm",4]]]],[10,"emit_vblendvps","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_vblendvpd","","",27,[[["xmmormemory",4],["xmm",4]]]],[10,"emit_test_gpr_64","","",27,[[["gpr",4]]]],[10,"emit_ud2","","",27,[[]]],[10,"emit_ret","","",27,[[]]],[10,"emit_call_label","","",27,[[]]],[10,"emit_call_location","","",27,[[["location",4]]]],[10,"emit_call_register","","",27,[[["gpr",4]]]],[10,"emit_bkpt","","",27,[[]]],[10,"emit_host_redirection","","",27,[[["gpr",4]]]],[11,"arch_has_itruncf","","",27,[[]]],[11,"arch_emit_i32_trunc_sf32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_i32_trunc_sf64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_i32_trunc_uf32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_i32_trunc_uf64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_i64_trunc_sf32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_i64_trunc_sf64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_i64_trunc_uf32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_i64_trunc_uf64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_has_fconverti","","",27,[[]]],[11,"arch_emit_f32_convert_si32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_f32_convert_si64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_f32_convert_ui32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_f32_convert_ui64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_f64_convert_si32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_f64_convert_si64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_f64_convert_ui32","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_emit_f64_convert_ui64","","",27,[[["gpr",4],["xmm",4]]]],[11,"arch_has_fneg","","",27,[[]]],[11,"arch_emit_f32_neg","","",27,[[["xmm",4]]]],[11,"arch_emit_f64_neg","","",27,[[["xmm",4]]]],[11,"arch_has_xzcnt","","",27,[[]]],[11,"arch_emit_lzcnt","","",27,[[["location",4],["size",4]]]],[11,"arch_emit_tzcnt","","",27,[[["location",4],["size",4]]]],[11,"arch_supports_canonicalize_nan","","",27,[[]]],[11,"arch_requires_indirect_call_trampoline","","",27,[[]]],[11,"arch_emit_indirect_call_with_trampoline","","",27,[[["location",4]]]],[11,"arch_emit_entry_trampoline","","",27,[[]]],[11,"arch_mov64_imm_offset","","",27,[[]]],[0,"machine","wasmer_compiler_singlepass","",null,null],[3,"MachineStackOffset","wasmer_compiler_singlepass::machine","",null,null],[12,"0","","",28,null],[3,"Machine","","",null,null],[12,"used_gprs","","",29,null],[12,"used_xmms","","",29,null],[12,"stack_offset","","",29,null],[12,"save_area_offset","","",29,null],[12,"state","","",29,null],[12,"track_state","","",29,null],[17,"NATIVE_PAGE_SIZE","","",null,null],[11,"new","","",29,[[]]],[11,"get_stack_offset","","",29,[[]]],[11,"get_used_gprs","","",29,[[],[["gpr",4],["vec",3]]]],[11,"get_used_xmms","","",29,[[],[["vec",3],["xmm",4]]]],[11,"get_vmctx_reg","","",29,[[],["gpr",4]]],[11,"pick_gpr","","Picks an unused general purpose register for…",29,[[],[["gpr",4],["option",4]]]],[11,"pick_temp_gpr","","Picks an unused general purpose register for internal…",29,[[],[["gpr",4],["option",4]]]],[11,"acquire_temp_gpr","","Acquires a temporary GPR.",29,[[],[["gpr",4],["option",4]]]],[11,"release_temp_gpr","","Releases a temporary GPR.",29,[[["gpr",4]]]],[11,"reserve_unused_temp_gpr","","Specify that a given register is in use.",29,[[["gpr",4]],["gpr",4]]],[11,"pick_xmm","","Picks an unused XMM register.",29,[[],[["option",4],["xmm",4]]]],[11,"pick_temp_xmm","","Picks an unused XMM register for internal temporary use.",29,[[],[["option",4],["xmm",4]]]],[11,"acquire_temp_xmm","","Acquires a temporary XMM register.",29,[[],[["option",4],["xmm",4]]]],[11,"release_temp_xmm","","Releases a temporary XMM register.",29,[[["xmm",4]]]],[11,"acquire_locations","","Acquires locations from the machine state.",29,[[],["smallvec",3]]],[11,"release_locations","","Releases locations used for stack value.",29,[[]]],[11,"release_locations_only_regs","","",29,[[]]],[11,"release_locations_only_stack","","",29,[[]]],[11,"release_locations_only_osr_state","","",29,[[]]],[11,"release_locations_keep_state","","",29,[[]]],[11,"init_locals","","",29,[[],[["vec",3],["location",4]]]],[11,"finalize_locals","","",29,[[]]],[11,"get_param_location","","",29,[[],["location",4]]],[0,"x64_decl","wasmer_compiler_singlepass","X64 structures.",null,null],[3,"ArgumentRegisterAllocator","wasmer_compiler_singlepass::x64_decl","An allocator that allocates registers for function…",null,null],[12,"n_gprs","","",30,null],[12,"n_xmms","","",30,null],[4,"GPR","","General-purpose registers.",null,null],[13,"RAX","","RAX register",31,null],[13,"RCX","","RCX register",31,null],[13,"RDX","","RDX register",31,null],[13,"RBX","","RBX register",31,null],[13,"RSP","","RSP register",31,null],[13,"RBP","","RBP register",31,null],[13,"RSI","","RSI register",31,null],[13,"RDI","","RDI register",31,null],[13,"R8","","R8 register",31,null],[13,"R9","","R9 register",31,null],[13,"R10","","R10 register",31,null],[13,"R11","","R11 register",31,null],[13,"R12","","R12 register",31,null],[13,"R13","","R13 register",31,null],[13,"R14","","R14 register",31,null],[13,"R15","","R15 register",31,null],[4,"XMM","","XMM registers.",null,null],[13,"XMM0","","XMM register 0",32,null],[13,"XMM1","","XMM register 1",32,null],[13,"XMM2","","XMM register 2",32,null],[13,"XMM3","","XMM register 3",32,null],[13,"XMM4","","XMM register 4",32,null],[13,"XMM5","","XMM register 5",32,null],[13,"XMM6","","XMM register 6",32,null],[13,"XMM7","","XMM register 7",32,null],[13,"XMM8","","XMM register 8",32,null],[13,"XMM9","","XMM register 9",32,null],[13,"XMM10","","XMM register 10",32,null],[13,"XMM11","","XMM register 11",32,null],[13,"XMM12","","XMM register 12",32,null],[13,"XMM13","","XMM register 13",32,null],[13,"XMM14","","XMM register 14",32,null],[13,"XMM15","","XMM register 15",32,null],[4,"X64Register","","A machine register under the x86-64 architecture.",null,null],[13,"GPR","","General-purpose registers.",33,null],[13,"XMM","","XMM (floating point/SIMD) registers.",33,null],[5,"new_machine_state","","Create a new `MachineState` with default values.",null,[[],["machinestate",3]]],[11,"to_index","","Returns the index of the register.",33,[[],["registerindex",3]]],[11,"_from_dwarf_regnum","","Converts a DWARF regnum to X64Register.",33,[[],[["x64register",4],["option",4]]]],[11,"_prefix_mov_to_stack","","Returns the instruction prefix for `movq %this_reg,…",33,[[],["option",4]]],[11,"next","","Allocates a register for argument type `ty`. Returns…",30,[[["type",4]],[["x64register",4],["option",4]]]],[11,"from","wasmer_compiler_singlepass","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","wasmer_compiler_singlepass::codegen_x64","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","wasmer_compiler_singlepass::common_decl","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","wasmer_compiler_singlepass::emitter_x64","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","wasmer_compiler_singlepass::machine","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","wasmer_compiler_singlepass::x64_decl","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"to_compile_error","wasmer_compiler_singlepass::codegen_x64","",7,[[],["compileerror",4]]],[11,"clone","","",4,[[],["traptable",3]]],[11,"clone","","",5,[[],["floatvalue",3]]],[11,"clone","","",9,[[],["canonicalizetype",4]]],[11,"clone","","",10,[[],["ifelsestate",4]]],[11,"clone","wasmer_compiler_singlepass::common_decl","",13,[[],["registerindex",3]]],[11,"clone","","",18,[[],["wasmabstractvalue",4]]],[11,"clone","","",14,[[],["machinestate",3]]],[11,"clone","","",15,[[],["machinestatediff",3]]],[11,"clone","","",19,[[],["machinevalue",4]]],[11,"clone","","",16,[[],["functionstatemap",3]]],[11,"clone","","",20,[[],["suspendoffset",4]]],[11,"clone","","",17,[[],["offsetinfo",3]]],[11,"clone","wasmer_compiler_singlepass","",1,[[],["singlepass",3]]],[11,"clone","wasmer_compiler_singlepass::emitter_x64","",22,[[],["location",4]]],[11,"clone","","",23,[[],["condition",4]]],[11,"clone","","",24,[[],["size",4]]],[11,"clone","","",25,[[],["xmmormemory",4]]],[11,"clone","","",26,[[],["gprormemory",4]]],[11,"clone","wasmer_compiler_singlepass::x64_decl","",31,[[],["gpr",4]]],[11,"clone","","",32,[[],["xmm",4]]],[11,"clone","","",33,[[],["x64register",4]]],[11,"default","wasmer_compiler_singlepass::codegen_x64","",4,[[],["traptable",3]]],[11,"default","wasmer_compiler_singlepass::common_decl","",15,[[],["machinestatediff",3]]],[11,"default","wasmer_compiler_singlepass","",1,[[],["singlepass",3]]],[11,"default","wasmer_compiler_singlepass::x64_decl","",30,[[],["argumentregisterallocator",3]]],[11,"cmp","wasmer_compiler_singlepass::emitter_x64","",22,[[["location",4]],["ordering",4]]],[11,"cmp","","",24,[[["size",4]],["ordering",4]]],[11,"cmp","wasmer_compiler_singlepass::x64_decl","",31,[[["gpr",4]],["ordering",4]]],[11,"cmp","","",32,[[["xmm",4]],["ordering",4]]],[11,"eq","wasmer_compiler_singlepass::common_decl","",13,[[["registerindex",3]]]],[11,"ne","","",13,[[["registerindex",3]]]],[11,"eq","","",18,[[["wasmabstractvalue",4]]]],[11,"ne","","",18,[[["wasmabstractvalue",4]]]],[11,"eq","","",19,[[["machinevalue",4]]]],[11,"ne","","",19,[[["machinevalue",4]]]],[11,"eq","wasmer_compiler_singlepass::emitter_x64","",22,[[["location",4]]]],[11,"ne","","",22,[[["location",4]]]],[11,"eq","","",23,[[["condition",4]]]],[11,"eq","","",24,[[["size",4]]]],[11,"eq","","",25,[[["xmmormemory",4]]]],[11,"ne","","",25,[[["xmmormemory",4]]]],[11,"eq","wasmer_compiler_singlepass::x64_decl","",31,[[["gpr",4]]]],[11,"eq","","",32,[[["xmm",4]]]],[11,"eq","","",33,[[["x64register",4]]]],[11,"ne","","",33,[[["x64register",4]]]],[11,"partial_cmp","wasmer_compiler_singlepass::emitter_x64","",22,[[["location",4]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["location",4]]]],[11,"le","","",22,[[["location",4]]]],[11,"gt","","",22,[[["location",4]]]],[11,"ge","","",22,[[["location",4]]]],[11,"partial_cmp","","",24,[[["size",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_compiler_singlepass::x64_decl","",31,[[["gpr",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",32,[[["xmm",4]],[["ordering",4],["option",4]]]],[11,"fmt","wasmer_compiler_singlepass::codegen_x64","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass::common_decl","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass","",1,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass::emitter_x64","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass::x64_decl","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"hash","wasmer_compiler_singlepass::common_decl","",13,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","wasmer_compiler_singlepass::emitter_x64","",22,[[]]],[11,"hash","wasmer_compiler_singlepass::x64_decl","",31,[[]]],[11,"hash","","",32,[[]]],[11,"size_of_val","wasmer_compiler_singlepass","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]]]],[11,"enable_pic","","",1,[[]]],[11,"compiler","","Transform it into the compiler",1,[[["box",3]],[["box",3],["compiler",8]]]],[11,"default_features_for_target","","Gets the default features for this compiler in the given…",1,[[["target",3]],["features",3]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",1,[[["arc",3],["modulemiddleware",8]]]],[11,"compile_module","","Compile the module using Singlepass, producing a…",0,[[["target",3],["functionbodydata",3],["primarymap",3],["localfunctionindex",3],["moduletranslationstate",3],["compilemoduleinfo",3]],[["compileerror",4],["result",4],["compilation",3]]]]],"p":[[3,"SinglepassCompiler"],[3,"Singlepass"],[3,"FuncGen"],[3,"SpecialLabelSet"],[3,"TrapTable"],[3,"FloatValue"],[3,"ControlFrame"],[3,"CodegenError"],[3,"I2O1"],[4,"CanonicalizeType"],[4,"IfElseState"],[8,"PopMany"],[8,"WpTypeExt"],[3,"RegisterIndex"],[3,"MachineState"],[3,"MachineStateDiff"],[3,"FunctionStateMap"],[3,"OffsetInfo"],[4,"WasmAbstractValue"],[4,"MachineValue"],[4,"SuspendOffset"],[8,"ToCompileError"],[4,"Location"],[4,"Condition"],[4,"Size"],[4,"XMMOrMemory"],[4,"GPROrMemory"],[8,"Emitter"],[3,"MachineStackOffset"],[3,"Machine"],[3,"ArgumentRegisterAllocator"],[4,"GPR"],[4,"XMM"],[4,"X64Register"]]},\
"wasmer_derive":{"doc":"","i":[[5,"impl_wasmer_env_for_struct","wasmer_derive","",null,[[["ident",3],["generics",3],["datastruct",3]],["tokenstream",3]]],[5,"impl_wasmer_env","","",null,[[["deriveinput",3]],["tokenstream",3]]],[5,"derive_struct_fields","","",null,[[["datastruct",3]]]],[5,"get_identifier","","",null,[[["type",4]],["tokenstream",3]]],[0,"parse","","",null,null],[3,"ExportExpr","wasmer_derive::parse","",null,null],[12,"name","","",0,null],[12,"optional","","",0,null],[12,"aliases","","",0,null],[3,"ExportOptions","","",null,null],[12,"name","","",1,null],[12,"optional","","",1,null],[12,"aliases","","",1,null],[3,"WasmerAttrInner","","",null,null],[12,"0","","",2,null],[4,"WasmerAttr","","",null,null],[13,"Export","","",3,null],[12,"identifier","wasmer_derive::parse::WasmerAttr","The identifier is an override, otherwise we use the field…",4,null],[12,"optional","","",4,null],[12,"aliases","","",4,null],[12,"span","","",4,null],[24,"WasmerEnv","wasmer_derive","",null,null],[11,"from","wasmer_derive::parse","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]]],"p":[[3,"ExportExpr"],[3,"ExportOptions"],[3,"WasmerAttrInner"],[4,"WasmerAttr"],[13,"Export"]]},\
"wasmer_emscripten":{"doc":"","i":[[3,"EmEnv","wasmer_emscripten","The environment provided to the Emscripten imports.",null,null],[12,"memory","","",0,null],[12,"data","","",0,null],[3,"LibcDirWrapper","","",null,null],[12,"0","","",1,null],[3,"OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG","","",null,null],[12,"__private_field","","",2,null],[3,"EmscriptenData","","",null,null],[12,"globals","","",3,null],[12,"malloc","","",3,null],[12,"free","","",3,null],[12,"memalign","","",3,null],[12,"memset","","",3,null],[12,"stack_alloc","","",3,null],[12,"jumps","","",3,null],[12,"opened_dirs","","",3,null],[12,"dyn_call_i","","",3,null],[12,"dyn_call_ii","","",3,null],[12,"dyn_call_iii","","",3,null],[12,"dyn_call_iiii","","",3,null],[12,"dyn_call_iifi","","",3,null],[12,"dyn_call_v","","",3,null],[12,"dyn_call_vi","","",3,null],[12,"dyn_call_vii","","",3,null],[12,"dyn_call_viii","","",3,null],[12,"dyn_call_viiii","","",3,null],[12,"dyn_call_dii","","",3,null],[12,"dyn_call_diiii","","",3,null],[12,"dyn_call_iiiii","","",3,null],[12,"dyn_call_iiiiii","","",3,null],[12,"dyn_call_iiiiiii","","",3,null],[12,"dyn_call_iiiiiiii","","",3,null],[12,"dyn_call_iiiiiiiii","","",3,null],[12,"dyn_call_iiiiiiiiii","","",3,null],[12,"dyn_call_iiiiiiiiiii","","",3,null],[12,"dyn_call_vd","","",3,null],[12,"dyn_call_viiiii","","",3,null],[12,"dyn_call_viiiiii","","",3,null],[12,"dyn_call_viiiiiii","","",3,null],[12,"dyn_call_viiiiiiii","","",3,null],[12,"dyn_call_viiiiiiiii","","",3,null],[12,"dyn_call_viiiiiiiiii","","",3,null],[12,"dyn_call_iij","","",3,null],[12,"dyn_call_iji","","",3,null],[12,"dyn_call_iiji","","",3,null],[12,"dyn_call_iiijj","","",3,null],[12,"dyn_call_j","","",3,null],[12,"dyn_call_ji","","",3,null],[12,"dyn_call_jii","","",3,null],[12,"dyn_call_jij","","",3,null],[12,"dyn_call_jjj","","",3,null],[12,"dyn_call_viiij","","",3,null],[12,"dyn_call_viiijiiii","","",3,null],[12,"dyn_call_viiijiiiiii","","",3,null],[12,"dyn_call_viij","","",3,null],[12,"dyn_call_viiji","","",3,null],[12,"dyn_call_viijiii","","",3,null],[12,"dyn_call_viijj","","",3,null],[12,"dyn_call_vj","","",3,null],[12,"dyn_call_vjji","","",3,null],[12,"dyn_call_vij","","",3,null],[12,"dyn_call_viji","","",3,null],[12,"dyn_call_vijiii","","",3,null],[12,"dyn_call_vijj","","",3,null],[12,"dyn_call_viid","","",3,null],[12,"dyn_call_vidd","","",3,null],[12,"dyn_call_viidii","","",3,null],[12,"dyn_call_viidddddddd","","",3,null],[12,"temp_ret_0","","",3,null],[12,"stack_save","","",3,null],[12,"stack_restore","","",3,null],[12,"set_threw","","",3,null],[12,"mapped_dirs","","",3,null],[3,"EmscriptenGlobalsData","","",null,null],[12,"abort","","",4,null],[12,"stacktop","","",4,null],[12,"stack_max","","",4,null],[12,"dynamictop_ptr","","",4,null],[12,"dynamic_base","","",4,null],[12,"memory_base","","",4,null],[12,"table_base","","",4,null],[12,"temp_double_ptr","","",4,null],[12,"use_old_abort_on_cannot_grow_memory","","",4,null],[3,"EmscriptenGlobals","","",null,null],[12,"data","","",5,null],[12,"memory","","",5,null],[12,"table","","",5,null],[12,"memory_min","","",5,null],[12,"memory_max","","",5,null],[12,"null_function_names","","",5,null],[5,"align_memory","","",null,[[]]],[5,"static_alloc","","",null,[[]]],[5,"allocate_cstr_on_stack","","",null,[[["emenv",3]]]],[5,"allocate_on_stack","","",null,[[["emenv",3]]]],[5,"get_emscripten_memory_size","","",null,[[["module",3]],[["string",3],["result",4]]]],[5,"get_emscripten_metadata","","Reads values written by `-s EMIT_EMSCRIPTEN_METADATA=1`…",null,[[["module",3]],[["option",4],["string",3],["result",4]]]],[5,"get_emscripten_table_size","","",null,[[["module",3]],[["result",4],["string",3]]]],[5,"is_emscripten_module","","We check if a provided module is an Emscripten generated one",null,[[["module",3]]]],[5,"set_up_emscripten","","Call the global constructors for C++ and set up the…",null,[[["instance",3]],[["runtimeerror",3],["result",4]]]],[5,"emscripten_call_main","","Call the main function in emscripten, assumes that the…",null,[[["instance",3],["emenv",3]],[["runtimeerror",3],["result",4]]]],[5,"run_emscripten_instance","","Top level function to execute emscripten",null,[[["vec",3],["emscriptenglobals",3],["instance",3],["option",4],["string",3],["emenv",3]],[["runtimeerror",3],["result",4]]]],[5,"store_module_arguments","","",null,[[["vec",3],["emenv",3]]]],[5,"emscripten_set_up_memory","","",null,[[["emscriptenglobalsdata",3],["memory",3]],[["result",4],["string",3]]]],[5,"generate_emscripten_env","","",null,[[["emenv",3],["store",3],["emscriptenglobals",3]],["importobject",3]]],[5,"nullfunc","","",null,[[["emenv",3]]]],[0,"macros","","",null,null],[0,"bitwise","","",null,null],[5,"_llvm_bswap_i64","wasmer_emscripten::bitwise","emscripten: _llvm_bswap_i64",null,[[["emenv",3]]]],[0,"emscripten_target","wasmer_emscripten","",null,null],[5,"asm_const_i","wasmer_emscripten::emscripten_target","",null,[[["emenv",3]]]],[5,"exit_with_live_runtime","","",null,[[["emenv",3]]]],[5,"setTempRet0","","",null,[[["emenv",3]]]],[5,"getTempRet0","","",null,[[["emenv",3]]]],[5,"_alarm","","",null,[[["emenv",3]]]],[5,"_atexit","","",null,[[["emenv",3]]]],[5,"__Unwind_Backtrace","","",null,[[["emenv",3]]]],[5,"__Unwind_FindEnclosingFunction","","",null,[[["emenv",3]]]],[5,"__Unwind_GetIPInfo","","",null,[[["emenv",3]]]],[5,"___cxa_find_matching_catch_2","","",null,[[["emenv",3]]]],[5,"___cxa_find_matching_catch_3","","",null,[[["emenv",3]]]],[5,"___cxa_free_exception","","",null,[[["emenv",3]]]],[5,"___resumeException","","",null,[[["emenv",3]]]],[5,"_dladdr","","",null,[[["emenv",3]]]],[5,"___gxx_personality_v0","","",null,[[["emenv",3]]]],[5,"_getdtablesize","","",null,[[["emenv",3]]]],[5,"_gethostbyaddr","","",null,[[["emenv",3]]]],[5,"_gethostbyname","","",null,[[["emenv",3]]]],[5,"_gethostbyname_r","","",null,[[["emenv",3]]]],[5,"_getloadavg","","",null,[[["emenv",3]]]],[5,"_getnameinfo","","",null,[[["emenv",3]]]],[5,"invoke_i","","",null,[[["emenv",3]]]],[5,"invoke_ii","","",null,[[["emenv",3]]]],[5,"invoke_iii","","",null,[[["emenv",3]]]],[5,"invoke_iiii","","",null,[[["emenv",3]]]],[5,"invoke_iifi","","",null,[[["emenv",3]]]],[5,"invoke_v","","",null,[[["emenv",3]]]],[5,"invoke_vi","","",null,[[["emenv",3]]]],[5,"invoke_vii","","",null,[[["emenv",3]]]],[5,"invoke_viii","","",null,[[["emenv",3]]]],[5,"invoke_viiii","","",null,[[["emenv",3]]]],[5,"invoke_dii","","",null,[[["emenv",3]]]],[5,"invoke_diiii","","",null,[[["emenv",3]]]],[5,"invoke_iiiii","","",null,[[["emenv",3]]]],[5,"invoke_iiiiii","","",null,[[["emenv",3]]]],[5,"invoke_iiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_iiiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_iiiiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_iiiiiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_iiiiiiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_vd","","",null,[[["emenv",3]]]],[5,"invoke_viiiii","","",null,[[["emenv",3]]]],[5,"invoke_viiiiii","","",null,[[["emenv",3]]]],[5,"invoke_viiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_viiiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_viiiiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_viiiiiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_iij","","",null,[[["emenv",3]]]],[5,"invoke_iji","","",null,[[["emenv",3]]]],[5,"invoke_iiji","","",null,[[["emenv",3]]]],[5,"invoke_iiijj","","",null,[[["emenv",3]]]],[5,"invoke_j","","",null,[[["emenv",3]]]],[5,"invoke_ji","","",null,[[["emenv",3]]]],[5,"invoke_jii","","",null,[[["emenv",3]]]],[5,"invoke_jij","","",null,[[["emenv",3]]]],[5,"invoke_jjj","","",null,[[["emenv",3]]]],[5,"invoke_viiij","","",null,[[["emenv",3]]]],[5,"invoke_viiijiiii","","",null,[[["emenv",3]]]],[5,"invoke_viiijiiiiii","","",null,[[["emenv",3]]]],[5,"invoke_viij","","",null,[[["emenv",3]]]],[5,"invoke_viiji","","",null,[[["emenv",3]]]],[5,"invoke_viijiii","","",null,[[["emenv",3]]]],[5,"invoke_viijj","","",null,[[["emenv",3]]]],[5,"invoke_vj","","",null,[[["emenv",3]]]],[5,"invoke_vjji","","",null,[[["emenv",3]]]],[5,"invoke_vij","","",null,[[["emenv",3]]]],[5,"invoke_viji","","",null,[[["emenv",3]]]],[5,"invoke_vijiii","","",null,[[["emenv",3]]]],[5,"invoke_vijj","","",null,[[["emenv",3]]]],[5,"invoke_vidd","","",null,[[["emenv",3]]]],[5,"invoke_viid","","",null,[[["emenv",3]]]],[5,"invoke_viidii","","",null,[[["emenv",3]]]],[5,"invoke_viidddddddd","","",null,[[["emenv",3]]]],[0,"env","wasmer_emscripten","",null,null],[3,"EmAddrInfo","wasmer_emscripten::env","",null,null],[12,"ai_flags","","",6,null],[12,"ai_family","","",6,null],[12,"ai_socktype","","",6,null],[12,"ai_protocol","","",6,null],[12,"ai_addrlen","","",6,null],[12,"ai_addr","","",6,null],[12,"ai_canonname","","",6,null],[12,"ai_next","","",6,null],[3,"EmSockAddr","","",null,null],[12,"sa_family","","",7,null],[12,"sa_data","","",7,null],[5,"call_malloc","","",null,[[["emenv",3]]]],[5,"call_malloc_with_cast","","",null,[[["emenv",3]],[["copy",8],["wasmptr",3]]]],[5,"call_memalign","","",null,[[["emenv",3]]]],[5,"call_memset","","",null,[[["emenv",3]]]],[5,"get_emscripten_data","","",null,[[["emenv",3]],[["emscriptendata",3],["mutexguard",3]]]],[5,"_getpagesize","","",null,[[["emenv",3]]]],[5,"_times","","",null,[[["emenv",3]]]],[5,"___build_environment","","",null,[[["c_int",6],["emenv",3]]]],[5,"___assert_fail","","",null,[[["c_int",6],["emenv",3]]]],[5,"_pathconf","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_fpathconf","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[0,"unix","","",null,null],[5,"_getenv","wasmer_emscripten::env::unix","emscripten: _getenv // (name: *const char) -> *const c_char;",null,[[["emenv",3]]]],[5,"_setenv","","emscripten: _setenv // (name: *const char, name: *const…",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_putenv","","emscripten: _putenv // (name: *const char);",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_unsetenv","","emscripten: _unsetenv // (name: *const char);",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_getpwnam","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_getgrnam","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_sysconf","","",null,[[["c_int",6],["emenv",3]]]],[5,"_gai_strerror","","",null,[[["emenv",3]]]],[5,"_getaddrinfo","","",null,[[["c_char",6],["wasmptr",3],["emenv",3],["emaddrinfo",3],["wasmptr",3],["wasmptr",3]]]],[0,"errno","wasmer_emscripten","",null,null],[5,"___seterrno","wasmer_emscripten::errno","",null,[[["emenv",3]]]],[0,"exception","wasmer_emscripten","",null,null],[5,"___cxa_allocate_exception","wasmer_emscripten::exception","emscripten: ___cxa_allocate_exception",null,[[["emenv",3]]]],[5,"___cxa_current_primary_exception","","",null,[[["emenv",3]]]],[5,"___cxa_decrement_exception_refcount","","",null,[[["emenv",3]]]],[5,"___cxa_increment_exception_refcount","","",null,[[["emenv",3]]]],[5,"___cxa_rethrow_primary_exception","","",null,[[["emenv",3]]]],[5,"___cxa_throw","","emscripten: ___cxa_throw TODO: We don\'t have support for…",null,[[["emenv",3]]]],[5,"___cxa_begin_catch","","",null,[[["emenv",3]]]],[5,"___cxa_end_catch","","",null,[[["emenv",3]]]],[5,"___cxa_uncaught_exception","","",null,[[["emenv",3]]]],[5,"___cxa_pure_virtual","","",null,[[["emenv",3]]]],[0,"exec","wasmer_emscripten","",null,null],[5,"execvp","wasmer_emscripten::exec","",null,[[["emenv",3]]]],[5,"execl","","execl",null,[[["varargs",3],["emenv",3]]]],[5,"execle","","execle",null,[[["varargs",3],["emenv",3]]]],[0,"exit","wasmer_emscripten","",null,null],[5,"exit","wasmer_emscripten::exit","",null,[[["emenv",3]]]],[0,"inet","wasmer_emscripten","",null,null],[5,"addr","wasmer_emscripten::inet","",null,[[["emenv",3]]]],[0,"io","wasmer_emscripten","",null,null],[5,"getprotobyname","wasmer_emscripten::io","getprotobyname",null,[[["emenv",3]]]],[5,"getprotobynumber","","getprotobynumber",null,[[["emenv",3]]]],[5,"sigdelset","","sigdelset",null,[[["emenv",3]]]],[5,"sigfillset","","sigfillset",null,[[["emenv",3]]]],[5,"tzset","","tzset",null,[[["emenv",3]]]],[5,"strptime","","strptime",null,[[["emenv",3]]]],[0,"unix","","",null,null],[5,"putchar","wasmer_emscripten::io::unix","putchar",null,[[["emenv",3]]]],[5,"printf","","printf",null,[[["emenv",3]]]],[5,"chroot","","chroot",null,[[["emenv",3]]]],[5,"getpwuid","","getpwuid",null,[[["emenv",3]]]],[0,"jmp","wasmer_emscripten","",null,null],[3,"LongJumpRet","wasmer_emscripten::jmp","",null,null],[5,"__setjmp","","setjmp",null,[[["emenv",3]],["c_int",6]]],[5,"__longjmp","","longjmp",null,[[["c_int",6],["emenv",3]]]],[5,"_longjmp","","_longjmp",null,[[["c_int",6],["emenv",3]]]],[0,"libc","wasmer_emscripten","",null,null],[5,"current_sigrtmax","wasmer_emscripten::libc","",null,[[]]],[5,"current_sigrtmin","","",null,[[]]],[5,"endpwent","","",null,[[]]],[5,"execv","","",null,[[]]],[5,"fexecve","","",null,[[]]],[5,"fpathconf","","",null,[[]]],[5,"getitimer","","",null,[[]]],[5,"getpwent","","",null,[[]]],[5,"killpg","","",null,[[]]],[5,"pathconf","","",null,[[["emenv",3]]]],[5,"setpwent","","",null,[[]]],[5,"sigismember","","",null,[[]]],[5,"sigpending","","",null,[[]]],[0,"linking","wasmer_emscripten","",null,null],[5,"_dlopen","wasmer_emscripten::linking","emscripten: dlopen(filename: *const c_char, flag: c_int)…",null,[[["emenv",3]]]],[5,"_dlclose","","emscripten: dlclose(handle: *mut c_void) -> c_int",null,[[["emenv",3]]]],[5,"_dlsym","","emscripten: dlsym(handle: *mut c_void, symbol: *const…",null,[[["emenv",3]]]],[5,"_dlerror","","emscripten: dlerror() -> *mut c_char",null,[[["emenv",3]]]],[0,"lock","wasmer_emscripten","",null,null],[5,"___lock","wasmer_emscripten::lock","",null,[[["c_int",6],["emenv",3]]]],[5,"___unlock","","",null,[[["c_int",6],["emenv",3]]]],[5,"___wait","","",null,[[["emenv",3]]]],[5,"_flock","","",null,[[["emenv",3]]]],[0,"math","wasmer_emscripten","",null,null],[5,"_llvm_copysign_f32","wasmer_emscripten::math","",null,[[]]],[5,"_llvm_copysign_f64","","",null,[[]]],[5,"_llvm_log10_f64","","emscripten: _llvm_log10_f64",null,[[]]],[5,"_llvm_log2_f64","","emscripten: _llvm_log2_f64",null,[[]]],[5,"_llvm_sin_f64","","emscripten: _llvm_sin_f64",null,[[]]],[5,"_llvm_cos_f64","","emscripten: _llvm_cos_f64",null,[[]]],[5,"_llvm_log10_f32","","",null,[[]]],[5,"_llvm_log2_f32","","",null,[[]]],[5,"_llvm_exp2_f32","","",null,[[]]],[5,"_llvm_exp2_f64","","",null,[[]]],[5,"_llvm_trunc_f64","","",null,[[]]],[5,"_llvm_fma_f64","","",null,[[]]],[5,"_emscripten_random","","",null,[[["emenv",3]]]],[5,"f64_rem","","",null,[[]]],[5,"pow","","",null,[[]]],[5,"exp","","",null,[[]]],[5,"log","","",null,[[]]],[5,"sqrt","","",null,[[]]],[5,"floor","","",null,[[]]],[5,"fabs","","",null,[[]]],[5,"f64_to_int","","",null,[[]]],[0,"memory","wasmer_emscripten","",null,null],[5,"_emscripten_memcpy_big","wasmer_emscripten::memory","emscripten: _emscripten_memcpy_big",null,[[["emenv",3]]]],[5,"_emscripten_get_heap_size","","emscripten: _emscripten_get_heap_size",null,[[["emenv",3]]]],[5,"align_up","","",null,[[]]],[5,"_emscripten_resize_heap","","emscripten: _emscripten_resize_heap Note: this function…",null,[[["emenv",3]]]],[5,"sbrk","","emscripten: sbrk",null,[[["emenv",3]]]],[5,"get_total_memory","","emscripten: getTotalMemory",null,[[["emenv",3]]]],[5,"enlarge_memory","","emscripten: enlargeMemory",null,[[["emenv",3]]]],[5,"abort_on_cannot_grow_memory","","emscripten: abortOnCannotGrowMemory",null,[[["emenv",3]]]],[5,"abort_on_cannot_grow_memory_old","","emscripten: abortOnCannotGrowMemory",null,[[["emenv",3]]]],[5,"segfault","","emscripten: segfault",null,[[["emenv",3]]]],[5,"alignfault","","emscripten: alignfault",null,[[["emenv",3]]]],[5,"ftfault","","emscripten: ftfault",null,[[["emenv",3]]]],[5,"___map_file","","emscripten: ___map_file",null,[[["emenv",3]],["c_int",6]]],[0,"process","wasmer_emscripten","",null,null],[5,"abort_with_message","wasmer_emscripten::process","",null,[[["emenv",3]]]],[5,"em_abort","","The name of this call is `abort` but we want to avoid…",null,[[["emenv",3]]]],[5,"_abort","","",null,[[["emenv",3]]]],[5,"_prctl","","",null,[[["emenv",3]]]],[5,"_fork","","",null,[[["emenv",3]],["pid_t",6]]],[5,"_endgrent","","",null,[[["emenv",3]]]],[5,"_execve","","",null,[[["emenv",3]]]],[5,"_exit","","",null,[[["c_int",6],["emenv",3]]]],[5,"_kill","","",null,[[["emenv",3]]]],[5,"_sched_yield","","",null,[[["emenv",3]]]],[5,"_llvm_stacksave","","",null,[[["emenv",3]]]],[5,"_llvm_stackrestore","","",null,[[["emenv",3]]]],[5,"_raise","","",null,[[["emenv",3]]]],[5,"_sem_init","","",null,[[["emenv",3]]]],[5,"_sem_destroy","","",null,[[["emenv",3]]]],[5,"_sem_post","","",null,[[["emenv",3]]]],[5,"_sem_wait","","",null,[[["emenv",3]]]],[5,"_getgrent","","",null,[[["emenv",3]],["c_int",6]]],[5,"_setgrent","","",null,[[["emenv",3]]]],[5,"_setgroups","","",null,[[["emenv",3]]]],[5,"_setitimer","","",null,[[["emenv",3]]]],[5,"_usleep","","",null,[[["emenv",3]]]],[5,"_nanosleep","","",null,[[["emenv",3]]]],[5,"_utime","","",null,[[["emenv",3]]]],[5,"_utimes","","",null,[[["emenv",3]]]],[5,"_wait","","",null,[[["emenv",3]]]],[5,"_wait3","","",null,[[["emenv",3]]]],[5,"_wait4","","",null,[[["emenv",3]]]],[5,"_waitid","","",null,[[["emenv",3]]]],[5,"_waitpid","","",null,[[["emenv",3]]]],[5,"abort_stack_overflow","","",null,[[["c_int",6],["emenv",3]]]],[5,"_llvm_trap","","",null,[[["emenv",3]]]],[5,"_llvm_eh_typeid_for","","",null,[[["emenv",3]]]],[5,"_system","","",null,[[["emenv",3]],["c_int",6]]],[5,"_popen","","",null,[[["emenv",3]],["c_int",6]]],[6,"PidT","","",null,null],[0,"pthread","wasmer_emscripten","",null,null],[5,"_pthread_attr_destroy","wasmer_emscripten::pthread","",null,[[["emenv",3]]]],[5,"_pthread_attr_getstack","","",null,[[["emenv",3]]]],[5,"_pthread_attr_init","","",null,[[["emenv",3]]]],[5,"_pthread_attr_setstacksize","","",null,[[["emenv",3]]]],[5,"_pthread_cleanup_pop","","",null,[[["emenv",3]]]],[5,"_pthread_cleanup_push","","",null,[[["emenv",3]]]],[5,"_pthread_cond_destroy","","",null,[[["emenv",3]]]],[5,"_pthread_cond_init","","",null,[[["emenv",3]]]],[5,"_pthread_cond_signal","","",null,[[["emenv",3]]]],[5,"_pthread_cond_timedwait","","",null,[[["emenv",3]]]],[5,"_pthread_cond_wait","","",null,[[["emenv",3]]]],[5,"_pthread_condattr_destroy","","",null,[[["emenv",3]]]],[5,"_pthread_condattr_init","","",null,[[["emenv",3]]]],[5,"_pthread_condattr_setclock","","",null,[[["emenv",3]]]],[5,"_pthread_create","","",null,[[["emenv",3]]]],[5,"_pthread_detach","","",null,[[["emenv",3]]]],[5,"_pthread_equal","","",null,[[["emenv",3]]]],[5,"_pthread_exit","","",null,[[["emenv",3]]]],[5,"_pthread_getattr_np","","",null,[[["emenv",3]]]],[5,"_pthread_getspecific","","",null,[[["emenv",3]]]],[5,"_pthread_join","","",null,[[["emenv",3]]]],[5,"_pthread_self","","",null,[[["emenv",3]]]],[5,"_pthread_key_create","","",null,[[["emenv",3]]]],[5,"_pthread_mutex_destroy","","",null,[[["emenv",3]]]],[5,"_pthread_mutex_init","","",null,[[["emenv",3]]]],[5,"_pthread_mutexattr_destroy","","",null,[[["emenv",3]]]],[5,"_pthread_mutexattr_init","","",null,[[["emenv",3]]]],[5,"_pthread_mutexattr_settype","","",null,[[["emenv",3]]]],[5,"_pthread_once","","",null,[[["emenv",3]]]],[5,"_pthread_rwlock_destroy","","",null,[[["emenv",3]]]],[5,"_pthread_rwlock_init","","",null,[[["emenv",3]]]],[5,"_pthread_rwlock_rdlock","","",null,[[["emenv",3]]]],[5,"_pthread_rwlock_unlock","","",null,[[["emenv",3]]]],[5,"_pthread_rwlock_wrlock","","",null,[[["emenv",3]]]],[5,"_pthread_setcancelstate","","",null,[[["emenv",3]]]],[5,"_pthread_setspecific","","",null,[[["emenv",3]]]],[5,"_pthread_sigmask","","",null,[[["emenv",3]]]],[0,"ptr","wasmer_emscripten","This is a wrapper around the `WasmPtr` abstraction that…",null,null],[3,"Array","wasmer_emscripten::ptr","The `Array` marker type. This type can be used like…",null,null],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a `WasmNativeType`…",null,null],[16,"Native","","Native Wasm type.",8,null],[10,"from_native","","Convert a value of kind `Self::Native` to `Self`.",8,[[]]],[10,"to_native","","Convert self to `Self::Native`.",8,[[]]],[3,"Memory","","A WebAssembly `memory` instance.",null,null],[12,"store","","",9,null],[12,"memory","","",9,null],[8,"ValueType","","Trait for a Value type. A Value type is a type that is…",null,null],[3,"WasmPtr","","",null,null],[12,"0","","",10,null],[11,"new","","",10,[[]]],[11,"offset","","",10,[[]]],[11,"deref","","",10,[[["memory",3]],[["cell",3],["option",4]]]],[11,"deref_mut","","",10,[[["memory",3]],[["cell",3],["option",4]]]],[11,"deref","","",10,[[["memory",3]],["option",4]]],[11,"deref_mut","","",10,[[["memory",3]],["option",4]]],[11,"get_utf8_str","","",10,[[["memory",3]],["option",4]]],[11,"get_utf8_string","","",10,[[["memory",3]],[["option",4],["string",3]]]],[0,"signal","wasmer_emscripten","",null,null],[5,"_sigemptyset","wasmer_emscripten::signal","",null,[[["emenv",3]]]],[5,"_sigaction","","",null,[[["emenv",3]]]],[5,"_siginterrupt","","",null,[[["emenv",3]]]],[5,"_sigaddset","","",null,[[["emenv",3]]]],[5,"_sigsuspend","","",null,[[["emenv",3]]]],[5,"_sigprocmask","","",null,[[["emenv",3]]]],[5,"_signal","","",null,[[["emenv",3]]]],[0,"storage","wasmer_emscripten","",null,null],[5,"align_memory","wasmer_emscripten::storage","",null,[[]]],[5,"static_alloc","","",null,[[]]],[0,"syscalls","wasmer_emscripten","",null,null],[5,"___syscall1","wasmer_emscripten::syscalls","exit",null,[[["c_int",6],["varargs",3],["emenv",3]]]],[5,"___syscall3","","read",null,[[["varargs",3],["emenv",3]]]],[5,"___syscall4","","write",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall6","","close",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall12","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall10","","",null,[[["emenv",3]]]],[5,"___syscall14","","",null,[[["emenv",3]]]],[5,"___syscall15","","",null,[[["emenv",3]]]],[5,"___syscall20","","",null,[[["emenv",3]]]],[5,"___syscall21","","",null,[[["emenv",3]]]],[5,"___syscall25","","",null,[[["emenv",3]]]],[5,"___syscall29","","",null,[[["emenv",3]]]],[5,"___syscall32","","",null,[[["emenv",3]]]],[5,"___syscall33","","",null,[[["emenv",3]]]],[5,"___syscall36","","",null,[[["emenv",3]]]],[5,"___syscall38","","",null,[[["c_int",6],["varargs",3],["emenv",3]]]],[5,"___syscall40","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall42","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall51","","",null,[[["emenv",3]]]],[5,"___syscall52","","",null,[[["emenv",3]]]],[5,"___syscall53","","",null,[[["emenv",3]]]],[5,"___syscall60","","",null,[[["emenv",3]]]],[5,"___syscall63","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall64","","",null,[[["emenv",3]]]],[5,"___syscall66","","",null,[[["emenv",3]]]],[5,"___syscall75","","",null,[[["emenv",3]]]],[5,"___syscall91","","",null,[[["emenv",3]]]],[5,"___syscall96","","",null,[[["emenv",3]]]],[5,"___syscall97","","",null,[[["emenv",3]]]],[5,"___syscall110","","",null,[[["emenv",3]]]],[5,"___syscall121","","",null,[[["emenv",3]]]],[5,"___syscall125","","",null,[[["emenv",3]]]],[5,"___syscall133","","",null,[[["emenv",3]]]],[5,"___syscall144","","",null,[[["emenv",3]]]],[5,"___syscall147","","",null,[[["emenv",3]]]],[5,"___syscall150","","",null,[[["emenv",3]]]],[5,"___syscall151","","",null,[[["emenv",3]]]],[5,"___syscall152","","",null,[[["emenv",3]]]],[5,"___syscall153","","",null,[[["emenv",3]]]],[5,"___syscall163","","",null,[[["emenv",3]]]],[5,"___syscall183","","",null,[[["c_int",6],["varargs",3],["emenv",3]]]],[5,"___syscall192","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall140","","lseek",null,[[["varargs",3],["emenv",3]]]],[5,"___syscall145","","readv",null,[[["c_int",6],["varargs",3],["emenv",3]]]],[5,"___syscall146","","",null,[[["varargs",3],["emenv",3]]]],[5,"___syscall191","","",null,[[["varargs",3],["emenv",3]]]],[5,"___syscall193","","",null,[[["emenv",3]]]],[5,"___syscall195","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall197","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall209","","",null,[[["emenv",3]]]],[5,"___syscall211","","",null,[[["emenv",3]]]],[5,"___syscall218","","",null,[[["emenv",3]]]],[5,"___syscall268","","",null,[[["emenv",3]]]],[5,"___syscall269","","",null,[[["emenv",3]]]],[5,"___syscall272","","",null,[[["emenv",3]]]],[5,"___syscall295","","",null,[[["emenv",3]]]],[5,"___syscall296","","",null,[[["emenv",3]]]],[5,"___syscall297","","",null,[[["emenv",3]]]],[5,"___syscall298","","",null,[[["emenv",3]]]],[5,"___syscall300","","",null,[[["emenv",3]]]],[5,"___syscall301","","",null,[[["emenv",3]]]],[5,"___syscall302","","",null,[[["emenv",3]]]],[5,"___syscall303","","",null,[[["emenv",3]]]],[5,"___syscall304","","",null,[[["emenv",3]]]],[5,"___syscall305","","",null,[[["emenv",3]]]],[5,"___syscall306","","",null,[[["emenv",3]]]],[5,"___syscall307","","",null,[[["emenv",3]]]],[5,"___syscall308","","",null,[[["emenv",3]]]],[5,"___syscall320","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall331","","",null,[[["emenv",3]]]],[5,"___syscall333","","",null,[[["emenv",3]]]],[5,"___syscall334","","",null,[[["emenv",3]]]],[5,"___syscall337","","",null,[[["emenv",3]]]],[5,"___syscall340","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall345","","",null,[[["emenv",3]]]],[0,"unix","","",null,null],[3,"EmPollFd","wasmer_emscripten::syscalls::unix","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[5,"translate_ioctl","","",null,[[],["c_ulong",6]]],[5,"___syscall5","","open",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall9","","link",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall77","","getrusage",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall83","","symlink",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall85","","readlink",null,[[["c_int",6],["varargs",3],["emenv",3]]]],[5,"___syscall194","","ftruncate64",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall198","","lchown",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall205","","getgroups",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall212","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall219","","madvise",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall33","","access",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall34","","nice",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall39","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall41","","dup",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall200","","getgid32",null,[[["emenv",3]]]],[5,"___syscall201","","",null,[[["emenv",3]]]],[5,"___syscall202","","",null,[[["emenv",3]]]],[5,"___syscall207","","fchown",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall330","","dup3",null,[[["c_int",6],["varargs",3],["emenv",3]],["pid_t",6]]],[5,"___syscall54","","ioctl",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall102","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"translate_socket_name_flag","","OSX and BSD have completely different values, we must…",null,[[]]],[5,"___syscall132","","getpgid",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall168","","poll",null,[[["varargs",3],["emenv",3]]]],[5,"___syscall180","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall181","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall94","","fchmod",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall114","","wait4",null,[[["c_int",6],["varargs",3],["emenv",3]],["pid_t",6]]],[5,"___syscall118","","fsync",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall142","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall148","","fdatasync",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall57","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall122","","uname",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall196","","lstat64",null,[[["varargs",3],["emenv",3]]]],[5,"___syscall199","","",null,[[["emenv",3]]]],[5,"___syscall220","","",null,[[["varargs",3],["emenv",3]]]],[5,"___syscall221","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall324","","fallocate",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[17,"TCGETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"WASM_FIONBIO","","",null,null],[17,"WASM_FIOCLEX","","",null,null],[17,"WASM_TIOCSPGRP","","",null,null],[17,"WASM_TIOCGWINSZ","","",null,null],[17,"WASM_TCGETS","","",null,null],[17,"WASM_TCSETSW","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SOCK_NON_BLOCK","","",null,null],[17,"SOCK_CLOEXC","","",null,null],[0,"time","wasmer_emscripten","",null,null],[3,"guest_tm","wasmer_emscripten::time","",null,null],[12,"tm_sec","","",12,null],[12,"tm_min","","",12,null],[12,"tm_hour","","",12,null],[12,"tm_mday","","",12,null],[12,"tm_mon","","",12,null],[12,"tm_year","","",12,null],[12,"tm_wday","","",12,null],[12,"tm_yday","","",12,null],[12,"tm_isdst","","",12,null],[12,"tm_gmtoff","","",12,null],[12,"tm_zone","","",12,null],[5,"_gettimeofday","","emscripten: _gettimeofday",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_clock_getres","","",null,[[["emenv",3]]]],[5,"_clock_gettime","","emscripten: _clock_gettime",null,[[["c_int",6],["emenv",3],["clockid_t",6]],["c_int",6]]],[5,"_clock_settime","","",null,[[["emenv",3]]]],[5,"___clock_gettime","","emscripten: ___clock_gettime",null,[[["c_int",6],["emenv",3],["clockid_t",6]],["c_int",6]]],[5,"_clock","","emscripten: _clock",null,[[["emenv",3]],["c_int",6]]],[5,"_difftime","","emscripten: _difftime",null,[[["emenv",3]]]],[5,"_gmtime_r","","",null,[[["emenv",3]]]],[5,"_mktime","","",null,[[["emenv",3]]]],[5,"_gmtime","","",null,[[["emenv",3]]]],[5,"_tvset","","emscripten: _tvset",null,[[["emenv",3]]]],[5,"fmt_time","","formats time as a C string",null,[[["emenv",3]]]],[5,"_asctime","","emscripten: _asctime",null,[[["emenv",3]]]],[5,"_asctime_r","","emscripten: _asctime_r",null,[[["emenv",3]]]],[5,"_localtime","","emscripten: _localtime",null,[[["emenv",3]],["c_int",6]]],[5,"_localtime_r","","emscripten: _localtime_r",null,[[["emenv",3]],["c_int",6]]],[5,"_time","","emscripten: _time",null,[[["emenv",3]]]],[5,"_ctime_r","","",null,[[["emenv",3]]]],[5,"_ctime","","",null,[[["emenv",3]]]],[5,"_timegm","","emscripten: _timegm",null,[[["emenv",3]]]],[5,"_strftime","","emscripten: _strftime",null,[[["c_int",6],["emenv",3]]]],[5,"_strftime_l","","emscripten: _strftime_l",null,[[["c_int",6],["emenv",3]]]],[0,"ucontext","wasmer_emscripten","",null,null],[5,"_getcontext","wasmer_emscripten::ucontext","",null,[[["emenv",3]]]],[5,"_makecontext","","",null,[[["emenv",3]]]],[5,"_setcontext","","",null,[[["emenv",3]]]],[5,"_swapcontext","","",null,[[["emenv",3]]]],[0,"unistd","wasmer_emscripten","",null,null],[5,"confstr","wasmer_emscripten::unistd","",null,[[["emenv",3]]]],[0,"utils","wasmer_emscripten","",null,null],[3,"GuestStat","wasmer_emscripten::utils","",null,null],[12,"st_dev","","",13,null],[12,"__st_dev_padding","","",13,null],[12,"__st_ino_truncated","","",13,null],[12,"st_mode","","",13,null],[12,"st_nlink","","",13,null],[12,"st_uid","","",13,null],[12,"st_gid","","",13,null],[12,"st_rdev","","",13,null],[12,"__st_rdev_padding","","",13,null],[12,"st_size","","",13,null],[12,"st_blksize","","",13,null],[12,"st_blocks","","",13,null],[12,"st_atime","","",13,null],[12,"st_mtime","","",13,null],[12,"st_ctime","","",13,null],[12,"st_ino","","",13,null],[5,"is_emscripten_module","","We check if a provided module is an Emscripten generated one",null,[[["module",3]]]],[5,"get_emscripten_table_size","","",null,[[["module",3]],[["result",4],["string",3]]]],[5,"get_emscripten_memory_size","","",null,[[["module",3]],[["string",3],["result",4]]]],[5,"get_emscripten_metadata","","Reads values written by `-s EMIT_EMSCRIPTEN_METADATA=1`…",null,[[["module",3]],[["option",4],["string",3],["result",4]]]],[5,"write_to_buf","","",null,[[["emenv",3]]]],[5,"copy_cstr_into_wasm","","This function expects nullbyte to be appended.",null,[[["emenv",3]]]],[5,"allocate_on_stack","","",null,[[["emenv",3]]]],[5,"allocate_cstr_on_stack","","",null,[[["emenv",3]]]],[5,"copy_terminated_array_of_cstrs","","",null,[[["emenv",3]]]],[5,"copy_stat_into_wasm","","",null,[[["stat",3],["emenv",3]]]],[5,"read_string_from_wasm","","",null,[[["memory",3]],["string",3]]],[5,"get_cstr_path","","This function trys to find an entry in mapdir translating…",null,[[["emenv",3]],[["cstring",3],["option",4]]]],[5,"get_current_directory","","gets the current directory handles mapdir logic",null,[[["emenv",3]],[["option",4],["pathbuf",3]]]],[0,"varargs","wasmer_emscripten","",null,null],[3,"VarArgs","wasmer_emscripten::varargs","",null,null],[12,"pointer","","",14,null],[11,"get","","",14,[[["emenv",3]],["sized",8]]],[11,"get_str","","",14,[[["emenv",3]]]],[17,"TOTAL_STACK","wasmer_emscripten","",null,null],[17,"STATIC_BUMP","","",null,null],[17,"GLOBAL_BASE","","",null,null],[17,"STATIC_BASE","","",null,null],[17,"VERSION","","The current version of this crate",null,null],[11,"new","","",0,[[["pathbuf",3],["string",3],["hashmap",3],["emscriptenglobalsdata",3]]]],[11,"set_memory","","",0,[[["memory",3]]]],[11,"memory","","Get a reference to the memory",0,[[],["memory",3]]],[11,"malloc_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"malloc_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"free_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"free_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"memalign_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"memalign_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"memset_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"memset_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"stack_alloc_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"stack_alloc_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_i_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_i_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_ii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_ii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iifi_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iifi_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_v_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_v_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vi_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vi_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_dii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_dii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_diiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_diiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiiiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiiiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vd_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vd_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiiiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiiiiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iij_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iji_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiji_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_iiijj_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiijj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_j_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_j_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_ji_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_ji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_jii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_jii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_jij_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_jij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_jjj_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_jjj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiij_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiijiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiijiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiijiiiiii_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiijiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viij_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viiji_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viijiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viijiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viijj_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viijj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vj_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vjji_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vjji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vij_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viji_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vijiii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vijiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vijj_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vijj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viid_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viid_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_vidd_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vidd_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viidii_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viidii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"dyn_call_viidddddddd_ref","","Get access to the underlying data.",3,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viidddddddd_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"stack_save_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"stack_save_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"stack_restore_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"stack_restore_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"set_threw_ref","","Get access to the underlying data.",3,[[],[["option",4],["nativefunc",3]]]],[11,"set_threw_ref_unchecked","","Gets the item without checking if it\'s been initialized.",3,[[],["nativefunc",3]]],[11,"new","","",3,[[["pathbuf",3],["string",3],["emscriptenglobalsdata",3],["hashmap",3]],["emscriptendata",3]]],[11,"new","","",5,[[["module",3],["store",3]],[["string",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","wasmer_emscripten::env","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","wasmer_emscripten::jmp","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","wasmer_emscripten::ptr","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_array","","",10,[[]]],[11,"from_slice","","",10,[[],[["result",4],["tryfromsliceerror",3]]]],[11,"into_array","","",10,[[]]],[11,"empty_array","","",10,[[]]],[11,"from_c_struct","","",10,[[]]],[11,"into_c_struct","","",10,[[]]],[11,"wasm_types","","",10,[[]]],[11,"equivalent","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","wasmer_emscripten::syscalls::unix","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","wasmer_emscripten::time","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","wasmer_emscripten::utils","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","wasmer_emscripten::varargs","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from_array","","",14,[[]]],[11,"from_slice","","",14,[[],[["result",4],["tryfromsliceerror",3]]]],[11,"into_array","","",14,[[]]],[11,"empty_array","","",14,[[]]],[11,"from_c_struct","","",14,[[]]],[11,"into_c_struct","","",14,[[]]],[11,"wasm_types","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"to_export","wasmer_emscripten::ptr","",9,[[],["export",4]]],[11,"get_self_from_extern","","",9,[[["extern",4]],[["memory",3],["exporterror",4],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",9,[[],["memory",3]]],[11,"size_of_val","","",9,[[["memoryusagetracker",8]]]],[11,"clone","wasmer_emscripten::env","",6,[[],["emaddrinfo",3]]],[11,"clone","","",7,[[],["emsockaddr",3]]],[11,"clone","wasmer_emscripten::jmp","",15,[[],["longjumpret",3]]],[11,"clone","wasmer_emscripten::ptr","",10,[[]]],[11,"clone","wasmer_emscripten::syscalls::unix","",11,[[],["empollfd",3]]],[11,"clone","wasmer_emscripten::varargs","",14,[[],["varargs",3]]],[11,"clone","wasmer_emscripten","",0,[[],["emenv",3]]],[11,"clone","","",1,[[],["libcdirwrapper",3]]],[11,"clone","","",3,[[],["emscriptendata",3]]],[11,"clone","","",4,[[],["emscriptenglobalsdata",3]]],[11,"default","","",3,[[],["emscriptendata",3]]],[11,"default","","",4,[[],["emscriptenglobalsdata",3]]],[11,"eq","wasmer_emscripten::ptr","",10,[[]]],[11,"deref","wasmer_emscripten","",1,[[]]],[11,"deref","","",2,[[],["functiontype",3]]],[11,"fmt","wasmer_emscripten::env","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::jmp","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::ptr","",10,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::syscalls::unix","",11,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::jmp","",15,[[["formatter",3]],["result",6]]],[11,"initialize","wasmer_emscripten","",2,[[]]],[11,"init_with_instance","","",0,[[["instance",3]],[["hostenviniterror",4],["result",4]]]],[11,"init_with_instance","","",3,[[["instance",3]],[["result",4],["hostenviniterror",4]]]],[11,"to_native","wasmer_emscripten::ptr","",10,[[]]],[11,"from_native","","",10,[[]]],[11,"to_native","wasmer_emscripten::varargs","",14,[[]]],[11,"from_native","","",14,[[]]],[11,"new","wasmer_emscripten::ptr","Creates a new host `Memory` from the provided…",9,[[["store",3],["memorytype",3]],[["memoryerror",4],["result",4],["memory",3]]]],[11,"ty","","Returns the [`MemoryType`] of the `Memory`.",9,[[],["memorytype",3]]],[11,"store","","Returns the [`Store`] where the `Memory` belongs.",9,[[],["store",3]]],[11,"data_unchecked","","Retrieve a slice of the memory contents.",9,[[]]],[11,"data_unchecked_mut","","Retrieve a mutable slice of the memory contents.",9,[[]]],[11,"data_ptr","","Returns the pointer to the raw bytes of the `Memory`.",9,[[]]],[11,"data_size","","Returns the size (in bytes) of the `Memory`.",9,[[]]],[11,"size","","Returns the size (in [`Pages`]) of the `Memory`.",9,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of WebAssembly…",9,[[],[["pages",3],["result",4],["memoryerror",4]]]],[11,"view","","Return a \\\"view\\\" of the currently accessible memory. By…",9,[[],[["memoryview",3],["nonatomically",3]]]],[11,"same","","Returns whether or not these two memories refer to the…",9,[[["memory",3]]]]],"p":[[3,"EmEnv"],[3,"LibcDirWrapper"],[3,"OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG"],[3,"EmscriptenData"],[3,"EmscriptenGlobalsData"],[3,"EmscriptenGlobals"],[3,"EmAddrInfo"],[3,"EmSockAddr"],[8,"FromToNativeWasmType"],[3,"Memory"],[3,"WasmPtr"],[3,"EmPollFd"],[3,"guest_tm"],[3,"GuestStat"],[3,"VarArgs"],[3,"LongJumpRet"],[3,"Array"]]},\
"wasmer_engine":{"doc":"Generic Engine abstraction for Wasmer Engines.","i":[[3,"EngineId","wasmer_engine","A unique identifier for an Engine.",null,null],[12,"id","","",0,null],[3,"ExportFunction","","A function export value with an extra function pointer to…",null,null],[12,"vm_function","","The VM function, containing most of the data.",1,null],[12,"metadata","","Contains functions necessary to create and initialize host…",1,null],[3,"ExportFunctionMetadata","","Extra metadata about `ExportFunction`s.",null,null],[12,"host_env","","This field is stored here to be accessible by `Drop`.",2,null],[12,"import_init_function_ptr","","Function pointer to `WasmerEnv::init_with_instance(&mut…",2,null],[12,"host_env_clone_fn","","A function analogous to `Clone::clone` that returns a…",2,null],[12,"host_env_drop_fn","","The destructor to free the host environment.",2,null],[3,"ExportGlobal","","A global export value.",null,null],[12,"vm_global","","The VM global, containing info about the global.",3,null],[3,"ExportMemory","","A memory export value.",null,null],[12,"vm_memory","","The VM memory, containing info about the table.",4,null],[3,"ExportTable","","A table export value.",null,null],[12,"vm_table","","The VM table, containing info about the table.",5,null],[3,"NamedResolverChain","","A [`Resolver`] that links two resolvers together in a chain.",null,null],[12,"a","","",6,null],[12,"b","","",6,null],[3,"NullResolver","","`Resolver` implementation that always resolves to `None`.",null,null],[3,"RuntimeError","","A struct representing an aborted instruction execution,…",null,null],[12,"inner","","",7,null],[3,"FrameInfo","","Description of a frame in a backtrace for a…",null,null],[12,"module_name","","",8,null],[12,"func_index","","",8,null],[12,"function_name","","",8,null],[12,"func_start","","",8,null],[12,"instr","","",8,null],[3,"FunctionExtent","","Represents a continuous region of executable memory…",null,null],[12,"ptr","","Entry point for normal entry of the function. All…",9,null],[12,"length","","Length in bytes.",9,null],[3,"GlobalFrameInfoRegistration","","An RAII structure used to unregister a module\'s frame…",null,null],[12,"key","","The key that will be removed from the global `ranges` map…",10,null],[3,"FRAME_INFO","","This is a global cache of backtrace frame information for…",null,null],[12,"__private_field","","",11,null],[4,"DeserializeError","","The Deserialize error can occur when loading a compiled…",null,null],[13,"Io","","An IO error",12,null],[13,"Generic","","A generic deserialization error",12,null],[13,"Incompatible","","Incompatible serialized binary",12,null],[13,"CorruptedBinary","","The provided binary is corrupted",12,null],[13,"Compiler","","The binary was valid, but we got an error when trying to…",12,null],[4,"ImportError","","An ImportError.",null,null],[13,"IncompatibleType","","Incompatible Import Type. This error occurs when the…",13,null],[13,"UnknownImport","","Unknown Import. This error occurs when an import was…",13,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",14,null],[13,"Start","","A runtime error occured while invoking the start function",14,null],[4,"LinkError","","The WebAssembly.LinkError object indicates an error during…",null,null],[13,"Import","","An error occurred when checking the import types.",15,null],[13,"Trap","","A trap ocurred during linking.",15,null],[13,"Resource","","Insufficient resources available for linking.",15,null],[4,"SerializeError","","The Serialize error can occur when serializing a compiled…",null,null],[13,"Io","","An IO error",16,null],[13,"Generic","","A generic serialization error",16,null],[4,"Export","","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",17,null],[13,"Table","","A table export value.",17,null],[13,"Memory","","A memory export value.",17,null],[13,"Global","","A global export value.",17,null],[4,"SerializableFunctionFrameInfo","","We hold the frame info in two states, mainly because we…",null,null],[13,"Unprocessed","","The unprocessed frame info (binary)",18,null],[13,"Processed","","The processed frame info (memory struct)",18,null],[5,"resolve_imports","","This function allows to match all imports of a…",null,[[["boxedslice",3],["resolver",8],["moduleinfo",3],["primarymap",3],["primarymap",3]],[["result",4],["imports",3],["linkerror",4]]]],[5,"register_frame_info","","Registers a new compiled module\'s frame information.",null,[[["arc",3],["serializablefunctionframeinfo",4],["boxedslice",3],["primarymap",3],["moduleinfo",3],["localfunctionindex",3]],[["globalframeinforegistration",3],["option",4]]]],[0,"artifact","","",null,null],[8,"Artifact","wasmer_engine::artifact","An `Artifact` is the product that the `Engine`…",null,null],[10,"module","","Return a reference-counted pointer to the module",19,[[],[["arc",3],["moduleinfo",3]]]],[10,"module_ref","","Return a pointer to a module.",19,[[],["moduleinfo",3]]],[10,"module_mut","","Gets a mutable reference to the info.",19,[[],[["moduleinfo",3],["option",4]]]],[10,"register_frame_info","","Register thie `Artifact` stack frame information into the…",19,[[]]],[10,"features","","Returns the features for this Artifact",19,[[],["features",3]]],[10,"memory_styles","","Returns the memory styles associated with this `Artifact`.",19,[[],["primarymap",3]]],[10,"table_styles","","Returns the table plans associated with this `Artifact`.",19,[[],["primarymap",3]]],[10,"data_initializers","","Returns data initializers to pass to…",19,[[]]],[10,"finished_functions","","Returns the functions allocated in memory or this…",19,[[],["boxedslice",3]]],[10,"finished_function_call_trampolines","","Returns the function call trampolines allocated in memory…",19,[[],["boxedslice",3]]],[10,"finished_dynamic_function_trampolines","","Returns the dynamic function trampolines allocated in…",19,[[],["boxedslice",3]]],[10,"signatures","","Returns the associated VM signatures for this `Artifact`.",19,[[],["boxedslice",3]]],[10,"serialize","","Serializes an artifact into bytes",19,[[],[["result",4],["vec",3],["serializeerror",4]]]],[11,"serialize_to_file","","Serializes an artifact into a file path",19,[[["path",3]],[["result",4],["serializeerror",4]]]],[11,"preinstantiate","","Do preinstantiation logic that is executed before…",19,[[],[["result",4],["instantiationerror",4]]]],[11,"instantiate","","Crate an `Instance` from this `Artifact`.",19,[[["resolver",8],["tunables",8],["any",8],["box",3]],[["instancehandle",3],["result",4],["instantiationerror",4]]]],[11,"finish_instantiation","","Finishes the instantiation of a just created…",19,[[["instancehandle",3]],[["result",4],["instantiationerror",4]]]],[8,"Upcastable","","Trait needed to get downcasting from `WasiFile` to work.",null,null],[10,"upcast_any_ref","","",20,[[],["any",8]]],[10,"upcast_any_mut","","",20,[[],["any",8]]],[10,"upcast_any_box","","",20,[[["box",3]],[["any",8],["box",3]]]],[11,"downcast_ref","","Try to downcast the artifact into a given type.",19,[[],["option",4]]],[11,"downcast_mut","","Try to downcast the artifact into a given type mutably.",19,[[],["option",4]]],[0,"engine","wasmer_engine","JIT compilation.",null,null],[3,"EngineId","wasmer_engine::engine","A unique identifier for an Engine.",null,null],[12,"id","","",0,null],[8,"Engine","","A unimplemented Wasmer `Engine`.",null,null],[10,"target","","Gets the target",21,[[],["target",3]]],[10,"register_signature","","Register a signature",21,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[10,"lookup_signature","","Lookup a signature",21,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[10,"validate","","Validates a WebAssembly module",21,[[],[["result",4],["compileerror",4]]]],[10,"compile","","Compile a WebAssembly binary",21,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[10,"deserialize","","Deserializes a WebAssembly module",21,[[],[["deserializeerror",4],["arc",3],["result",4]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path",21,[[["path",3]],[["deserializeerror",4],["arc",3],["result",4]]]],[10,"id","","A unique identifier for this object.",21,[[],["engineid",3]]],[10,"cloned","","Clone the engine",21,[[],[["engine",8],["arc",3]]]],[11,"id","wasmer_engine","Format this identifier as a string.",0,[[],["string",3]]],[0,"error","","The WebAssembly possible errors",null,null],[4,"SerializeError","wasmer_engine::error","The Serialize error can occur when serializing a compiled…",null,null],[13,"Io","","An IO error",16,null],[13,"Generic","","A generic serialization error",16,null],[4,"DeserializeError","","The Deserialize error can occur when loading a compiled…",null,null],[13,"Io","","An IO error",12,null],[13,"Generic","","A generic deserialization error",12,null],[13,"Incompatible","","Incompatible serialized binary",12,null],[13,"CorruptedBinary","","The provided binary is corrupted",12,null],[13,"Compiler","","The binary was valid, but we got an error when trying to…",12,null],[4,"ImportError","","An ImportError.",null,null],[13,"IncompatibleType","","Incompatible Import Type. This error occurs when the…",13,null],[13,"UnknownImport","","Unknown Import. This error occurs when an import was…",13,null],[4,"LinkError","","The WebAssembly.LinkError object indicates an error during…",null,null],[13,"Import","","An error occurred when checking the import types.",15,null],[13,"Trap","","A trap ocurred during linking.",15,null],[13,"Resource","","Insufficient resources available for linking.",15,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",14,null],[13,"Start","","A runtime error occured while invoking the start function",14,null],[0,"export","wasmer_engine","",null,null],[3,"ExportFunctionMetadata","wasmer_engine::export","Extra metadata about `ExportFunction`s.",null,null],[12,"host_env","","This field is stored here to be accessible by `Drop`.",2,null],[12,"import_init_function_ptr","","Function pointer to `WasmerEnv::init_with_instance(&mut…",2,null],[12,"host_env_clone_fn","","A function analogous to `Clone::clone` that returns a…",2,null],[12,"host_env_drop_fn","","The destructor to free the host environment.",2,null],[3,"ExportFunction","","A function export value with an extra function pointer to…",null,null],[12,"vm_function","","The VM function, containing most of the data.",1,null],[12,"metadata","","Contains functions necessary to create and initialize host…",1,null],[3,"ExportTable","","A table export value.",null,null],[12,"vm_table","","The VM table, containing info about the table.",5,null],[3,"ExportMemory","","A memory export value.",null,null],[12,"vm_memory","","The VM memory, containing info about the table.",4,null],[3,"ExportGlobal","","A global export value.",null,null],[12,"vm_global","","The VM global, containing info about the global.",3,null],[4,"Export","","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",17,null],[13,"Table","","A table export value.",17,null],[13,"Memory","","A memory export value.",17,null],[13,"Global","","A global export value.",17,null],[11,"new","wasmer_engine","Create an `ExportFunctionMetadata` type with information…",2,[[["option",4],["importinitializerfuncptr",6]]]],[0,"resolver","","Define the `Resolver` trait, allowing custom resolution…",null,null],[3,"NullResolver","wasmer_engine::resolver","`Resolver` implementation that always resolves to `None`.",null,null],[3,"NamedResolverChain","","A [`Resolver`] that links two resolvers together in a chain.",null,null],[12,"a","","",6,null],[12,"b","","",6,null],[5,"get_extern_from_import","","Get an `ExternType` given a import index.",null,[[["importindex",4],["moduleinfo",3]],["externtype",4]]],[5,"get_extern_from_export","","Get an `ExternType` given an export (and Engine signatures…",null,[[["export",4],["moduleinfo",3]],["externtype",4]]],[5,"resolve_imports","","This function allows to match all imports of a…",null,[[["boxedslice",3],["resolver",8],["moduleinfo",3],["primarymap",3],["primarymap",3]],[["result",4],["imports",3],["linkerror",4]]]],[8,"Resolver","","Import resolver connects imports with available exported…",null,null],[10,"resolve","","Resolves an import a WebAssembly module to an export it\'s…",22,[[],[["option",4],["export",4]]]],[8,"NamedResolver","","Import resolver connects imports with available exported…",null,null],[10,"resolve_by_name","","Resolves an import a WebAssembly module to an export it\'s…",23,[[],[["option",4],["export",4]]]],[8,"ChainableNamedResolver","","A trait for chaining resolvers together.",null,null],[11,"chain_front","","Chain a resolver in front of the current resolver.",24,[[],["namedresolverchain",3]]],[11,"chain_back","","Chain a resolver behind the current resolver.",24,[[],["namedresolverchain",3]]],[0,"serialize","wasmer_engine","",null,null],[3,"UnprocessedFunctionFrameInfo","wasmer_engine::serialize","This is the unserialized verison of…",null,null],[12,"bytes","","",25,null],[3,"FunctionFrameInfoVisitor","","",null,null],[4,"SerializableFunctionFrameInfo","","We hold the frame info in two states, mainly because we…",null,null],[13,"Unprocessed","","The unprocessed frame info (binary)",18,null],[13,"Processed","","The processed frame info (memory struct)",18,null],[11,"deserialize","","Converts the `UnprocessedFunctionFrameInfo` to a…",25,[[],["compiledfunctionframeinfo",3]]],[11,"serialize","","Converts the `CompiledFunctionFrameInfo` to a…",25,[[["compiledfunctionframeinfo",3]]]],[11,"is_unprocessed","wasmer_engine","Returns true if the extra function info is not yet processed",18,[[]]],[0,"trap","","",null,null],[0,"error","wasmer_engine::trap","",null,null],[3,"RuntimeError","wasmer_engine::trap::error","A struct representing an aborted instruction execution,…",null,null],[12,"inner","","",7,null],[3,"RuntimeErrorInner","","",null,null],[12,"source","","The source error (this can be a custom user `Error` or a…",26,null],[12,"wasm_trace","","The reconstructed Wasm trace (from the native trace and…",26,null],[12,"native_trace","","The native backtrace",26,null],[4,"RuntimeErrorSource","","The source of the `RuntimeError`.",null,null],[13,"Generic","","",27,null],[13,"User","","",27,null],[13,"Trap","","",27,null],[5,"_assert_trap_is_sync_and_send","","",null,[[["trap",4]]]],[11,"new","wasmer_engine","Creates a new generic `RuntimeError` with the given…",7,[[["string",3],["into",8]]]],[11,"from_trap","","Create a new RuntimeError from a Trap.",7,[[["trap",4]]]],[11,"raise","","Raises a custom user Error",7,[[["box",3],["error",8]]]],[11,"new_with_trace","","",7,[[["rwlockreadguard",3],["option",4],["globalframeinfo",3],["runtimeerrorsource",4],["backtrace",3]]]],[11,"message","","Returns a reference the `message` stored in `Trap`.",7,[[],["string",3]]],[11,"trace","","Returns a list of function frames in WebAssembly code that…",7,[[]]],[11,"downcast","","Attempts to downcast the `RuntimeError` to a concrete type.",7,[[],[["error",8],["result",4]]]],[11,"to_trap","","Returns trap code, if it\'s a Trap",7,[[],[["option",4],["trapcode",4]]]],[11,"is","","Returns true if the `RuntimeError` is the same as T",7,[[]]],[0,"frame_info","wasmer_engine::trap","This module is used for having backtraces in the Wasm…",null,null],[3,"FRAME_INFO","wasmer_engine::trap::frame_info","This is a global cache of backtrace frame information for…",null,null],[12,"__private_field","","",11,null],[3,"GlobalFrameInfo","","",null,null],[12,"ranges","","An internal map that keeps track of backtrace frame…",28,null],[3,"GlobalFrameInfoRegistration","","An RAII structure used to unregister a module\'s frame…",null,null],[12,"key","","The key that will be removed from the global `ranges` map…",10,null],[3,"ModuleInfoFrameInfo","","",null,null],[12,"start","","",29,null],[12,"functions","","",29,null],[12,"module","","",29,null],[12,"frame_infos","","",29,null],[3,"FunctionInfo","","",null,null],[12,"start","","",30,null],[12,"local_index","","",30,null],[3,"FunctionExtent","","Represents a continuous region of executable memory…",null,null],[12,"ptr","","Entry point for normal entry of the function. All…",9,null],[12,"length","","Length in bytes.",9,null],[3,"FrameInfo","","Description of a frame in a backtrace for a…",null,null],[12,"module_name","","",8,null],[12,"func_index","","",8,null],[12,"function_name","","",8,null],[12,"func_start","","",8,null],[12,"instr","","",8,null],[5,"register","","Registers a new compiled module\'s frame information.",null,[[["arc",3],["serializablefunctionframeinfo",4],["boxedslice",3],["primarymap",3],["moduleinfo",3],["localfunctionindex",3]],[["globalframeinforegistration",3],["option",4]]]],[11,"function_debug_info","","",29,[[["localfunctionindex",3]],["serializablefunctionframeinfo",4]]],[11,"process_function_debug_info","","",29,[[["localfunctionindex",3]]]],[11,"processed_function_frame_info","","",29,[[["localfunctionindex",3]],["compiledfunctionframeinfo",3]]],[11,"function_info","","Gets a function given a pc",29,[[],[["functioninfo",3],["option",4]]]],[11,"lookup_frame_info","","Fetches frame information about a program counter in a…",28,[[],[["option",4],["frameinfo",3]]]],[11,"lookup_trap_info","","Fetches trap information about a program counter in a…",28,[[],[["trapinformation",3],["option",4]]]],[11,"should_process_frame","","Should process the frame before anything?",28,[[],["option",4]]],[11,"maybe_process_frame","","Process the frame info in case is not yet processed",28,[[],["option",4]]],[11,"module_info","","Gets a module given a pc",28,[[],[["option",4],["moduleinfoframeinfo",3]]]],[11,"module_info_mut","","Gets a module given a pc",28,[[],[["moduleinfoframeinfo",3],["option",4]]]],[11,"func_index","wasmer_engine","Returns the WebAssembly function index for this frame.",8,[[]]],[11,"module_name","","Returns the identifer of the module that this frame is for.",8,[[]]],[11,"function_name","","Returns a descriptive name of the function for this frame,…",8,[[],["option",4]]],[11,"module_offset","","Returns the offset within the original wasm module this…",8,[[]]],[11,"func_offset","","Returns the offset from the original wasm module\'s…",8,[[]]],[0,"tunables","","",null,null],[8,"Tunables","wasmer_engine::tunables","An engine delegates the creation of memories, tables, and…",null,null],[10,"memory_style","","Construct a `MemoryStyle` for the provided `MemoryType`",31,[[["memorytype",3]],["memorystyle",4]]],[10,"table_style","","Construct a `TableStyle` for the provided `TableType`",31,[[["tabletype",3]],["tablestyle",4]]],[10,"create_host_memory","","Create a memory owned by the host given a [`MemoryType`]…",31,[[["memorystyle",4],["memorytype",3]],[["result",4],["arc",3],["memoryerror",4]]]],[10,"create_vm_memory","","Create a memory owned by the VM given a [`MemoryType`] and…",31,[[["vmmemorydefinition",3],["memorystyle",4],["nonnull",3],["memorytype",3]],[["result",4],["arc",3],["memoryerror",4]]]],[10,"create_host_table","","Create a table owned by the host given a [`TableType`] and…",31,[[["tablestyle",4],["tabletype",3]],[["arc",3],["result",4],["string",3]]]],[10,"create_vm_table","","Create a table owned by the VM given a [`TableType`] and a…",31,[[["nonnull",3],["tabletype",3],["tablestyle",4],["vmtabledefinition",3]],[["arc",3],["result",4],["string",3]]]],[11,"create_global","","Create a global with an unset value.",31,[[["globaltype",3]],[["string",3],["result",4],["arc",3]]]],[11,"create_memories","","Allocate memory for just the memories of the current module.",31,[[["primarymap",3],["moduleinfo",3]],[["linkerror",4],["primarymap",3],["result",4]]]],[11,"create_tables","","Allocate memory for just the tables of the current module.",31,[[["primarymap",3],["moduleinfo",3]],[["linkerror",4],["result",4],["primarymap",3]]]],[11,"create_globals","","Allocate memory for just the globals of the current…",31,[[["moduleinfo",3]],[["primarymap",3],["linkerror",4],["result",4]]]],[17,"VERSION","wasmer_engine","Version number of this crate.",null,null],[8,"Artifact","","An `Artifact` is the product that the `Engine`…",null,null],[10,"module","","Return a reference-counted pointer to the module",19,[[],[["arc",3],["moduleinfo",3]]]],[10,"module_ref","","Return a pointer to a module.",19,[[],["moduleinfo",3]]],[10,"module_mut","","Gets a mutable reference to the info.",19,[[],[["moduleinfo",3],["option",4]]]],[10,"register_frame_info","","Register thie `Artifact` stack frame information into the…",19,[[]]],[10,"features","","Returns the features for this Artifact",19,[[],["features",3]]],[10,"memory_styles","","Returns the memory styles associated with this `Artifact`.",19,[[],["primarymap",3]]],[10,"table_styles","","Returns the table plans associated with this `Artifact`.",19,[[],["primarymap",3]]],[10,"data_initializers","","Returns data initializers to pass to…",19,[[]]],[10,"finished_functions","","Returns the functions allocated in memory or this…",19,[[],["boxedslice",3]]],[10,"finished_function_call_trampolines","","Returns the function call trampolines allocated in memory…",19,[[],["boxedslice",3]]],[10,"finished_dynamic_function_trampolines","","Returns the dynamic function trampolines allocated in…",19,[[],["boxedslice",3]]],[10,"signatures","","Returns the associated VM signatures for this `Artifact`.",19,[[],["boxedslice",3]]],[10,"serialize","","Serializes an artifact into bytes",19,[[],[["result",4],["vec",3],["serializeerror",4]]]],[11,"serialize_to_file","wasmer_engine::artifact","Serializes an artifact into a file path",19,[[["path",3]],[["result",4],["serializeerror",4]]]],[11,"preinstantiate","","Do preinstantiation logic that is executed before…",19,[[],[["result",4],["instantiationerror",4]]]],[11,"instantiate","","Crate an `Instance` from this `Artifact`.",19,[[["resolver",8],["tunables",8],["any",8],["box",3]],[["instancehandle",3],["result",4],["instantiationerror",4]]]],[11,"finish_instantiation","","Finishes the instantiation of a just created…",19,[[["instancehandle",3]],[["result",4],["instantiationerror",4]]]],[8,"Engine","wasmer_engine","A unimplemented Wasmer `Engine`.",null,null],[10,"target","","Gets the target",21,[[],["target",3]]],[10,"register_signature","","Register a signature",21,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[10,"lookup_signature","","Lookup a signature",21,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[10,"validate","","Validates a WebAssembly module",21,[[],[["result",4],["compileerror",4]]]],[10,"compile","","Compile a WebAssembly binary",21,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[10,"deserialize","","Deserializes a WebAssembly module",21,[[],[["deserializeerror",4],["arc",3],["result",4]]]],[11,"deserialize_from_file","wasmer_engine::engine","Deserializes a WebAssembly module from a path",21,[[["path",3]],[["deserializeerror",4],["arc",3],["result",4]]]],[10,"id","wasmer_engine","A unique identifier for this object.",21,[[],["engineid",3]]],[10,"cloned","","Clone the engine",21,[[],[["engine",8],["arc",3]]]],[8,"ChainableNamedResolver","","A trait for chaining resolvers together.",null,null],[11,"chain_front","wasmer_engine::resolver","Chain a resolver in front of the current resolver.",24,[[],["namedresolverchain",3]]],[11,"chain_back","","Chain a resolver behind the current resolver.",24,[[],["namedresolverchain",3]]],[8,"NamedResolver","wasmer_engine","Import resolver connects imports with available exported…",null,null],[10,"resolve_by_name","","Resolves an import a WebAssembly module to an export it\'s…",23,[[],[["option",4],["export",4]]]],[8,"Resolver","","Import resolver connects imports with available exported…",null,null],[10,"resolve","","Resolves an import a WebAssembly module to an export it\'s…",22,[[],[["option",4],["export",4]]]],[8,"Tunables","","An engine delegates the creation of memories, tables, and…",null,null],[10,"memory_style","","Construct a `MemoryStyle` for the provided `MemoryType`",31,[[["memorytype",3]],["memorystyle",4]]],[10,"table_style","","Construct a `TableStyle` for the provided `TableType`",31,[[["tabletype",3]],["tablestyle",4]]],[10,"create_host_memory","","Create a memory owned by the host given a [`MemoryType`]…",31,[[["memorystyle",4],["memorytype",3]],[["result",4],["arc",3],["memoryerror",4]]]],[10,"create_vm_memory","","Create a memory owned by the VM given a [`MemoryType`] and…",31,[[["vmmemorydefinition",3],["memorystyle",4],["nonnull",3],["memorytype",3]],[["result",4],["arc",3],["memoryerror",4]]]],[10,"create_host_table","","Create a table owned by the host given a [`TableType`] and…",31,[[["tablestyle",4],["tabletype",3]],[["arc",3],["result",4],["string",3]]]],[10,"create_vm_table","","Create a table owned by the VM given a [`TableType`] and a…",31,[[["nonnull",3],["tabletype",3],["tablestyle",4],["vmtabledefinition",3]],[["arc",3],["result",4],["string",3]]]],[11,"create_global","wasmer_engine::tunables","Create a global with an unset value.",31,[[["globaltype",3]],[["string",3],["result",4],["arc",3]]]],[11,"create_memories","","Allocate memory for just the memories of the current module.",31,[[["primarymap",3],["moduleinfo",3]],[["linkerror",4],["primarymap",3],["result",4]]]],[11,"create_tables","","Allocate memory for just the tables of the current module.",31,[[["primarymap",3],["moduleinfo",3]],[["linkerror",4],["result",4],["primarymap",3]]]],[11,"create_globals","","Allocate memory for just the globals of the current…",31,[[["moduleinfo",3]],[["primarymap",3],["linkerror",4],["result",4]]]],[11,"from","wasmer_engine","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","wasmer_engine::serialize","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","wasmer_engine::trap::error","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","wasmer_engine::trap::frame_info","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"resolve","wasmer_engine","",32,[[],[["option",4],["export",4]]]],[11,"resolve_by_name","","",6,[[],[["option",4],["export",4]]]],[11,"drop","","",2,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",16,[[["error",3]]]],[11,"from","","",12,[[["error",3]]]],[11,"from","","",17,[[["vmexport",4]]]],[11,"from","","",17,[[["exportfunction",3]]]],[11,"from","","",17,[[["exporttable",3]]]],[11,"from","","",17,[[["exportmemory",3]]]],[11,"from","","",17,[[["exportglobal",3]]]],[11,"from","","",7,[[["trap",4]]]],[11,"clone","","",0,[[]]],[11,"clone","","",17,[[],["export",4]]],[11,"clone","","",1,[[],["exportfunction",3]]],[11,"clone","","",5,[[],["exporttable",3]]],[11,"clone","","",4,[[],["exportmemory",3]]],[11,"clone","","",3,[[],["exportglobal",3]]],[11,"clone","","",6,[[]]],[11,"clone","wasmer_engine::serialize","",25,[[],["unprocessedfunctionframeinfo",3]]],[11,"clone","wasmer_engine","",18,[[],["serializablefunctionframeinfo",4]]],[11,"clone","","",7,[[],["runtimeerror",3]]],[11,"clone","","",8,[[],["frameinfo",3]]],[11,"default","","",0,[[]]],[11,"default","wasmer_engine::trap::frame_info","",28,[[],["globalframeinfo",3]]],[11,"cmp","wasmer_engine","",0,[[["engineid",3]],["ordering",4]]],[11,"eq","","",0,[[["engineid",3]]]],[11,"ne","","",0,[[["engineid",3]]]],[11,"eq","","",2,[[["exportfunctionmetadata",3]]]],[11,"ne","","",2,[[["exportfunctionmetadata",3]]]],[11,"eq","","",1,[[["exportfunction",3]]]],[11,"ne","","",1,[[["exportfunction",3]]]],[11,"partial_cmp","","",0,[[["engineid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["engineid",3]]]],[11,"le","","",0,[[["engineid",3]]]],[11,"gt","","",0,[[["engineid",3]]]],[11,"ge","","",0,[[["engineid",3]]]],[11,"deref","","",11,[[],["rwlock",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::trap::error","",27,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::trap::frame_info","",30,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::trap::error","",27,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine","",7,[[["formatter",3]],["result",6]]],[11,"source","","",16,[[],[["option",4],["error",8]]]],[11,"source","","",12,[[],[["option",4],["error",8]]]],[11,"source","","",15,[[],[["option",4],["error",8]]]],[11,"source","","",14,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"size_of_val","","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine::serialize","",25,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine","",18,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",10,[[["memoryusagetracker",8]]]],[11,"deserialize","wasmer_engine::serialize","",25,[[],["result",4]]],[11,"deserialize","wasmer_engine","",18,[[],["result",4]]],[11,"expecting","wasmer_engine::serialize","",33,[[["formatter",3]],["result",6]]],[11,"visit_byte_buf","","",33,[[["vec",3]],["result",4]]],[11,"visit_bytes","","",33,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","wasmer_engine","",18,[[],["result",4]]],[11,"initialize","","",11,[[]]]],"p":[[3,"EngineId"],[3,"ExportFunction"],[3,"ExportFunctionMetadata"],[3,"ExportGlobal"],[3,"ExportMemory"],[3,"ExportTable"],[3,"NamedResolverChain"],[3,"RuntimeError"],[3,"FrameInfo"],[3,"FunctionExtent"],[3,"GlobalFrameInfoRegistration"],[3,"FRAME_INFO"],[4,"DeserializeError"],[4,"ImportError"],[4,"InstantiationError"],[4,"LinkError"],[4,"SerializeError"],[4,"Export"],[4,"SerializableFunctionFrameInfo"],[8,"Artifact"],[8,"Upcastable"],[8,"Engine"],[8,"Resolver"],[8,"NamedResolver"],[8,"ChainableNamedResolver"],[3,"UnprocessedFunctionFrameInfo"],[3,"RuntimeErrorInner"],[4,"RuntimeErrorSource"],[3,"GlobalFrameInfo"],[3,"ModuleInfoFrameInfo"],[3,"FunctionInfo"],[8,"Tunables"],[3,"NullResolver"],[3,"FunctionFrameInfoVisitor"]]},\
"wasmer_engine_dummy":{"doc":"","i":[[3,"DummyArtifact","wasmer_engine_dummy","A Dummy artifact.",null,null],[12,"metadata","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[3,"DummyEngine","","A WebAssembly `Dummy` Engine.",null,null],[12,"signatures","","",1,null],[12,"features","","",1,null],[12,"target","","",1,null],[12,"engine_id","","",1,null],[0,"artifact","","Define `DummyArtifact` to allow compiling and…",null,null],[3,"DummyArtifactMetadata","wasmer_engine_dummy::artifact","Serializable struct for the artifact",null,null],[12,"module","","",2,null],[12,"features","","",2,null],[12,"data_initializers","","",2,null],[12,"memory_styles","","",2,null],[12,"table_styles","","",2,null],[3,"DummyArtifact","","A Dummy artifact.",null,null],[12,"metadata","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[5,"dummy_function","","",null,[[]]],[5,"dummy_trampoline","","",null,[[]]],[18,"MAGIC_HEADER","wasmer_engine_dummy","",0,null],[11,"is_deserializable","","Check if the provided bytes look like a serialized…",0,[[]]],[11,"new","","Compile a data buffer into a `DummyArtifact`, which may…",0,[[["tunables",8],["dummyengine",3]],[["result",4],["compileerror",4]]]],[11,"deserialize","","Deserialize a DummyArtifact",0,[[["dummyengine",3]],[["result",4],["deserializeerror",4]]]],[11,"from_parts","","Construct a `DummyArtifact` from component parts.",0,[[["dummyartifactmetadata",3],["dummyengine",3]],[["result",4],["compileerror",4]]]],[0,"engine","","Dummy Engine.",null,null],[3,"DummyEngine","wasmer_engine_dummy::engine","A WebAssembly `Dummy` Engine.",null,null],[12,"signatures","","",1,null],[12,"features","","",1,null],[12,"target","","",1,null],[12,"engine_id","","",1,null],[5,"dummy_trampoline","","",null,[[]]],[11,"new","wasmer_engine_dummy","",1,[[]]],[11,"features","","",1,[[],["features",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","wasmer_engine_dummy::artifact","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","wasmer_engine_dummy","",1,[[],["dummyengine",3]]],[11,"size_of_val","wasmer_engine_dummy::artifact","",2,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_dummy","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]]]],[11,"deserialize","wasmer_engine_dummy::artifact","",2,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"module","wasmer_engine_dummy","",0,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",0,[[],["moduleinfo",3]]],[11,"module_mut","","",0,[[],[["moduleinfo",3],["option",4]]]],[11,"register_frame_info","","",0,[[]]],[11,"features","","",0,[[],["features",3]]],[11,"data_initializers","","",0,[[]]],[11,"memory_styles","","",0,[[],["primarymap",3]]],[11,"table_styles","","",0,[[],["primarymap",3]]],[11,"finished_functions","","",0,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",0,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",0,[[],["boxedslice",3]]],[11,"signatures","","",0,[[],["boxedslice",3]]],[11,"serialize","","",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"target","","Get the tunables",1,[[],["target",3]]],[11,"register_signature","","Register a signature",1,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"lookup_signature","","Lookup a signature",1,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",1,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",1,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[11,"deserialize","","Deserializes a WebAssembly module (binary content of a…",1,[[],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"id","","",1,[[],["engineid",3]]],[11,"cloned","","",1,[[],[["arc",3],["engine",8]]]]],"p":[[3,"DummyArtifact"],[3,"DummyEngine"],[3,"DummyArtifactMetadata"]]},\
"wasmer_engine_jit":{"doc":"JIT backend for Wasmer compilers.","i":[[3,"JITArtifact","wasmer_engine_jit","A compiled wasm module, ready to be instantiated.",null,null],[12,"serializable","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"frame_info_registration","","",0,null],[12,"finished_function_lengths","","",0,null],[3,"JIT","","The JIT builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[3,"CodeMemory","","Memory manager for executable code.",null,null],[12,"unwind_registry","","",2,null],[12,"mmap","","",2,null],[12,"start_of_nonexecutable_pages","","",2,null],[3,"JITEngine","","A WebAssembly `JIT` Engine.",null,null],[12,"inner","","",3,null],[12,"target","","The target for the compiler",3,null],[12,"engine_id","","",3,null],[5,"link_module","","Links a module, patching the allocated functions with the…",null,[[["primarymap",3],["primarymap",3],["moduleinfo",3],["primarymap",3],["relocations",6],["primarymap",3]]]],[0,"artifact","","Define `JITArtifact` to allow compiling and instantiating…",null,null],[3,"JITArtifact","wasmer_engine_jit::artifact","A compiled wasm module, ready to be instantiated.",null,null],[12,"serializable","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"frame_info_registration","","",0,null],[12,"finished_function_lengths","","",0,null],[18,"MAGIC_HEADER","wasmer_engine_jit","",0,null],[11,"is_deserializable","","Check if the provided bytes look like a serialized…",0,[[]]],[11,"new","","Compile a data buffer into a `JITArtifact`, which may then…",0,[[["jitengine",3],["tunables",8]],[["result",4],["compileerror",4]]]],[11,"deserialize","","Deserialize a JITArtifact",0,[[["jitengine",3]],[["result",4],["deserializeerror",4]]]],[11,"from_parts","","Construct a `JITArtifact` from component parts.",0,[[["jitengineinner",3],["serializablemodule",3]],[["result",4],["compileerror",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",0,[[["triple",3]]]],[0,"builder","","",null,null],[3,"JIT","wasmer_engine_jit::builder","The JIT builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[11,"new","wasmer_engine_jit","Create a new JIT",1,[[]]],[11,"headless","","Create a new headless JIT",1,[[]]],[11,"target","","Set the target",1,[[["target",3]]]],[11,"features","","Set the features",1,[[["features",3]]]],[11,"engine","","Build the `JITEngine` for this configuration",1,[[],["jitengine",3]]],[0,"code_memory","","Memory management for executable code.",null,null],[3,"CodeMemory","wasmer_engine_jit::code_memory","Memory manager for executable code.",null,null],[12,"unwind_registry","","",2,null],[12,"mmap","","",2,null],[12,"start_of_nonexecutable_pages","","",2,null],[5,"round_up","","",null,[[]]],[17,"ARCH_FUNCTION_ALIGNMENT","","The optimal alignment for functions.",null,null],[17,"DATA_SECTION_ALIGNMENT","","The optimal alignment for data.",null,null],[11,"new","wasmer_engine_jit","Create a new `CodeMemory` instance.",2,[[]]],[11,"unwind_registry_mut","","Mutably get the UnwindRegistry.",2,[[],["unwindregistry",3]]],[11,"allocate","","Allocate a single contiguous block of memory for the…",2,[[],[["result",4],["string",3]]]],[11,"publish","","Apply the page permissions.",2,[[]]],[11,"function_allocation_size","","Calculates the allocation size of the given compiled…",2,[[["functionbody",3]]]],[11,"copy_function","","Copies the data of the compiled function to the given…",2,[[["unwindregistry",3],["functionbody",3]]]],[11,"view_as_mut_vmfunc_slice","","Convert mut a slice from u8 to VMFunctionBody.",2,[[]]],[0,"engine","","JIT compilation.",null,null],[3,"JITEngine","wasmer_engine_jit::engine","A WebAssembly `JIT` Engine.",null,null],[12,"inner","","",3,null],[12,"target","","The target for the compiler",3,null],[12,"engine_id","","",3,null],[3,"JITEngineInner","","The inner contents of `JITEngine`",null,null],[12,"compiler","","The compiler",4,null],[12,"features","","The features to compile the Wasm module with",4,null],[12,"code_memory","","The code memory is responsible of publishing the compiled…",4,null],[12,"signatures","","The signature registry is used mainly to operate with…",4,null],[11,"new","wasmer_engine_jit","Create a new `JITEngine` with the given config",3,[[["target",3],["compiler",8],["box",3],["features",3]]]],[11,"headless","","Create a headless `JITEngine`",3,[[]]],[11,"inner","","",3,[[],[["mutexguard",3],["jitengineinner",3]]]],[11,"inner_mut","","",3,[[],[["mutexguard",3],["jitengineinner",3]]]],[11,"compiler","wasmer_engine_jit::engine","Gets the compiler associated to this engine.",4,[[],[["compiler",8],["compileerror",4],["result",4]]]],[11,"validate","","Validate the module",4,[[],[["result",4],["compileerror",4]]]],[11,"features","","The Wasm features",4,[[],["features",3]]],[11,"allocate","","Allocate compiled functions into memory",4,[[["primarymap",3],["primarymap",3],["moduleinfo",3],["primarymap",3],["primarymap",3]],[["result",4],["compileerror",4]]]],[11,"publish_compiled_code","","Make memory containing compiled code executable.",4,[[]]],[11,"publish_eh_frame","","Register DWARF-type exception handling information…",4,[[["option",4]],[["result",4],["compileerror",4]]]],[11,"signatures","","Shared signature registry.",4,[[],["signatureregistry",3]]],[0,"link","wasmer_engine_jit","Linking for JIT-compiled code.",null,null],[5,"apply_relocation","wasmer_engine_jit::link","",null,[[["primarymap",3],["primarymap",3],["relocation",3],["primarymap",3]]]],[5,"link_module","","Links a module, patching the allocated functions with the…",null,[[["primarymap",3],["primarymap",3],["moduleinfo",3],["primarymap",3],["relocations",6],["primarymap",3]]]],[0,"serialize","wasmer_engine_jit","",null,null],[3,"SerializableCompilation","wasmer_engine_jit::serialize","The compilation related data for a serialized modules",null,null],[12,"function_bodies","","",5,null],[12,"function_relocations","","",5,null],[12,"function_jt_offsets","","",5,null],[12,"function_frame_info","","",5,null],[12,"function_call_trampolines","","",5,null],[12,"dynamic_function_trampolines","","",5,null],[12,"custom_sections","","",5,null],[12,"custom_section_relocations","","",5,null],[12,"debug","","",5,null],[3,"SerializableModule","","Serializable struct that is able to serialize from and to…",null,null],[12,"compilation","","",6,null],[12,"compile_info","","",6,null],[12,"data_initializers","","",6,null],[0,"unwind","wasmer_engine_jit","",null,null],[0,"systemv","wasmer_engine_jit::unwind","Module for System V ABI unwind registry.",null,null],[3,"UnwindRegistry","wasmer_engine_jit::unwind::systemv","Represents a registry of function unwind information for…",null,null],[12,"registrations","","",7,null],[12,"published","","",7,null],[5,"__register_frame","","",null,null],[5,"__deregister_frame","","",null,null],[11,"new","","Creates a new unwind registry with the given base address.",7,[[]]],[11,"register","","Registers a function given the start offset, length, and…",7,[[["compiledfunctionunwindinfo",4]],[["result",4],["string",3]]]],[11,"publish","","Publishes all registered functions.",7,[[["option",4]],[["result",4],["string",3]]]],[11,"register_frames","","",7,[[]]],[17,"VERSION","wasmer_engine_jit","Version number of this crate.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","wasmer_engine_jit::engine","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","wasmer_engine_jit::serialize","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","wasmer_engine_jit::unwind::systemv","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"drop","","",7,[[]]],[11,"clone","wasmer_engine_jit","",3,[[],["jitengine",3]]],[11,"size_of_val","","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_jit::engine","",4,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_jit::serialize","",5,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",6,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_jit::unwind::systemv","",7,[[["memoryusagetracker",8]]]],[11,"deserialize","wasmer_engine_jit::serialize","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"module","wasmer_engine_jit","",0,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",0,[[],["moduleinfo",3]]],[11,"module_mut","","",0,[[],[["moduleinfo",3],["option",4]]]],[11,"register_frame_info","","",0,[[]]],[11,"features","","",0,[[],["features",3]]],[11,"data_initializers","","",0,[[]]],[11,"memory_styles","","",0,[[],["primarymap",3]]],[11,"table_styles","","",0,[[],["primarymap",3]]],[11,"finished_functions","","",0,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",0,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",0,[[],["boxedslice",3]]],[11,"signatures","","",0,[[],["boxedslice",3]]],[11,"serialize","","",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"target","","The target",3,[[],["target",3]]],[11,"register_signature","","Register a signature",3,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"lookup_signature","","Lookup a signature",3,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",3,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",3,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[11,"deserialize","","Deserializes a WebAssembly module",3,[[],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"id","","",3,[[],["engineid",3]]],[11,"cloned","","",3,[[],[["arc",3],["engine",8]]]]],"p":[[3,"JITArtifact"],[3,"JIT"],[3,"CodeMemory"],[3,"JITEngine"],[3,"JITEngineInner"],[3,"SerializableCompilation"],[3,"SerializableModule"],[3,"UnwindRegistry"]]},\
"wasmer_engine_native":{"doc":"Native backend for Wasmer compilers.","i":[[3,"NativeArtifact","wasmer_engine_native","A compiled wasm module, ready to be instantiated.",null,null],[12,"sharedobject_path","","",0,null],[12,"metadata","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[3,"Native","","The Native builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[3,"NativeEngine","","A WebAssembly `Native` Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[0,"artifact","","Define `NativeArtifact` to allow compiling and…",null,null],[3,"NativeArtifact","wasmer_engine_native::artifact","A compiled wasm module, ready to be instantiated.",null,null],[12,"sharedobject_path","","",0,null],[12,"metadata","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[5,"to_compile_error","","",null,[[],["compileerror",4]]],[17,"WASMER_METADATA_SYMBOL","","",null,null],[18,"MAGIC_HEADER_MH_CIGAM_64","wasmer_engine_native","",0,null],[18,"MAGIC_HEADER_ELF_32","","",0,null],[18,"MAGIC_HEADER_ELF_64","","",0,null],[18,"MAGIC_HEADER_COFF_64","","",0,null],[11,"is_deserializable","","Check if the provided bytes look like `NativeArtifact`.",0,[[]]],[11,"generate_metadata","","Generate a compilation",0,[[["features",3],["tunables",8]],[["compileerror",4],["result",4]]]],[11,"new","","Compile a data buffer into a `NativeArtifact`, which may…",0,[[["nativeengine",3],["tunables",8]],[["result",4],["compileerror",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",0,[[["triple",3]]]],[11,"from_parts_crosscompiled","","Construct a `NativeArtifact` from component parts.",0,[[["pathbuf",3],["modulemetadata",3]],[["result",4],["compileerror",4]]]],[11,"from_parts","","Construct a `NativeArtifact` from component parts.",0,[[["nativeengineinner",3],["pathbuf",3],["library",3],["modulemetadata",3]],[["result",4],["compileerror",4]]]],[11,"deserialize","","Deserialize a `NativeArtifact` from bytes.",0,[[["nativeengine",3]],[["deserializeerror",4],["result",4]]]],[11,"deserialize_from_file","","Deserialize a `NativeArtifact` from a file path.",0,[[["nativeengine",3],["path",3]],[["deserializeerror",4],["result",4]]]],[11,"deserialize_from_file_unchecked","","Deserialize a `NativeArtifact` from a file path (unchecked).",0,[[["nativeengine",3],["path",3]],[["deserializeerror",4],["result",4]]]],[0,"builder","","",null,null],[3,"Native","wasmer_engine_native::builder","The Native builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[11,"new","wasmer_engine_native","Create a new Native",1,[[]]],[11,"headless","","Create a new headless Native",1,[[]]],[11,"target","","Set the target",1,[[["target",3]]]],[11,"features","","Set the features",1,[[["features",3]]]],[11,"engine","","Build the `NativeEngine` for this configuration",1,[[],["nativeengine",3]]],[0,"engine","","Native Engine.",null,null],[3,"NativeEngine","wasmer_engine_native::engine","A WebAssembly `Native` Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[3,"NativeEngineInner","","The inner contents of `NativeEngine`",null,null],[12,"compiler","","The compiler",3,null],[12,"features","","The WebAssembly features to use",3,null],[12,"signatures","","The signature registry is used mainly to operate with…",3,null],[12,"prefixer","","The prefixer returns the a String to prefix each of the…",3,null],[12,"is_cross_compiling","","Whether the native engine will cross-compile.",3,null],[12,"linker","","The linker to use.",3,null],[12,"libraries","","List of libraries loaded by this engine.",3,null],[4,"Linker","","",null,null],[13,"None","","",4,null],[13,"Clang11","","",4,null],[13,"Clang10","","",4,null],[13,"Clang","","",4,null],[13,"Gcc","","",4,null],[11,"new","wasmer_engine_native","Create a new `NativeEngine` with the given config",2,[[["compiler",8],["features",3],["target",3],["box",3]]]],[11,"headless","","Create a headless `NativeEngine`",2,[[]]],[11,"set_deterministic_prefixer","","Sets a prefixer for the wasm module, so we can avoid any…",2,[[]]],[11,"inner","","",2,[[],[["mutexguard",3],["nativeengineinner",3]]]],[11,"inner_mut","","",2,[[],[["mutexguard",3],["nativeengineinner",3]]]],[11,"find_linker","wasmer_engine_native::engine","",4,[[]]],[11,"executable","","",4,[[]]],[11,"compiler","","Gets the compiler associated to this engine.",3,[[],[["result",4],["compiler",8],["compileerror",4]]]],[11,"get_prefix","","",3,[[],["string",3]]],[11,"features","","",3,[[],["features",3]]],[11,"validate","","Validate the module",3,[[],[["result",4],["compileerror",4]]]],[11,"signatures","","Shared signature registry.",3,[[],["signatureregistry",3]]],[11,"is_cross_compiling","","",3,[[]]],[11,"linker","","",3,[[],["linker",4]]],[11,"add_library","","",3,[[["library",3]]]],[0,"serialize","wasmer_engine_native","",null,null],[3,"ModuleMetadata","wasmer_engine_native::serialize","Serializable struct that represents the compiled metadata.",null,null],[12,"compile_info","","",5,null],[12,"prefix","","",5,null],[12,"data_initializers","","",5,null],[12,"function_body_lengths","","",5,null],[3,"ModuleMetadataSymbolRegistry","","",null,null],[12,"prefix","","",6,null],[11,"split","","",5,[[]]],[11,"get_symbol_registry","","",5,[[],["modulemetadatasymbolregistry",3]]],[17,"VERSION","wasmer_engine_native","Version number of this crate.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","wasmer_engine_native::engine","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","wasmer_engine_native::serialize","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"clone","wasmer_engine_native","",2,[[],["nativeengine",3]]],[11,"clone","wasmer_engine_native::engine","",4,[[],["linker",4]]],[11,"fmt","wasmer_engine_native::serialize","",5,[[["formatter",3]],["result",6]]],[11,"size_of_val","wasmer_engine_native","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_native::engine","",4,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_native::serialize","",5,[[["memoryusagetracker",8]]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"symbol_to_name","","",6,[[["symbol",4]],["string",3]]],[11,"name_to_symbol","","",6,[[],[["symbol",4],["option",4]]]],[11,"module","wasmer_engine_native","",0,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",0,[[],["moduleinfo",3]]],[11,"module_mut","","",0,[[],[["option",4],["moduleinfo",3]]]],[11,"register_frame_info","","",0,[[]]],[11,"features","","",0,[[],["features",3]]],[11,"data_initializers","","",0,[[]]],[11,"memory_styles","","",0,[[],["primarymap",3]]],[11,"table_styles","","",0,[[],["primarymap",3]]],[11,"finished_functions","","",0,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",0,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",0,[[],["boxedslice",3]]],[11,"signatures","","",0,[[],["boxedslice",3]]],[11,"preinstantiate","","",0,[[],[["result",4],["instantiationerror",4]]]],[11,"serialize","","Serialize a NativeArtifact",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"target","","The target",2,[[],["target",3]]],[11,"register_signature","","Register a signature",2,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"lookup_signature","","Lookup a signature",2,[[["vmsharedsignatureindex",3]],[["option",4],["functiontype",3]]]],[11,"validate","","Validates a WebAssembly module",2,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",2,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[11,"deserialize","","Deserializes a WebAssembly module (binary content of a…",2,[[],[["result",4],["arc",3],["deserializeerror",4]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path It should…",2,[[["path",3]],[["result",4],["arc",3],["deserializeerror",4]]]],[11,"id","","",2,[[],["engineid",3]]],[11,"cloned","","",2,[[],[["engine",8],["arc",3]]]]],"p":[[3,"NativeArtifact"],[3,"Native"],[3,"NativeEngine"],[3,"NativeEngineInner"],[4,"Linker"],[3,"ModuleMetadata"],[3,"ModuleMetadataSymbolRegistry"]]},\
"wasmer_engine_object_file":{"doc":"Object file backend for Wasmer compilers.","i":[[3,"ObjectFileArtifact","wasmer_engine_object_file","A compiled wasm module, ready to be instantiated.",null,null],[12,"metadata","","",0,null],[12,"module_bytes","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"metadata_length","","Length of the serialized metadata",0,null],[12,"symbol_registry","","",0,null],[3,"ObjectFile","","The ObjectFile builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[3,"ObjectFileEngine","","A WebAssembly `ObjectFile` Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[0,"artifact","","Define `ObjectFileArtifact` to allow compiling and…",null,null],[3,"ObjectFileArtifact","wasmer_engine_object_file::artifact","A compiled wasm module, ready to be instantiated.",null,null],[12,"metadata","","",0,null],[12,"module_bytes","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"metadata_length","","Length of the serialized metadata",0,null],[12,"symbol_registry","","",0,null],[5,"to_compile_error","","",null,[[],["compileerror",4]]],[17,"WASMER_METADATA_SYMBOL","","",null,null],[18,"MAGIC_HEADER_MH_CIGAM_64","wasmer_engine_object_file","",0,null],[18,"MAGIC_HEADER_ELF_32","","",0,null],[18,"MAGIC_HEADER_ELF_64","","",0,null],[18,"MAGIC_HEADER_COFF_64","","",0,null],[11,"is_deserializable","","Check if the provided bytes look like `ObjectFileArtifact`.",0,[[]]],[11,"generate_metadata","","Generate a compilation",0,[[["tunables",8],["features",3]],[["result",4],["compileerror",4]]]],[11,"new","","Compile a data buffer into a `ObjectFileArtifact`, which…",0,[[["tunables",8],["objectfileengine",3]],[["result",4],["compileerror",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",0,[[["triple",3]]]],[11,"from_parts_crosscompiled","","Construct a `ObjectFileArtifact` from component parts.",0,[[["objectfileengineinner",3],["modulemetadata",3],["vec",3]],[["result",4],["compileerror",4]]]],[11,"deserialize","","Deserialize a `ObjectFileArtifact` from bytes.",0,[[["objectfileengine",3]],[["result",4],["deserializeerror",4]]]],[11,"symbol_registry","","Get the `SymbolRegistry` used to generate the names used…",0,[[],["symbolregistry",8]]],[11,"metadata_length","","The length in bytes of the metadata in the serialized…",0,[[]]],[0,"builder","","",null,null],[3,"ObjectFile","wasmer_engine_object_file::builder","The ObjectFile builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[11,"new","wasmer_engine_object_file","Create a new ObjectFile",1,[[]]],[11,"headless","","Create a new headless ObjectFile",1,[[]]],[11,"target","","Set the target",1,[[["target",3]]]],[11,"features","","Set the features",1,[[["features",3]]]],[11,"engine","","Build the `ObjectFileEngine` for this configuration",1,[[],["objectfileengine",3]]],[0,"engine","","",null,null],[3,"ObjectFileEngine","wasmer_engine_object_file::engine","A WebAssembly `ObjectFile` Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[3,"ObjectFileEngineInner","","The inner contents of `ObjectFileEngine`",null,null],[12,"compiler","","The compiler",3,null],[12,"features","","The WebAssembly features to use",3,null],[12,"signatures","","The signature registry is used mainly to operate with…",3,null],[12,"prefixer","","The prefixer returns the a String to prefix each of the…",3,null],[11,"new","wasmer_engine_object_file","Create a new `ObjectFileEngine` with the given config",2,[[["target",3],["compiler",8],["box",3],["features",3]]]],[11,"headless","","Create a headless `ObjectFileEngine`",2,[[]]],[11,"set_deterministic_prefixer","","Sets a prefixer for the wasm module, so we can avoid any…",2,[[]]],[11,"inner","","",2,[[],[["mutexguard",3],["objectfileengineinner",3]]]],[11,"inner_mut","","",2,[[],[["mutexguard",3],["objectfileengineinner",3]]]],[11,"compiler","wasmer_engine_object_file::engine","Gets the compiler associated to this engine.",3,[[],[["compiler",8],["compileerror",4],["result",4]]]],[11,"get_prefix","","",3,[[],["string",3]]],[11,"features","","",3,[[],["features",3]]],[11,"validate","","Validate the module",3,[[],[["result",4],["compileerror",4]]]],[11,"signatures","","Shared signature registry.",3,[[],["signatureregistry",3]]],[0,"serialize","wasmer_engine_object_file","",null,null],[3,"ModuleMetadata","wasmer_engine_object_file::serialize","Serializable struct that represents the compiled metadata.",null,null],[12,"compile_info","","",4,null],[12,"prefix","","",4,null],[12,"data_initializers","","",4,null],[12,"function_body_lengths","","",4,null],[3,"ModuleMetadataSymbolRegistry","","",null,null],[12,"prefix","","",5,null],[11,"split","","",4,[[]]],[11,"get_symbol_registry","","",4,[[],["modulemetadatasymbolregistry",3]]],[17,"VERSION","wasmer_engine_object_file","Version number of this crate.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","wasmer_engine_object_file::engine","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","wasmer_engine_object_file::serialize","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"clone","wasmer_engine_object_file","",2,[[],["objectfileengine",3]]],[11,"fmt","wasmer_engine_object_file::serialize","",4,[[["formatter",3]],["result",6]]],[11,"size_of_val","wasmer_engine_object_file","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_object_file::engine","",3,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_engine_object_file::serialize","",4,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",5,[[["memoryusagetracker",8]]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"symbol_to_name","","",5,[[["symbol",4]],["string",3]]],[11,"name_to_symbol","","",5,[[],[["symbol",4],["option",4]]]],[11,"module","wasmer_engine_object_file","",0,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",0,[[],["moduleinfo",3]]],[11,"module_mut","","",0,[[],[["moduleinfo",3],["option",4]]]],[11,"register_frame_info","","",0,[[]]],[11,"features","","",0,[[],["features",3]]],[11,"data_initializers","","",0,[[]]],[11,"memory_styles","","",0,[[],["primarymap",3]]],[11,"table_styles","","",0,[[],["primarymap",3]]],[11,"finished_functions","","",0,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",0,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",0,[[],["boxedslice",3]]],[11,"signatures","","",0,[[],["boxedslice",3]]],[11,"preinstantiate","","",0,[[],[["result",4],["instantiationerror",4]]]],[11,"serialize","","Serialize a ObjectFileArtifact",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"target","","The target",2,[[],["target",3]]],[11,"register_signature","","Register a signature",2,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"lookup_signature","","Lookup a signature",2,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",2,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",2,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[11,"deserialize","","Deserializes a WebAssembly module (binary content of a…",2,[[],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path It should…",2,[[["path",3]],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"id","","",2,[[],["engineid",3]]],[11,"cloned","","",2,[[],[["arc",3],["engine",8]]]]],"p":[[3,"ObjectFileArtifact"],[3,"ObjectFile"],[3,"ObjectFileEngine"],[3,"ObjectFileEngineInner"],[3,"ModuleMetadata"],[3,"ModuleMetadataSymbolRegistry"]]},\
"wasmer_integration_tests_cli":{"doc":"CLI integration tests","i":[[0,"assets","wasmer_integration_tests_cli","",null,null],[5,"get_libwasmer_path","wasmer_integration_tests_cli::assets","Get the path to the `libwasmer.a` static library.",null,[[],["pathbuf",3]]],[5,"get_wasmer_path","","Get the path to the `wasmer` executable to be used in this…",null,[[],["pathbuf",3]]],[17,"ASSET_PATH","","",null,null],[17,"WASMER_INCLUDE_PATH","","",null,null],[17,"WASMER_PATH","","",null,null],[17,"LIBWASMER_PATH","","",null,null],[0,"link_code","wasmer_integration_tests_cli","",null,null],[3,"LinkCode","wasmer_integration_tests_cli::link_code","Data used to run a linking command for generated artifacts.",null,null],[12,"current_dir","","The directory to operate in.",0,null],[12,"linker_path","","Path to the linker used to run the linking command.",0,null],[12,"optimization_flag","","String used as an optimization flag.",0,null],[12,"object_paths","","Paths of objects to link.",0,null],[12,"output_path","","Path to the output target.",0,null],[12,"libwasmer_path","","Path to the static libwasmer library.",0,null],[11,"run","","",0,[[],["result",6]]],[0,"util","wasmer_integration_tests_cli","",null,null],[4,"Compiler","wasmer_integration_tests_cli::util","",null,null],[13,"Cranelift","","",1,null],[13,"LLVM","","",1,null],[13,"Singlepass","","",1,null],[4,"Engine","","",null,null],[13,"Jit","","",2,null],[13,"Native","","",2,null],[13,"ObjectFile","","",2,null],[5,"run_code","","",null,[[["path",3]],[["result",6],["string",3]]]],[11,"to_flag","","",1,[[]]],[11,"to_flag","","",2,[[]]],[11,"from","wasmer_integration_tests_cli::link_code","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","wasmer_integration_tests_cli::util","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","","",1,[[],["compiler",4]]],[11,"clone","","",2,[[],["engine",4]]],[11,"default","wasmer_integration_tests_cli::link_code","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_integration_tests_cli::util","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[3,"LinkCode"],[4,"Compiler"],[4,"Engine"]]},\
"wasmer_middlewares":{"doc":"","i":[[0,"metering","wasmer_middlewares","`metering` is a middleware for tracking how many operators…",null,null],[3,"MeteringGlobalIndexes","wasmer_middlewares::metering","",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"Metering","","The module-level metering middleware.",null,null],[12,"initial_limit","","Initial limit of points.",1,null],[12,"cost_function","","Function that maps each operator to a cost in \\\"points\\\".",1,null],[12,"global_indexes","","The global indexes for metering points.",1,null],[3,"FunctionMetering","","The function-level metering middleware.",null,null],[12,"cost_function","","Function that maps each operator to a cost in \\\"points\\\".",2,null],[12,"global_indexes","","The global indexes for metering points.",2,null],[12,"accumulated_cost","","Accumulated cost of the current basic block.",2,null],[4,"MeteringPoints","","",null,null],[13,"Remaining","","The given number of metering points is left for the…",3,null],[13,"Exhausted","","The execution was terminated because the metering points…",3,null],[5,"get_remaining_points","","Get the remaining points in an `Instance`.",null,[[["instance",3]],["meteringpoints",4]]],[5,"set_remaining_points","","Set the provided remaining points in an `Instance`.",null,[[["instance",3]]]],[11,"remaining_points","","The global index in the current module for remaining points.",0,[[],["globalindex",3]]],[11,"points_exhausted","","The global index in the current module for a boolean…",0,[[],["globalindex",3]]],[11,"new","","Creates a `Metering` middleware.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"clone","","",0,[[],["meteringglobalindexes",3]]],[11,"eq","","",3,[[["meteringpoints",4]]]],[11,"ne","","",3,[[["meteringpoints",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"size_of_val","","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]]]],[11,"feed","","",2,[[["operator",4],["middlewarereaderstate",3]],[["middlewareerror",3],["result",4]]]],[11,"generate_function_middleware","","Generates a `FunctionMiddleware` for a given function.",1,[[["localfunctionindex",3]],[["functionmiddleware",8],["box",3]]]],[11,"transform_module_info","","Transforms a `ModuleInfo` struct in-place. This is called…",1,[[["moduleinfo",3]]]]],"p":[[3,"MeteringGlobalIndexes"],[3,"Metering"],[3,"FunctionMetering"],[4,"MeteringPoints"]]},\
"wasmer_object":{"doc":"Object creator for Wasm Compilations.","i":[[4,"ObjectError","wasmer_object","The Object error can occur when creating an object file…",null,null],[13,"UnsupportedBinaryFormat","","The object was provided a not-supported binary format",0,null],[13,"UnsupportedArchitecture","","The object was provided a not-supported architecture",0,null],[13,"UnknownEndianness","","The object was provided an unknown endianness",0,null],[13,"Write","","The object was provided a not-supported architecture",0,null],[5,"emit_compilation","","Emit the compilation result into an existing object.",null,[[["triple",3],["object",3],["compilation",3]],[["objecterror",4],["result",4]]]],[5,"emit_data","","Write data into an existing object.",null,[[["object",3]],[["objecterror",4],["result",4]]]],[5,"get_object_for_target","","Create an object for a given target `Triple`.",null,[[["triple",3]],[["result",4],["objecterror",4],["object",3]]]],[0,"error","","",null,null],[4,"ObjectError","wasmer_object::error","The Object error can occur when creating an object file…",null,null],[13,"UnsupportedBinaryFormat","","The object was provided a not-supported binary format",0,null],[13,"UnsupportedArchitecture","","The object was provided a not-supported architecture",0,null],[13,"UnknownEndianness","","The object was provided an unknown endianness",0,null],[13,"Write","","The object was provided a not-supported architecture",0,null],[0,"module","wasmer_object","",null,null],[5,"get_object_for_target","wasmer_object::module","Create an object for a given target `Triple`.",null,[[["triple",3]],[["result",4],["objecterror",4],["object",3]]]],[5,"emit_data","","Write data into an existing object.",null,[[["object",3]],[["objecterror",4],["result",4]]]],[5,"emit_compilation","","Emit the compilation result into an existing object.",null,[[["triple",3],["object",3],["compilation",3]],[["objecterror",4],["result",4]]]],[11,"from","wasmer_object","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["objectwriteerror",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"ObjectError"]]},\
"wasmer_types":{"doc":"This are the common types and utility tools for using…","i":[[3,"Features","wasmer_types","Controls which experimental features will be enabled.…",null,null],[12,"threads","","Threads proposal should be enabled",0,null],[12,"reference_types","","Reference Types proposal should be enabled",0,null],[12,"simd","","SIMD proposal should be enabled",0,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",0,null],[12,"multi_value","","Multi Value proposal should be enabled",0,null],[12,"tail_call","","Tail call proposal should be enabled",0,null],[12,"module_linking","","Module Linking proposal should be enabled",0,null],[12,"multi_memory","","Multi Memory proposal should be enabled",0,null],[12,"memory64","","64-bit Memory proposal should be enabled",0,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",0,null],[3,"CustomSectionIndex","","Index type of a custom section inside a WebAssembly module.",null,null],[12,"0","","",1,null],[3,"DataIndex","","Index type of a passive data segment inside the…",null,null],[12,"0","","",2,null],[3,"ElemIndex","","Index type of a passive element segment inside the…",null,null],[12,"0","","",3,null],[3,"FunctionIndex","","Index type of a function (imported or local) inside the…",null,null],[12,"0","","",4,null],[3,"GlobalIndex","","Index type of a global variable (imported or local) inside…",null,null],[12,"0","","",5,null],[3,"LocalFunctionIndex","","Index type of a function defined locally inside the…",null,null],[12,"0","","",6,null],[3,"LocalGlobalIndex","","Index type of a global defined locally inside the…",null,null],[12,"0","","",7,null],[3,"LocalMemoryIndex","","Index type of a memory defined locally inside the…",null,null],[12,"0","","",8,null],[3,"LocalTableIndex","","Index type of a table defined locally inside the…",null,null],[12,"0","","",9,null],[3,"MemoryIndex","","Index type of a linear memory (imported or local) inside…",null,null],[12,"0","","",10,null],[3,"SignatureIndex","","Index type of a signature (imported or local) inside the…",null,null],[12,"0","","",11,null],[3,"TableIndex","","Index type of a table (imported or local) inside the…",null,null],[12,"0","","",12,null],[3,"DataInitializer","","A data initializer for linear memory.",null,null],[12,"location","","The location where the initialization is to be performed.",13,null],[12,"data","","The initialization data.",13,null],[3,"DataInitializerLocation","","A memory index and offset within that memory where a data…",null,null],[12,"memory_index","","The index of the memory to initialize.",14,null],[12,"base","","Optionally a Global variable base to initialize at.",14,null],[12,"offset","","A constant offset to initialize at.",14,null],[3,"OwnedDataInitializer","","As `DataInitializer` but owning the data rather than…",null,null],[12,"location","","The location where the initialization is to be performed.",15,null],[12,"data","","The initialization owned data.",15,null],[3,"TableInitializer","","A WebAssembly table initializer.",null,null],[12,"table_index","","The index of a table to initialize.",16,null],[12,"base","","Optionally, a global variable giving a base index.",16,null],[12,"offset","","The offset to add to the base.",16,null],[12,"elements","","The values to write into the table elements.",16,null],[3,"Atomically","","Atomically.",null,null],[3,"MemoryView","","A view into a memory.",null,null],[12,"ptr","","",17,null],[12,"length","","",17,null],[12,"_phantom","","",17,null],[3,"HostRef","","Represents a piece of data located in the host environment.",null,null],[12,"0","","",18,null],[3,"Bytes","","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",19,null],[3,"PageCountOutOfRange","","The only error that can happen when converting `Bytes` to…",null,null],[3,"Pages","","Units of WebAssembly pages (as specified to be 65,536…",null,null],[12,"0","","",20,null],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",21,null],[12,"ty","","",21,null],[3,"FunctionType","","The signature of a function that is either implemented in…",null,null],[12,"params","","The parameters of the function",22,null],[12,"results","","The return values of the function",22,null],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",23,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",23,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",24,null],[12,"name","","",24,null],[12,"ty","","",24,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",25,null],[12,"maximum","","The maximum number of pages in the memory.",25,null],[12,"shared","","Whether the memory may be shared between multiple threads.",25,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",26,null],[12,"minimum","","The minimum number of elements in the table.",26,null],[12,"maximum","","The maximum number of elements in the table.",26,null],[3,"V128","","The WebAssembly V128 type",null,null],[12,"0","","",27,null],[4,"ExportIndex","","An entity to export.",null,null],[13,"Function","","Function export.",28,null],[13,"Table","","Table export.",28,null],[13,"Memory","","Memory export.",28,null],[13,"Global","","Global export.",28,null],[4,"ImportIndex","","An entity to import.",null,null],[13,"Function","","Function import.",29,null],[13,"Table","","Table import.",29,null],[13,"Memory","","Memory import.",29,null],[13,"Global","","Global import.",29,null],[4,"ExternRef","","Represents an opaque reference to any data within…",null,null],[13,"Null","","A reference to no data.",30,null],[13,"Ref","","A reference to data stored internally.",30,null],[13,"Other","","A reference to data located outside.",30,null],[4,"Value","","Possible runtime values that a WebAssembly module can…",null,null],[13,"I32","","A 32-bit integer.",31,null],[13,"I64","","A 64-bit integer.",31,null],[13,"F32","","A 32-bit float.",31,null],[13,"F64","","A 64-bit float.",31,null],[13,"ExternRef","","An `externref` value which can hold opaque data to the…",31,null],[13,"FuncRef","","A first-class reference to a WebAssembly function.",31,null],[13,"V128","","A 128-bit number",31,null],[4,"ExternType","","A list of all possible types which can be externally…",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",32,null],[13,"Global","","This external type is the type of a WebAssembly global.",32,null],[13,"Table","","This external type is the type of a WebAssembly table.",32,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",32,null],[4,"GlobalInit","","Globals are initialized via the `const` operators or by…",null,null],[13,"I32Const","","An `i32.const`.",33,null],[13,"I64Const","","An `i64.const`.",33,null],[13,"F32Const","","An `f32.const`.",33,null],[13,"F64Const","","An `f64.const`.",33,null],[13,"V128Const","","A `v128.const`.",33,null],[13,"GetGlobal","","A `global.get` of another global.",33,null],[13,"RefNullConst","","A `ref.null`.",33,null],[13,"RefFunc","","A `ref.func <index>`.",33,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",34,null],[13,"Var","","The value of the global can change over time",34,null],[4,"Type","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",35,null],[13,"I64","","Signed 64 bit integer.",35,null],[13,"F32","","Floating point 32 bit integer.",35,null],[13,"F64","","Floating point 64 bit integer.",35,null],[13,"V128","","A 128 bit number.",35,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",35,null],[13,"FuncRef","","A reference to a Wasm function.",35,null],[0,"lib","","The `lib` module defines a `std` module that is identical…",null,null],[0,"std","wasmer_types::lib","Custom `std` module.",null,null],[0,"any","wasmer_types::lib::std","This module implements the `Any` trait, which enables…",null,null],[8,"Any","wasmer_types::lib::std::any","A trait to emulate dynamic typing.",null,null],[10,"type_id","","Gets the `TypeId` of `self`.",36,[[],["typeid",3]]],[3,"TypeId","","A `TypeId` represents a globally unique identifier for a…",null,null],[12,"t","","",37,null],[5,"type_name","","Returns the name of a type as a string slice.",null,[[]]],[5,"type_name_of_val","","Returns the name of the type of the pointed-to value as a…",null,[[]]],[0,"borrow","wasmer_types::lib::std","A module for working with borrowed data.",null,null],[8,"ToOwned","wasmer_types::lib::std::borrow","A generalization of `Clone` to borrowed data.",null,null],[16,"Owned","","The resulting type after obtaining ownership.",38,null],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",38,[[]]],[11,"clone_into","","Uses borrowed data to replace owned data, usually by…",38,[[]]],[4,"Cow","","A clone-on-write smart pointer.",null,null],[13,"Borrowed","","Borrowed data.",39,null],[13,"Owned","","Owned data.",39,null],[8,"Borrow","","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",40,[[]]],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",41,[[]]],[0,"boxed","wasmer_types::lib::std","A pointer type for heap allocation.",null,null],[3,"Box","wasmer_types::lib::std::boxed","A pointer type for heap allocation.",null,null],[12,"0","","",42,null],[12,"1","","",42,null],[0,"cell","wasmer_types::lib::std","Shareable mutable containers.",null,null],[3,"Cell","wasmer_types::lib::std::cell","A mutable memory location.",null,null],[12,"value","","",43,null],[3,"RefCell","","A mutable memory location with dynamically checked borrow…",null,null],[12,"borrow","","",44,null],[12,"value","","",44,null],[3,"BorrowError","","An error returned by [`RefCell::try_borrow`].",null,null],[12,"_private","","",45,null],[3,"BorrowMutError","","An error returned by [`RefCell::try_borrow_mut`].",null,null],[12,"_private","","",46,null],[3,"Ref","","Wraps a borrowed reference to a value in a `RefCell` box.…",null,null],[12,"value","","",47,null],[12,"borrow","","",47,null],[3,"RefMut","","A wrapper type for a mutably borrowed value from a…",null,null],[12,"value","","",48,null],[12,"borrow","","",48,null],[3,"UnsafeCell","","The core primitive for interior mutability in Rust.",null,null],[12,"value","","",49,null],[0,"cmp","wasmer_types::lib::std","Functionality for ordering and comparison.",null,null],[8,"PartialEq","wasmer_types::lib::std::cmp","Trait for equality comparisons which are partial…",null,null],[10,"eq","","This method tests for `self` and `other` values to be…",50,[[]]],[11,"ne","","This method tests for `!=`.",50,[[]]],[8,"Eq","","Trait for equality comparisons which are equivalence…",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two…",null,null],[13,"Less","","An ordering where a compared value is less than another.",51,null],[13,"Equal","","An ordering where a compared value is equal to another.",51,null],[13,"Greater","","An ordering where a compared value is greater than another.",51,null],[3,"Reverse","","A helper struct for reverse ordering.",null,null],[12,"0","","",52,null],[8,"Ord","","Trait for types that form a total order.",null,null],[10,"cmp","","This method returns an [`Ordering`] between `self` and…",53,[[],["ordering",4]]],[11,"max","","Compares and returns the maximum of two values.",53,[[]]],[11,"min","","Compares and returns the minimum of two values.",53,[[]]],[11,"clamp","","Restrict a value to a certain interval.",53,[[]]],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other`…",54,[[],[["ordering",4],["option",4]]]],[11,"lt","","This method tests less than (for `self` and `other`) and…",54,[[]]],[11,"le","","This method tests less than or equal to (for `self` and…",54,[[]]],[11,"gt","","This method tests greater than (for `self` and `other`)…",54,[[]]],[11,"ge","","This method tests greater than or equal to (for `self` and…",54,[[]]],[5,"min","","Compares and returns the minimum of two values.",null,[[]]],[5,"min_by","","Returns the minimum of two values with respect to the…",null,[[]]],[5,"min_by_key","","Returns the element that gives the minimum value from the…",null,[[]]],[5,"max","","Compares and returns the maximum of two values.",null,[[]]],[5,"max_by","","Returns the maximum of two values with respect to the…",null,[[]]],[5,"max_by_key","","Returns the element that gives the maximum value from the…",null,[[]]],[14,"PartialEq","","Derive macro generating an impl of the trait `PartialEq`.",null,null],[14,"Eq","","Derive macro generating an impl of the trait `Eq`.",null,null],[14,"Ord","","Derive macro generating an impl of the trait `Ord`.",null,null],[14,"PartialOrd","","Derive macro generating an impl of the trait `PartialOrd`.",null,null],[0,"convert","wasmer_types::lib::std","Traits for conversions between types.",null,null],[5,"identity","wasmer_types::lib::std::convert","The identity function.",null,[[]]],[8,"AsRef","","Used to do a cheap reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",55,[[]]],[8,"AsMut","","Used to do a cheap mutable-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",56,[[]]],[8,"Into","","A value-to-value conversion that consumes the input value.…",null,null],[10,"into","","Performs the conversion.",57,[[]]],[8,"From","","Used to do value-to-value conversions while consuming the…",null,null],[10,"from","","Performs the conversion.",58,[[]]],[8,"TryInto","","An attempted conversion that consumes `self`, which may or…",null,null],[16,"Error","","The type returned in the event of a conversion error.",59,null],[10,"try_into","","Performs the conversion.",59,[[],["result",4]]],[8,"TryFrom","","Simple and safe type conversions that may fail in a…",null,null],[16,"Error","","The type returned in the event of a conversion error.",60,null],[10,"try_from","","Performs the conversion.",60,[[],["result",4]]],[4,"Infallible","","The error type for errors that can never happen.",null,null],[8,"FloatToInt","","Supporting trait for inherent methods of `f32` and `f64`…",null,null],[0,"fmt","wasmer_types::lib::std","Utilities for formatting and printing `String`s.",null,null],[5,"format","wasmer_types::lib::std::fmt","The `format` function takes an [`Arguments`] struct and…",null,[[["arguments",3]],["string",3]]],[4,"Alignment","","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",61,null],[13,"Right","","Indication that contents should be right-aligned.",61,null],[13,"Center","","Indication that contents should be center-aligned.",61,null],[3,"Error","","The error type which is returned from formatting a message…",null,null],[5,"write","","The `write` function takes an output stream, and an…",null,[[["arguments",3],["write",8]],[["error",3],["result",4]]]],[3,"Arguments","","This structure represents a safely precompiled version of…",null,null],[12,"pieces","","",62,null],[12,"fmt","","",62,null],[12,"args","","",62,null],[8,"Binary","","`b` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",63,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Octal","","`o` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",64,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Debug","","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",65,[[["formatter",3]],[["error",3],["result",4]]]],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",66,[[["formatter",3]],[["error",3],["result",4]]]],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"inner","","",67,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"fmt","","",68,null],[12,"result","","",68,null],[12,"has_fields","","",68,null],[12,"has_key","","",68,null],[12,"state","","",68,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"inner","","",69,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"fmt","","",70,null],[12,"result","","",70,null],[12,"has_fields","","",70,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[12,"fmt","","",71,null],[12,"result","","",71,null],[12,"fields","","",71,null],[12,"empty_name","","",71,null],[3,"Formatter","","Configuration for formatting.",null,null],[12,"flags","","",72,null],[12,"fill","","",72,null],[12,"align","","",72,null],[12,"width","","",72,null],[12,"precision","","",72,null],[12,"buf","","",72,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Write","","A trait for writing or formatting into Unicode-accepting…",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether…",73,[[],[["error",3],["result",4]]]],[11,"write_char","","Writes a [`char`] into this writer, returning whether the…",73,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Glue for usage of the [`write!`] macro with implementors…",73,[[["arguments",3]],[["error",3],["result",4]]]],[8,"LowerExp","","`e` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",74,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperExp","","`E` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",75,[[["formatter",3]],[["error",3],["result",4]]]],[8,"LowerHex","","`x` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",76,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Pointer","","`p` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",77,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperHex","","`X` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",78,[[["formatter",3]],[["error",3],["result",4]]]],[14,"format","wasmer_types::lib::std","Creates a `String` using interpolation of runtime…",null,null],[0,"hash","","Generic hashing support.",null,null],[8,"Hash","wasmer_types::lib::std::hash","A hashable type.",null,null],[10,"hash","","Feeds this value into the given [`Hasher`].",79,[[]]],[11,"hash_slice","","Feeds a slice of this type into the given [`Hasher`].",79,[[]]],[8,"Hasher","","A trait for hashing an arbitrary stream of bytes.",null,null],[10,"finish","","Returns the hash value for the values written so far.",80,[[]]],[10,"write","","Writes some data into this `Hasher`.",80,[[]]],[11,"write_u8","","Writes a single `u8` into this hasher.",80,[[]]],[11,"write_u16","","Writes a single `u16` into this hasher.",80,[[]]],[11,"write_u32","","Writes a single `u32` into this hasher.",80,[[]]],[11,"write_u64","","Writes a single `u64` into this hasher.",80,[[]]],[11,"write_u128","","Writes a single `u128` into this hasher.",80,[[]]],[11,"write_usize","","Writes a single `usize` into this hasher.",80,[[]]],[11,"write_i8","","Writes a single `i8` into this hasher.",80,[[]]],[11,"write_i16","","Writes a single `i16` into this hasher.",80,[[]]],[11,"write_i32","","Writes a single `i32` into this hasher.",80,[[]]],[11,"write_i64","","Writes a single `i64` into this hasher.",80,[[]]],[11,"write_i128","","Writes a single `i128` into this hasher.",80,[[]]],[11,"write_isize","","Writes a single `isize` into this hasher.",80,[[]]],[8,"BuildHasher","","A trait for creating instances of [`Hasher`].",null,null],[16,"Hasher","","Type of the hasher that will be created.",81,null],[10,"build_hasher","","Creates a new hasher.",81,[[]]],[3,"BuildHasherDefault","","Used to create a default [`BuildHasher`] instance for…",null,null],[12,"0","","",82,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[12,"0","","",83,null],[14,"Hash","","Derive macro generating an impl of the trait `Hash`.",null,null],[0,"iter","wasmer_types::lib::std","Composable external iteration.",null,null],[8,"Iterator","wasmer_types::lib::std::iter","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",84,null],[10,"next","","Advances the iterator and returns the next value.",84,[[],["option",4]]],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",84,[[]]],[11,"count","","Consumes the iterator, counting the number of iterations…",84,[[]]],[11,"last","","Consumes the iterator, returning the last element.",84,[[],["option",4]]],[11,"advance_by","","Advances the iterator by `n` elements.",84,[[],["result",4]]],[11,"nth","","Returns the `n`th element of the iterator.",84,[[],["option",4]]],[11,"step_by","","Creates an iterator starting at the same point, but…",84,[[],["stepby",3]]],[11,"chain","","Takes two iterators and creates a new iterator over both…",84,[[],["chain",3]]],[11,"zip","","\'Zips up\' two iterators into a single iterator of pairs.",84,[[],["zip",3]]],[11,"map","","Takes a closure and creates an iterator which calls that…",84,[[],["map",3]]],[11,"for_each","","Calls a closure on each element of an iterator.",84,[[]]],[11,"filter","","Creates an iterator which uses a closure to determine if…",84,[[],["filter",3]]],[11,"filter_map","","Creates an iterator that both filters and maps.",84,[[],["filtermap",3]]],[11,"enumerate","","Creates an iterator which gives the current iteration…",84,[[],["enumerate",3]]],[11,"peekable","","Creates an iterator which can use `peek` to look at the…",84,[[],["peekable",3]]],[11,"skip_while","","Creates an iterator that `skip`s elements based on a…",84,[[],["skipwhile",3]]],[11,"take_while","","Creates an iterator that yields elements based on a…",84,[[],["takewhile",3]]],[11,"map_while","","Creates an iterator that both yields elements based on a…",84,[[],["mapwhile",3]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",84,[[],["skip",3]]],[11,"take","","Creates an iterator that yields its first `n` elements.",84,[[],["take",3]]],[11,"scan","","An iterator adaptor similar to `fold` that holds internal…",84,[[],["scan",3]]],[11,"flat_map","","Creates an iterator that works like map, but flattens…",84,[[],["flatmap",3]]],[11,"flatten","","Creates an iterator that flattens nested structure.",84,[[],["flatten",3]]],[11,"fuse","","Creates an iterator which ends after the first [`None`].",84,[[],["fuse",3]]],[11,"inspect","","Does something with each element of an iterator, passing…",84,[[],["inspect",3]]],[11,"by_ref","","Borrows an iterator, rather than consuming it.",84,[[]]],[11,"collect","","Transforms an iterator into a collection.",84,[[]]],[11,"partition","","Consumes an iterator, creating two collections from it.",84,[[]]],[11,"partition_in_place","","Reorders the elements of this iterator in-place according…",84,[[]]],[11,"is_partitioned","","Checks if the elements of this iterator are partitioned…",84,[[]]],[11,"try_fold","","An iterator method that applies a function as long as it…",84,[[]]],[11,"try_for_each","","An iterator method that applies a fallible function to…",84,[[]]],[11,"fold","","An iterator method that applies a function, producing a…",84,[[]]],[11,"fold_first","","The same as `fold()`, but uses the first element in the…",84,[[],["option",4]]],[11,"all","","Tests if every element of the iterator matches a predicate.",84,[[]]],[11,"any","","Tests if any element of the iterator matches a predicate.",84,[[]]],[11,"find","","Searches for an element of an iterator that satisfies a…",84,[[],["option",4]]],[11,"find_map","","Applies function to the elements of iterator and returns…",84,[[],["option",4]]],[11,"try_find","","Applies function to the elements of iterator and returns…",84,[[],[["option",4],["result",4]]]],[11,"position","","Searches for an element in an iterator, returning its index.",84,[[],["option",4]]],[11,"rposition","","Searches for an element in an iterator from the right,…",84,[[],["option",4]]],[11,"max","","Returns the maximum element of an iterator.",84,[[],["option",4]]],[11,"min","","Returns the minimum element of an iterator.",84,[[],["option",4]]],[11,"max_by_key","","Returns the element that gives the maximum value from the…",84,[[],["option",4]]],[11,"max_by","","Returns the element that gives the maximum value with…",84,[[],["option",4]]],[11,"min_by_key","","Returns the element that gives the minimum value from the…",84,[[],["option",4]]],[11,"min_by","","Returns the element that gives the minimum value with…",84,[[],["option",4]]],[11,"rev","","Reverses an iterator\'s direction.",84,[[],["rev",3]]],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",84,[[]]],[11,"copied","","Creates an iterator which copies all of its elements.",84,[[],["copied",3]]],[11,"cloned","","Creates an iterator which `clone`s all of its elements.",84,[[],["cloned",3]]],[11,"cycle","","Repeats an iterator endlessly.",84,[[],["cycle",3]]],[11,"sum","","Sums the elements of an iterator.",84,[[]]],[11,"product","","Iterates over the entire iterator, multiplying all the…",84,[[]]],[11,"cmp","","Lexicographically compares the elements of this…",84,[[],["ordering",4]]],[11,"cmp_by","","Lexicographically compares the elements of this…",84,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",84,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp_by","","Lexicographically compares the elements of this…",84,[[],[["ordering",4],["option",4]]]],[11,"eq","","Determines if the elements of this [`Iterator`] are equal…",84,[[]]],[11,"eq_by","","Determines if the elements of this [`Iterator`] are equal…",84,[[]]],[11,"ne","","Determines if the elements of this [`Iterator`] are…",84,[[]]],[11,"lt","","Determines if the elements of this [`Iterator`] are…",84,[[]]],[11,"le","","Determines if the elements of this [`Iterator`] are…",84,[[]]],[11,"gt","","Determines if the elements of this [`Iterator`] are…",84,[[]]],[11,"ge","","Determines if the elements of this [`Iterator`] are…",84,[[]]],[11,"is_sorted","","Checks if the elements of this iterator are sorted.",84,[[]]],[11,"is_sorted_by","","Checks if the elements of this iterator are sorted using…",84,[[]]],[11,"is_sorted_by_key","","Checks if the elements of this iterator are sorted using…",84,[[]]],[8,"Step","","Objects that have a notion of successor and predecessor…",null,null],[10,"steps_between","","Returns the number of successor steps required to get from…",85,[[],["option",4]]],[10,"forward_checked","","Returns the value that would be obtained by taking the…",85,[[],["option",4]]],[11,"forward","","Returns the value that would be obtained by taking the…",85,[[]]],[11,"forward_unchecked","","Returns the value that would be obtained by taking the…",85,[[]]],[10,"backward_checked","","Returns the value that would be obtained by taking the…",85,[[],["option",4]]],[11,"backward","","Returns the value that would be obtained by taking the…",85,[[]]],[11,"backward_unchecked","","Returns the value that would be obtained by taking the…",85,[[]]],[5,"empty","","Creates an iterator that yields nothing.",null,[[],["empty",3]]],[3,"Empty","","An iterator that yields nothing.",null,null],[12,"0","","",86,null],[5,"from_fn","","Creates a new iterator where each iteration calls the…",null,[[],["fromfn",3]]],[3,"FromFn","","An iterator where each iteration calls the provided…",null,null],[12,"0","","",87,null],[5,"once","","Creates an iterator that yields an element exactly once.",null,[[],["once",3]]],[3,"Once","","An iterator that yields an element exactly once.",null,null],[12,"inner","","",88,null],[5,"once_with","","Creates an iterator that lazily generates a value exactly…",null,[[],["oncewith",3]]],[3,"OnceWith","","An iterator that yields a single element of type `A` by…",null,null],[12,"gen","","",89,null],[5,"repeat","","Creates a new iterator that endlessly repeats a single…",null,[[],["repeat",3]]],[3,"Repeat","","An iterator that repeats an element endlessly.",null,null],[12,"element","","",90,null],[5,"repeat_with","","Creates a new iterator that repeats elements of type `A`…",null,[[],["repeatwith",3]]],[3,"RepeatWith","","An iterator that repeats elements of type `A` endlessly by…",null,null],[12,"repeater","","",91,null],[5,"successors","","Creates a new iterator where each successive item is…",null,[[["option",4]],["successors",3]]],[3,"Successors","","An new iterator where each successive item is computed…",null,null],[12,"next","","",92,null],[12,"succ","","",92,null],[8,"FusedIterator","","An iterator that always continues to yield `None` when…",null,null],[8,"TrustedLen","","An iterator that reports an accurate length using size_hint.",null,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","Removes and returns an element from the end of the iterator.",93,[[],["option",4]]],[11,"advance_back_by","","Advances the iterator from the back by `n` elements.",93,[[],["result",4]]],[11,"nth_back","","Returns the `n`th element from the end of the iterator.",93,[[],["option",4]]],[11,"try_rfold","","This is the reverse version of [`Iterator::try_fold()`]:…",93,[[]]],[11,"rfold","","An iterator method that reduces the iterator\'s elements to…",93,[[]]],[11,"rfind","","Searches for an element of an iterator from the back that…",93,[[],["option",4]]],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",94,[[]]],[11,"extend_one","","Extends a collection with exactly one element.",94,[[]]],[11,"extend_reserve","","Reserves capacity in a collection for the given number of…",94,[[]]],[8,"FromIterator","","Conversion from an [`Iterator`].",null,null],[10,"from_iter","","Creates a value from an iterator.",95,[[]]],[8,"IntoIterator","","Conversion into an [`Iterator`].",null,null],[16,"Item","","The type of the elements being iterated over.",96,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",96,null],[10,"into_iter","","Creates an iterator from a value.",96,[[]]],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact length of the iterator.",97,[[]]],[11,"is_empty","","Returns `true` if the iterator is empty.",97,[[]]],[8,"Product","","Trait to represent types that can be created by…",null,null],[10,"product","","Method which takes an iterator and generates `Self` from…",98,[[]]],[8,"Sum","","Trait to represent types that can be created by summing up…",null,null],[10,"sum","","Method which takes an iterator and generates `Self` from…",99,[[]]],[8,"InPlaceIterable","","An iterator that when yielding an item will have taken at…",null,null],[3,"Cloned","","An iterator that clones the elements of an underlying…",null,null],[12,"it","","",100,null],[3,"Copied","","An iterator that copies the elements of an underlying…",null,null],[12,"it","","",101,null],[3,"Flatten","","An iterator that flattens one level of nesting in an…",null,null],[12,"inner","","",102,null],[3,"MapWhile","","An iterator that only accepts elements while `predicate`…",null,null],[12,"iter","","",103,null],[12,"predicate","","",103,null],[8,"SourceIter","","This trait provides transitive access to source-stage in…",null,null],[16,"Source","","A source stage in an iterator pipeline.",104,null],[10,"as_inner","","Retrieve the source of an iterator pipeline.",104,[[]]],[3,"StepBy","","An iterator for stepping iterators by a custom amount.",null,null],[12,"iter","","",105,null],[12,"step","","",105,null],[12,"first_take","","",105,null],[3,"Chain","","An iterator that links two iterators together, in a chain.",null,null],[12,"a","","",106,null],[12,"b","","",106,null],[3,"Cycle","","An iterator that repeats endlessly.",null,null],[12,"orig","","",107,null],[12,"iter","","",107,null],[3,"Enumerate","","An iterator that yields the current count and the element…",null,null],[12,"iter","","",108,null],[12,"count","","",108,null],[3,"Filter","","An iterator that filters the elements of `iter` with…",null,null],[12,"iter","","",109,null],[12,"predicate","","",109,null],[3,"FilterMap","","An iterator that uses `f` to both filter and map elements…",null,null],[12,"iter","","",110,null],[12,"f","","",110,null],[3,"Map","","An iterator that maps the values of `iter` with `f`.",null,null],[12,"iter","","",111,null],[12,"f","","",111,null],[3,"Rev","","A double-ended iterator with the direction inverted.",null,null],[12,"iter","","",112,null],[3,"Zip","","An iterator that iterates two other iterators…",null,null],[12,"a","","",113,null],[12,"b","","",113,null],[12,"index","","",113,null],[12,"len","","",113,null],[3,"FlatMap","","An iterator that maps each element to an iterator, and…",null,null],[12,"inner","","",114,null],[3,"Peekable","","An iterator with a `peek()` that returns an optional…",null,null],[12,"iter","","",115,null],[12,"peeked","","Remember a peeked value, even if it was None.",115,null],[3,"Scan","","An iterator to maintain state while iterating another…",null,null],[12,"iter","","",116,null],[12,"f","","",116,null],[12,"state","","",116,null],[3,"Skip","","An iterator that skips over `n` elements of `iter`.",null,null],[12,"iter","","",117,null],[12,"n","","",117,null],[3,"SkipWhile","","An iterator that rejects elements while `predicate`…",null,null],[12,"iter","","",118,null],[12,"flag","","",118,null],[12,"predicate","","",118,null],[3,"Take","","An iterator that only iterates over the first `n`…",null,null],[12,"iter","","",119,null],[12,"n","","",119,null],[3,"TakeWhile","","An iterator that only accepts elements while `predicate`…",null,null],[12,"iter","","",120,null],[12,"flag","","",120,null],[12,"predicate","","",120,null],[3,"Fuse","","An iterator that yields `None` forever after the…",null,null],[12,"iter","","",121,null],[3,"Inspect","","An iterator that calls a function with a reference to each…",null,null],[12,"iter","","",122,null],[12,"f","","",122,null],[0,"marker","wasmer_types::lib::std","Primitive traits and types representing basic properties…",null,null],[8,"Send","wasmer_types::lib::std::marker","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile time.",null,null],[8,"Unsize","","Types that can be \\\"unsized\\\" to a dynamically-sized type.",null,null],[8,"StructuralPartialEq","","Required trait for constants used in pattern matches.",null,null],[8,"StructuralEq","","Required trait for constants used in pattern matches.",null,null],[8,"Copy","","Types whose values can be duplicated simply by copying bits.",null,null],[8,"Sync","","Types for which it is safe to share references between…",null,null],[3,"PhantomData","","Zero-sized type used to mark things that \\\"act like\\\" they…",null,null],[8,"DiscriminantKind","","Compiler-internal trait used to indicate the type of enum…",null,null],[16,"Discriminant","","The type of the discriminant, which must satisfy the trait…",123,null],[8,"Unpin","","Types that can be safely moved after being pinned.",null,null],[3,"PhantomPinned","","A marker type which does not implement `Unpin`.",null,null],[14,"Copy","","Derive macro generating an impl of the trait `Copy`.",null,null],[0,"mem","wasmer_types::lib::std","Basic functions for dealing with memory.",null,null],[5,"forget","wasmer_types::lib::std::mem","Takes ownership and \\\"forgets\\\" about the value without…",null,[[]]],[5,"forget_unsized","","Like [`forget`], but also accepts unsized values.",null,[[]]],[5,"size_of","","Returns the size of a type in bytes.",null,[[]]],[5,"size_of_val","","Returns the size of the pointed-to value in bytes.",null,[[]]],[5,"size_of_val_raw","","Returns the size of the pointed-to value in bytes.",null,[[]]],[5,"min_align_of","","Returns the ABI-required minimum alignment of a type.",null,[[]]],[5,"min_align_of_val","","Returns the ABI-required minimum alignment of the type of…",null,[[]]],[5,"align_of","","Returns the ABI-required minimum alignment of a type.",null,[[]]],[5,"align_of_val","","Returns the ABI-required minimum alignment of the type of…",null,[[]]],[5,"align_of_val_raw","","Returns the ABI-required minimum alignment of the type of…",null,[[]]],[5,"needs_drop","","Returns `true` if dropping values of type `T` matters.",null,[[]]],[5,"zeroed","","Returns the value of type `T` represented by the all-zero…",null,[[]]],[5,"uninitialized","","Bypasses Rust\'s normal memory-initialization checks by…",null,[[]]],[5,"swap","","Swaps the values at two mutable locations, without…",null,[[]]],[5,"take","","Replaces `dest` with the default value of `T`, returning…",null,[[]]],[5,"replace","","Moves `src` into the referenced `dest`, returning the…",null,[[]]],[5,"drop","","Disposes of a value.",null,[[]]],[5,"transmute_copy","","Interprets `src` as having type `&U`, and then reads `src`…",null,[[]]],[3,"Discriminant","","Opaque type representing the discriminant of an enum.",null,null],[12,"0","","",124,null],[5,"discriminant","","Returns a value uniquely identifying the enum variant in…",null,[[],["discriminant",3]]],[5,"variant_count","","Returns the number of variants in the enum type `T`.",null,[[]]],[3,"ManuallyDrop","","A wrapper to inhibit compiler from automatically calling…",null,null],[12,"value","","",125,null],[19,"MaybeUninit","","A wrapper type to construct uninitialized instances of `T`.",null,null],[12,"uninit","","",126,null],[12,"value","","",126,null],[5,"transmute","","Reinterprets the bits of a value of one type as another…",null,[[]]],[0,"ops","wasmer_types::lib::std","Overloadable operators.",null,null],[8,"Add","wasmer_types::lib::std::ops","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",127,null],[10,"add","","Performs the `+` operation.",127,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",128,null],[10,"div","","Performs the `/` operation.",128,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",129,null],[10,"mul","","Performs the `*` operation.",129,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",130,null],[10,"neg","","Performs the unary `-` operation.",130,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",131,null],[10,"rem","","Performs the `%` operation.",131,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",132,null],[10,"sub","","Performs the `-` operation.",132,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",133,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",134,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",135,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",136,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",137,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",138,null],[10,"bitand","","Performs the `&` operation.",138,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",139,null],[10,"bitor","","Performs the `|` operation.",139,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",140,null],[10,"bitxor","","Performs the `^` operation.",140,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",141,null],[10,"not","","Performs the unary `!` operation.",141,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",142,null],[10,"shl","","Performs the `<<` operation.",142,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",143,null],[10,"shr","","Performs the `>>` operation.",143,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",144,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",145,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",146,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",147,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",148,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",149,null],[10,"deref","","Dereferences the value.",149,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",150,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",151,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",152,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",153,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",154,null],[10,"call_once","","Performs the call operation.",154,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",155,null],[10,"index","","Performs the indexing (`container[index]`) operation.",155,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",156,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",157,null],[12,"end","","The upper bound of the range (exclusive).",157,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",158,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",159,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",160,null],[13,"Excluded","","An exclusive bound.",160,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",160,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",161,[[],["bound",4]]],[10,"end_bound","","End index bound.",161,[[],["bound",4]]],[11,"assert_len","","Performs bounds-checking of this range.",161,[[],["range",3]]],[11,"contains","","Returns `true` if `item` is contained in the range.",161,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[12,"start","","",162,null],[12,"end","","",162,null],[12,"exhausted","","",162,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",163,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",164,null],[16,"Error","","The type of this value when viewed as failed.",164,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",164,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",164,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",164,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",165,null],[16,"Return","","The type of value this generator returns.",165,null],[10,"resume","","Resumes the execution of this generator.",165,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",166,null],[13,"Complete","","The generator completed with a return value.",166,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[4,"ControlFlow","","Used to make try_fold closures more like normal loops",null,null],[13,"Continue","","Continue in the loop, using the given value for the next…",167,null],[13,"Break","","Exit the loop, yielding the given value",167,null],[0,"ptr","wasmer_types::lib::std","Manually manage memory through raw pointers.",null,null],[5,"drop_in_place","wasmer_types::lib::std::ptr","Executes the destructor (if any) of the pointed-to value.",null,[[]]],[5,"null","","Creates a null raw pointer.",null,[[]]],[5,"null_mut","","Creates a null mutable raw pointer.",null,[[]]],[5,"slice_from_raw_parts","","Forms a raw slice from a pointer and a length.",null,[[]]],[5,"slice_from_raw_parts_mut","","Performs the same functionality as…",null,[[]]],[5,"swap","","Swaps the values at two mutable locations of the same…",null,[[]]],[5,"swap_nonoverlapping","","Swaps `count * size_of::<T>()` bytes between the two…",null,[[]]],[5,"replace","","Moves `src` into the pointed `dst`, returning the previous…",null,[[]]],[5,"read","","Reads the value from `src` without moving it. This leaves…",null,[[]]],[5,"read_unaligned","","Reads the value from `src` without moving it. This leaves…",null,[[]]],[5,"write","","Overwrites a memory location with the given value without…",null,[[]]],[5,"write_unaligned","","Overwrites a memory location with the given value without…",null,[[]]],[5,"read_volatile","","Performs a volatile read of the value from `src` without…",null,[[]]],[5,"write_volatile","","Performs a volatile write of a memory location with the…",null,[[]]],[5,"eq","","Compares raw pointers for equality.",null,[[]]],[5,"hash","","Hash a raw pointer.",null,[[]]],[5,"copy_nonoverlapping","","Copies `count * size_of::<T>()` bytes from `src` to `dst`.…",null,[[]]],[5,"copy","","Copies `count * size_of::<T>()` bytes from `src` to `dst`.…",null,[[]]],[5,"write_bytes","","Sets `count * size_of::<T>()` bytes of memory starting at…",null,[[]]],[3,"NonNull","","`*mut T` but non-zero and covariant.",null,null],[12,"pointer","","",168,null],[14,"raw_const","","Create a `const` raw pointer to a place, without creating…",null,null],[14,"raw_mut","","Create a `mut` raw pointer to a place, without creating an…",null,null],[0,"rc","wasmer_types::lib::std","Single-threaded reference-counting pointers. \'Rc\' stands…",null,null],[3,"Rc","wasmer_types::lib::std::rc","A single-threaded reference-counting pointer. \'Rc\' stands…",null,null],[12,"ptr","","",169,null],[12,"phantom","","",169,null],[3,"Weak","","`Weak` is a version of [`Rc`] that holds a non-owning…",null,null],[12,"ptr","","",170,null],[0,"slice","wasmer_types::lib::std","A dynamically-sized view into a contiguous sequence, `[T]`.",null,null],[8,"Concat","wasmer_types::lib::std::slice","Helper trait for `[T]::concat`.",null,null],[16,"Output","","The resulting type after concatenation",171,null],[10,"concat","","Implementation of `[T]::concat`",171,[[]]],[8,"Join","","Helper trait for `[T]::join`",null,null],[16,"Output","","The resulting type after concatenation",172,null],[10,"join","","Implementation of `[T]::join`",172,[[]]],[3,"ArrayChunks","","An iterator over a slice in (non-overlapping) chunks (`N`…",null,null],[12,"iter","","",173,null],[12,"rem","","",173,null],[3,"ArrayChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[12,"iter","","",174,null],[12,"rem","","",174,null],[3,"ArrayWindows","","A windowed iterator over a slice in overlapping chunks…",null,null],[12,"slice_head","","",175,null],[12,"num","","",175,null],[12,"marker","","",175,null],[8,"SliceIndex","","A helper trait used for indexing operations.",null,null],[16,"Output","","The output type returned by methods.",176,null],[10,"get","","Returns a shared reference to the output at this location,…",176,[[],["option",4]]],[10,"get_mut","","Returns a mutable reference to the output at this…",176,[[],["option",4]]],[10,"get_unchecked","","Returns a shared reference to the output at this location,…",176,[[]]],[10,"get_unchecked_mut","","Returns a mutable reference to the output at this…",176,[[]]],[10,"index","","Returns a shared reference to the output at this location,…",176,[[]]],[10,"index_mut","","Returns a mutable reference to the output at this…",176,[[]]],[5,"from_mut","","Converts a reference to T into a slice of length 1…",null,[[]]],[5,"from_ref","","Converts a reference to T into a slice of length 1…",null,[[]]],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",null,[[]]],[5,"from_raw_parts_mut","","Performs the same functionality as [`from_raw_parts`],…",null,[[]]],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks…",null,null],[12,"v","","",177,null],[12,"chunk_size","","",177,null],[3,"Windows","","An iterator over overlapping subslices of length `size`.",null,null],[12,"v","","",178,null],[12,"size","","",178,null],[3,"ChunksExact","","An iterator over a slice in (non-overlapping) chunks…",null,null],[12,"v","","",179,null],[12,"rem","","",179,null],[12,"chunk_size","","",179,null],[3,"ChunksExactMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[12,"v","","",180,null],[12,"rem","","",180,null],[12,"chunk_size","","",180,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[12,"v","","",181,null],[12,"chunk_size","","",181,null],[3,"Split","","An iterator over subslices separated by elements that…",null,null],[12,"v","","",182,null],[12,"pred","","",182,null],[12,"finished","","",182,null],[3,"SplitMut","","An iterator over the mutable subslices of the vector which…",null,null],[12,"v","","",183,null],[12,"pred","","",183,null],[12,"finished","","",183,null],[3,"Iter","","Immutable slice iterator",null,null],[12,"ptr","","",184,null],[12,"end","","",184,null],[12,"_marker","","",184,null],[3,"IterMut","","Mutable slice iterator.",null,null],[12,"ptr","","",185,null],[12,"end","","",185,null],[12,"_marker","","",185,null],[3,"RChunks","","An iterator over a slice in (non-overlapping) chunks…",null,null],[12,"v","","",186,null],[12,"chunk_size","","",186,null],[3,"RChunksExact","","An iterator over a slice in (non-overlapping) chunks…",null,null],[12,"v","","",187,null],[12,"rem","","",187,null],[12,"chunk_size","","",187,null],[3,"RChunksExactMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[12,"v","","",188,null],[12,"rem","","",188,null],[12,"chunk_size","","",188,null],[3,"RChunksMut","","An iterator over a slice in (non-overlapping) mutable…",null,null],[12,"v","","",189,null],[12,"chunk_size","","",189,null],[3,"RSplit","","An iterator over subslices separated by elements that…",null,null],[12,"inner","","",190,null],[3,"RSplitMut","","An iterator over the subslices of the vector which are…",null,null],[12,"inner","","",191,null],[3,"RSplitN","","An iterator over subslices separated by elements that…",null,null],[12,"inner","","",192,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that…",null,null],[12,"inner","","",193,null],[3,"SplitN","","An iterator over subslices separated by elements that…",null,null],[12,"inner","","",194,null],[3,"SplitNMut","","An iterator over subslices separated by elements that…",null,null],[12,"inner","","",195,null],[0,"string","wasmer_types::lib::std","A UTF-8–encoded, growable string.",null,null],[3,"String","wasmer_types::lib::std::string","A UTF-8–encoded, growable string.",null,null],[12,"vec","","",196,null],[3,"FromUtf8Error","","A possible error value when converting a `String` from a…",null,null],[12,"bytes","","",197,null],[12,"error","","",197,null],[3,"FromUtf16Error","","A possible error value when converting a `String` from a…",null,null],[12,"0","","",198,null],[6,"ParseError","","A type alias for `Infallible`.",null,null],[8,"ToString","","A trait for converting a value to a `String`.",null,null],[10,"to_string","","Converts the given value to a `String`.",199,[[],["string",3]]],[3,"Drain","","A draining iterator for `String`.",null,null],[12,"string","","Will be used as &\'a mut String in the destructor",200,null],[12,"start","","Start of part to remove",200,null],[12,"end","","End of part to remove",200,null],[12,"iter","","Current remaining range to remove",200,null],[0,"sync","wasmer_types::lib::std","Useful synchronization primitives.",null,null],[0,"mpsc","wasmer_types::lib::std::sync","Multi-producer, single-consumer FIFO queue communication…",null,null],[3,"Receiver","wasmer_types::lib::std::sync::mpsc","The receiving half of Rust\'s [`channel`] (or…",null,null],[12,"inner","","",201,null],[3,"Iter","","An iterator over messages on a [`Receiver`], created by…",null,null],[12,"rx","","",202,null],[3,"TryIter","","An iterator that attempts to yield all pending values for…",null,null],[12,"rx","","",203,null],[3,"IntoIter","","An owning iterator over messages on a [`Receiver`],…",null,null],[12,"rx","","",204,null],[3,"Sender","","The sending-half of Rust\'s asynchronous [`channel`] type.…",null,null],[12,"inner","","",205,null],[3,"SyncSender","","The sending-half of Rust\'s synchronous [`sync_channel`]…",null,null],[12,"inner","","",206,null],[3,"SendError","","An error returned from the [`Sender::send`] or…",null,null],[12,"0","","",207,null],[3,"RecvError","","An error returned from the `recv` function on a…",null,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that…",null,null],[13,"Empty","","This channel is currently empty, but the Sender(s) have…",208,null],[13,"Disconnected","","The channel\'s sending half has become disconnected, and…",208,null],[4,"RecvTimeoutError","","This enumeration is the list of possible errors that made…",null,null],[13,"Timeout","","This channel is currently empty, but the Sender(s) have…",209,null],[13,"Disconnected","","The channel\'s sending half has become disconnected, and…",209,null],[4,"TrySendError","","This enumeration is the list of the possible error…",null,null],[13,"Full","","The data could not be sent on the [`sync_channel`] because…",210,null],[13,"Disconnected","","This [`sync_channel`]\'s receiving half has disconnected,…",210,null],[5,"channel","","Creates a new asynchronous channel, returning the…",null,[[]]],[5,"sync_channel","","Creates a new synchronous, bounded channel. All data sent…",null,[[]]],[3,"Arc","wasmer_types::lib::std::sync","A thread-safe reference-counting pointer. \'Arc\' stands for…",null,null],[12,"ptr","","",211,null],[12,"phantom","","",211,null],[3,"Weak","","`Weak` is a version of [`Arc`] that holds a non-owning…",null,null],[12,"ptr","","",212,null],[0,"atomic","","Atomic types",null,null],[5,"spin_loop_hint","wasmer_types::lib::std::sync::atomic","Signals the processor that it is inside a busy-wait…",null,[[]]],[3,"AtomicBool","","A boolean type which can be safely shared between threads.",null,null],[12,"v","","",213,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between…",null,null],[12,"p","","",214,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations.",215,null],[13,"Release","","When coupled with a store, all previous operations become…",215,null],[13,"Acquire","","When coupled with a load, if the loaded value was written…",215,null],[13,"AcqRel","","Has the effects of both [`Acquire`] and [`Release`]…",215,null],[13,"SeqCst","","Like [`Acquire`]/[`Release`]/[`AcqRel`] (for load, store,…",215,null],[17,"ATOMIC_BOOL_INIT","","An [`AtomicBool`] initialized to `false`.",null,null],[3,"AtomicI8","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",216,null],[17,"ATOMIC_I8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU8","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",217,null],[17,"ATOMIC_U8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI16","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",218,null],[17,"ATOMIC_I16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU16","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",219,null],[17,"ATOMIC_U16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI32","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",220,null],[17,"ATOMIC_I32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU32","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",221,null],[17,"ATOMIC_U32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI64","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",222,null],[17,"ATOMIC_I64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU64","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",223,null],[17,"ATOMIC_U64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicIsize","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",224,null],[17,"ATOMIC_ISIZE_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicUsize","","An integer type which can be safely shared between threads.",null,null],[12,"v","","",225,null],[17,"ATOMIC_USIZE_INIT","","An atomic integer initialized to `0`.",null,null],[5,"fence","","An atomic fence.",null,[[["ordering",4]]]],[5,"compiler_fence","","A compiler memory fence.",null,[[["ordering",4]]]],[3,"Barrier","wasmer_types::lib::std::sync","A barrier enables multiple threads to synchronize the…",null,null],[12,"lock","","",226,null],[12,"cvar","","",226,null],[12,"num_threads","","",226,null],[3,"BarrierWaitResult","","A `BarrierWaitResult` is returned by [`Barrier::wait()`]…",null,null],[12,"0","","",227,null],[3,"Condvar","","A Condition Variable",null,null],[12,"inner","","",228,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",null,null],[12,"0","","",229,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[12,"inner","","",230,null],[12,"poison","","",230,null],[12,"data","","",230,null],[3,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. When…",null,null],[12,"lock","","",231,null],[12,"poison","","",231,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[12,"state_and_queue","","",232,null],[12,"_marker","","",232,null],[3,"OnceState","","State yielded to [`Once::call_once_force()`]’s closure…",null,null],[12,"poisoned","","",233,null],[12,"set_state_on_drop_to","","",233,null],[17,"ONCE_INIT","","Initialization value for static [`Once`] values.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[12,"inner","","",234,null],[12,"poison","","",234,null],[12,"data","","",234,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[12,"lock","","",235,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[12,"lock","","",236,null],[12,"poison","","",236,null],[6,"LockResult","","A type alias for the result of a lock method which can be…",null,null],[3,"PoisonError","","A type of error which can be returned whenever a lock is…",null,null],[12,"guard","","",237,null],[4,"TryLockError","","An enumeration of possible errors associated with a…",null,null],[13,"Poisoned","","The lock could not be acquired because another thread…",238,null],[13,"WouldBlock","","The lock could not be acquired at this time because the…",238,null],[6,"TryLockResult","","A type alias for the result of a nonblocking locking method.",null,null],[0,"u32","wasmer_types::lib::std","The 32-bit unsigned integer type.",null,null],[17,"MIN","wasmer_types::lib::std::u32","The smallest value that can be represented by this integer…",null,null],[17,"MAX","","The largest value that can be represented by this integer…",null,null],[0,"vec","wasmer_types::lib::std","A contiguous growable array type with heap-allocated…",null,null],[3,"Vec","wasmer_types::lib::std::vec","A contiguous growable array type, written `Vec<T>` but…",null,null],[12,"buf","","",239,null],[12,"len","","",239,null],[3,"IntoIter","","An iterator that moves out of a vector.",null,null],[12,"buf","","",240,null],[12,"phantom","","",240,null],[12,"cap","","",240,null],[12,"ptr","","",240,null],[12,"end","","",240,null],[3,"Drain","","A draining iterator for `Vec<T>`.",null,null],[12,"tail_start","","Index of tail to preserve",241,null],[12,"tail_len","","Length of tail",241,null],[12,"iter","","Current remaining range to remove",241,null],[12,"vec","","",241,null],[3,"Splice","","A splicing iterator for `Vec`.",null,null],[12,"drain","","",242,null],[12,"replace_with","","",242,null],[3,"DrainFilter","","An iterator which uses a closure to determine if an…",null,null],[12,"vec","","",243,null],[12,"idx","","The index of the item that will be inspected by the next…",243,null],[12,"del","","The number of items that have been drained (removed) thus…",243,null],[12,"old_len","","The original length of `vec` prior to draining.",243,null],[12,"pred","","The filter test predicate.",243,null],[12,"panic_flag","","A flag that indicates a panic has occurred in the filter…",243,null],[14,"vec","wasmer_types::lib::std","Creates a `Vec` containing the arguments.",null,null],[0,"features","wasmer_types","",null,null],[3,"Features","wasmer_types::features","Controls which experimental features will be enabled.…",null,null],[12,"threads","","Threads proposal should be enabled",0,null],[12,"reference_types","","Reference Types proposal should be enabled",0,null],[12,"simd","","SIMD proposal should be enabled",0,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",0,null],[12,"multi_value","","Multi Value proposal should be enabled",0,null],[12,"tail_call","","Tail call proposal should be enabled",0,null],[12,"module_linking","","Module Linking proposal should be enabled",0,null],[12,"multi_memory","","Multi Memory proposal should be enabled",0,null],[12,"memory64","","64-bit Memory proposal should be enabled",0,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",0,null],[11,"new","wasmer_types","Create a new feature",0,[[]]],[11,"threads","","Configures whether the WebAssembly threads proposal will…",0,[[]]],[11,"reference_types","","Configures whether the WebAssembly reference types…",0,[[]]],[11,"simd","","Configures whether the WebAssembly SIMD proposal will be…",0,[[]]],[11,"bulk_memory","","Configures whether the WebAssembly bulk memory operations…",0,[[]]],[11,"multi_value","","Configures whether the WebAssembly multi-value proposal…",0,[[]]],[11,"tail_call","","Configures whether the WebAssembly tail-call proposal will…",0,[[]]],[11,"module_linking","","Configures whether the WebAssembly tail-call proposal will…",0,[[]]],[11,"multi_memory","","Configures whether the WebAssembly multi-memory proposal…",0,[[]]],[11,"memory64","","Configures whether the WebAssembly 64-bit memory proposal…",0,[[]]],[0,"indexes","","Helper functions and structures for the translation.",null,null],[3,"LocalFunctionIndex","wasmer_types::indexes","Index type of a function defined locally inside the…",null,null],[12,"0","","",6,null],[3,"LocalTableIndex","","Index type of a table defined locally inside the…",null,null],[12,"0","","",9,null],[3,"LocalMemoryIndex","","Index type of a memory defined locally inside the…",null,null],[12,"0","","",8,null],[3,"LocalGlobalIndex","","Index type of a global defined locally inside the…",null,null],[12,"0","","",7,null],[3,"FunctionIndex","","Index type of a function (imported or local) inside the…",null,null],[12,"0","","",4,null],[3,"TableIndex","","Index type of a table (imported or local) inside the…",null,null],[12,"0","","",12,null],[3,"GlobalIndex","","Index type of a global variable (imported or local) inside…",null,null],[12,"0","","",5,null],[3,"MemoryIndex","","Index type of a linear memory (imported or local) inside…",null,null],[12,"0","","",10,null],[3,"SignatureIndex","","Index type of a signature (imported or local) inside the…",null,null],[12,"0","","",11,null],[3,"DataIndex","","Index type of a passive data segment inside the…",null,null],[12,"0","","",2,null],[3,"ElemIndex","","Index type of a passive element segment inside the…",null,null],[12,"0","","",3,null],[3,"CustomSectionIndex","","Index type of a custom section inside a WebAssembly module.",null,null],[12,"0","","",1,null],[4,"ExportIndex","","An entity to export.",null,null],[13,"Function","","Function export.",28,null],[13,"Table","","Table export.",28,null],[13,"Memory","","Memory export.",28,null],[13,"Global","","Global export.",28,null],[4,"ImportIndex","","An entity to import.",null,null],[13,"Function","","Function import.",29,null],[13,"Table","","Table import.",29,null],[13,"Memory","","Memory import.",29,null],[13,"Global","","Global import.",29,null],[11,"from_u32","wasmer_types","Create a new instance from a `u32`.",6,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",6,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",9,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",9,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",8,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",8,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",7,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",7,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",4,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",4,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",12,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",12,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",5,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",5,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",10,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",10,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",11,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",11,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",2,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",2,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",3,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",3,[[]]],[11,"from_u32","","Create a new instance from a `u32`.",1,[[]]],[11,"as_u32","","Return the underlying index value as a `u32`.",1,[[]]],[0,"initializers","","",null,null],[3,"TableInitializer","wasmer_types::initializers","A WebAssembly table initializer.",null,null],[12,"table_index","","The index of a table to initialize.",16,null],[12,"base","","Optionally, a global variable giving a base index.",16,null],[12,"offset","","The offset to add to the base.",16,null],[12,"elements","","The values to write into the table elements.",16,null],[3,"DataInitializerLocation","","A memory index and offset within that memory where a data…",null,null],[12,"memory_index","","The index of the memory to initialize.",14,null],[12,"base","","Optionally a Global variable base to initialize at.",14,null],[12,"offset","","A constant offset to initialize at.",14,null],[3,"DataInitializer","","A data initializer for linear memory.",null,null],[12,"location","","The location where the initialization is to be performed.",13,null],[12,"data","","The initialization data.",13,null],[3,"OwnedDataInitializer","","As `DataInitializer` but owning the data rather than…",null,null],[12,"location","","The location where the initialization is to be performed.",15,null],[12,"data","","The initialization owned data.",15,null],[11,"new","wasmer_types","Creates a new `OwnedDataInitializer` from a…",15,[[["datainitializer",3]]]],[0,"memory_view","","",null,null],[3,"Atomically","wasmer_types::memory_view","Atomically.",null,null],[3,"NonAtomically","","Non-atomically.",null,null],[3,"MemoryView","","A view into a memory.",null,null],[12,"ptr","","",17,null],[12,"length","","",17,null],[12,"_phantom","","",17,null],[8,"Atomic","","",null,null],[16,"Output","","",244,null],[8,"Atomicity","","A trait that represants an atomic type.",null,null],[11,"new","wasmer_types","Creates a new MemoryView given a `pointer` and `length`.",17,[[]]],[11,"atomically","","Get atomic access to a memory view.",17,[[],[["atomically",3],["memoryview",3]]]],[0,"native","","This module permits to create native functions easily in…",null,null],[8,"NativeWasmType","wasmer_types::native","`NativeWasmType` represents a Wasm type that has a direct…",null,null],[16,"Abi","","The ABI for this type (i32, i64, f32, f64)",245,null],[18,"WASM_TYPE","","Type for this `NativeWasmType`.",245,null],[10,"to_binary","","Convert self to i128 binary representation.",245,[[]]],[11,"to_value","","Convert self to a `Value`.",245,[[],["value",4]]],[10,"from_binary","","Convert to self from i128 binary representation.",245,[[]]],[8,"ValueType","","Trait for a Value type. A Value type is a type that is…",null,null],[0,"ref","wasmer_types","",null,null],[3,"InternalRef","wasmer_types::ref","",null,null],[12,"0","","",246,null],[3,"AnyAndHostInfo","","",null,null],[12,"any","","",247,null],[12,"host_info","","",247,null],[3,"OtherRef","","",null,null],[12,"0","","",248,null],[3,"ContentBox","","",null,null],[12,"content","","",249,null],[12,"host_info","","",249,null],[12,"externref_data","","",249,null],[3,"HostRef","","Represents a piece of data located in the host environment.",null,null],[12,"0","","",18,null],[4,"ExternRef","","Represents an opaque reference to any data within…",null,null],[13,"Null","","A reference to no data.",30,null],[13,"Ref","","A reference to data stored internally.",30,null],[13,"Other","","A reference to data located outside.",30,null],[8,"HostInfo","","",null,null],[11,"finalize","","",250,[[]]],[8,"InternalRefBase","","",null,null],[10,"as_any","","",251,[[],["any",8]]],[10,"host_info","","",251,[[],[["refmut",3],["option",4]]]],[10,"set_host_info","","",251,[[["option",4],["box",3]]]],[10,"ptr_eq","","",251,[[["internalrefbase",8]]]],[11,"is_ref","","",246,[[]]],[11,"get_ref","","",246,[[],["hostref",3]]],[11,"new","wasmer_types","Creates a new instance of `ExternRef` from `Box<dyn Any>`.",30,[[["any",8],["box",3]]]],[11,"null","","Creates a `Null` reference.",30,[[]]],[11,"data","","Returns the data stored in the reference if available.",30,[[],[["box",3],["ref",3]]]],[11,"ptr_eq","","Returns true if the two `ExternRef<T>`\'s point to the same…",30,[[]]],[11,"host_info","","Returns a mutable reference to the host information if…",30,[[],[["refmut",3],["option",4]]]],[11,"set_host_info","","Sets the host information for an `ExternRef`.",30,[[["option",4],["box",3]]]],[11,"new","","Creates a new `HostRef<T>` from `T`.",18,[[]]],[11,"borrow","","Immutably borrows the wrapped data.",18,[[],["ref",3]]],[11,"borrow_mut","","Mutably borrows the wrapped data.",18,[[],["refmut",3]]],[11,"ptr_eq","","Returns true if the two `HostRef<T>`\'s point to the same…",18,[[]]],[11,"externref","","Returns an opaque reference to the wrapped data in the…",18,[[],["externref",4]]],[0,"types","","",null,null],[3,"V128","wasmer_types::types","The WebAssembly V128 type",null,null],[12,"0","","",27,null],[3,"FunctionType","","The signature of a function that is either implemented in…",null,null],[12,"params","","The parameters of the function",22,null],[12,"results","","The return values of the function",22,null],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",23,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",23,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",26,null],[12,"minimum","","The minimum number of elements in the table.",26,null],[12,"maximum","","The maximum number of elements in the table.",26,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",25,null],[12,"maximum","","The maximum number of pages in the memory.",25,null],[12,"shared","","Whether the memory may be shared between multiple threads.",25,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",24,null],[12,"name","","",24,null],[12,"ty","","",24,null],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",21,null],[12,"ty","","",21,null],[4,"Type","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",35,null],[13,"I64","","Signed 64 bit integer.",35,null],[13,"F32","","Floating point 32 bit integer.",35,null],[13,"F64","","Floating point 64 bit integer.",35,null],[13,"V128","","A 128 bit number.",35,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",35,null],[13,"FuncRef","","A reference to a Wasm function.",35,null],[4,"ExternType","","A list of all possible types which can be externally…",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",32,null],[13,"Global","","This external type is the type of a WebAssembly global.",32,null],[13,"Table","","This external type is the type of a WebAssembly table.",32,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",32,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",34,null],[13,"Var","","The value of the global can change over time",34,null],[4,"GlobalInit","","Globals are initialized via the `const` operators or by…",null,null],[13,"I32Const","","An `i32.const`.",33,null],[13,"I64Const","","An `i64.const`.",33,null],[13,"F32Const","","An `f32.const`.",33,null],[13,"F64Const","","An `f64.const`.",33,null],[13,"V128Const","","A `v128.const`.",33,null],[13,"GetGlobal","","A `global.get` of another global.",33,null],[13,"RefNullConst","","A `ref.null`.",33,null],[13,"RefFunc","","A `ref.func <index>`.",33,null],[5,"is_global_compatible","","",null,[[["globaltype",3]]]],[5,"is_table_element_type_compatible","","",null,[[["type",4]]]],[5,"is_table_compatible","","",null,[[["tabletype",3]]]],[5,"is_memory_compatible","","",null,[[["memorytype",3]]]],[11,"is_num","wasmer_types","Returns true if `Type` matches any of the numeric types.…",35,[[]]],[11,"is_ref","","Returns true if `Type` matches either of the reference…",35,[[]]],[11,"bytes","","Get the bytes corresponding to the V128 value",27,[[]]],[11,"iter","","Iterate over the bytes in the constant.",27,[[]]],[11,"to_vec","","Convert the immediate into a vector.",27,[[],["vec",3]]],[11,"as_slice","","Convert the immediate into a slice.",27,[[]]],[11,"func","","Attempt to return the underlying type of this external…",32,[[],[["functiontype",3],["option",4]]]],[11,"unwrap_func","","Returns the underlying descriptor of this [`ExternType`],…",32,[[],["functiontype",3]]],[11,"global","","Attempt to return the underlying type of this external…",32,[[],[["option",4],["globaltype",3]]]],[11,"unwrap_global","","Returns the underlying descriptor of this [`ExternType`],…",32,[[],["globaltype",3]]],[11,"table","","Attempt to return the underlying type of this external…",32,[[],[["option",4],["tabletype",3]]]],[11,"unwrap_table","","Returns the underlying descriptor of this [`ExternType`],…",32,[[],["tabletype",3]]],[11,"memory","","Attempt to return the underlying type of this external…",32,[[],[["option",4],["memorytype",3]]]],[11,"unwrap_memory","","Returns the underlying descriptor of this [`ExternType`],…",32,[[],["memorytype",3]]],[11,"is_compatible_with","","Check if two externs are compatible",32,[[]]],[11,"new","","Creates a new Function Type with the given parameter and…",22,[[]]],[11,"params","","Parameter types.",22,[[]]],[11,"results","","Return types.",22,[[]]],[11,"is_mutable","","Returns a boolean indicating if the enum is set to mutable.",34,[[]]],[11,"new","","Create a new Global variable",23,[[["mutability",4],["type",4]]]],[11,"from_value","","Get the `GlobalInit` from a given `Value`",33,[[["value",4]]]],[11,"to_value","","Get the `Value` from the Global init value",33,[[],["value",4]]],[11,"new","","Creates a new table descriptor which will contain the…",26,[[["option",4],["type",4]]]],[11,"new","","Creates a new descriptor for a WebAssembly memory given…",25,[[["option",4]]]],[11,"new","","Creates a new import descriptor which comes from `module`…",24,[[]]],[11,"module","","Returns the module name that this import is expected to…",24,[[]]],[11,"name","","Returns the field name of the module that this import is…",24,[[]]],[11,"ty","","Returns the expected type of this import.",24,[[]]],[11,"new","","Creates a new export which is exported with the given…",21,[[]]],[11,"name","","Returns the name by which this export is known by.",21,[[]]],[11,"ty","","Returns the type of this export.",21,[[]]],[0,"units","","",null,null],[3,"Pages","wasmer_types::units","Units of WebAssembly pages (as specified to be 65,536…",null,null],[12,"0","","",20,null],[3,"Bytes","","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",19,null],[3,"PageCountOutOfRange","","The only error that can happen when converting `Bytes` to…",null,null],[17,"WASM_PAGE_SIZE","","WebAssembly page sizes are fixed to be 64KiB. Note: large…",null,null],[17,"WASM_MAX_PAGES","","The number of pages we can have before we run out of byte…",null,null],[17,"WASM_MIN_PAGES","","The minimum number of pages allowed.",null,null],[11,"max_value","wasmer_types","Returns the largest value that can be represented by the…",20,[[]]],[11,"checked_add","","Checked addition. Computes `self + rhs`, returning `None`…",20,[[],["option",4]]],[11,"bytes","","Calculate number of bytes from pages.",20,[[],["bytes",3]]],[0,"values","","",null,null],[4,"Value","wasmer_types::values","Possible runtime values that a WebAssembly module can…",null,null],[13,"I32","","A 32-bit integer.",31,null],[13,"I64","","A 64-bit integer.",31,null],[13,"F32","","A 32-bit float.",31,null],[13,"F64","","A 64-bit float.",31,null],[13,"ExternRef","","An `externref` value which can hold opaque data to the…",31,null],[13,"FuncRef","","A first-class reference to a WebAssembly function.",31,null],[13,"V128","","A 128-bit number",31,null],[17,"NOT_I32","","",null,null],[17,"NOT_I64","","",null,null],[17,"NOT_F32","","",null,null],[17,"NOT_F64","","",null,null],[11,"null","wasmer_types","Returns a null `externref` value.",31,[[]]],[11,"ty","","Returns the corresponding [`Type`] for this `Value`.",31,[[],["type",4]]],[11,"write_value_to","","Writes it\'s value to a given pointer",31,[[]]],[11,"read_value_from","","Gets a `Value` given a pointer and a `Type`",31,[[["type",4]]]],[11,"i32","","Attempt to access the underlying value of this `Value`,…",31,[[],["option",4]]],[11,"unwrap_i32","","Returns the underlying value of this `Value`, panicking if…",31,[[]]],[11,"i64","","Attempt to access the underlying value of this `Value`,…",31,[[],["option",4]]],[11,"unwrap_i64","","Returns the underlying value of this `Value`, panicking if…",31,[[]]],[11,"f32","","Attempt to access the underlying value of this `Value`,…",31,[[],["option",4]]],[11,"unwrap_f32","","Returns the underlying value of this `Value`, panicking if…",31,[[]]],[11,"f64","","Attempt to access the underlying value of this `Value`,…",31,[[],["option",4]]],[11,"unwrap_f64","","Returns the underlying value of this `Value`, panicking if…",31,[[]]],[11,"funcref","","Attempt to access the underlying value of this `Value`,…",31,[[],["option",4]]],[11,"unwrap_funcref","","Returns the underlying value of this `Value`, panicking if…",31,[[]]],[11,"v128","","Attempt to access the underlying value of this `Value`,…",31,[[],["option",4]]],[11,"unwrap_v128","","Returns the underlying value of this `Value`, panicking if…",31,[[]]],[11,"externref","","Attempt to access the underlying value of this `Value`,…",31,[[],[["option",4],["externref",4]]]],[11,"unwrap_externref","","Returns the underlying value of this `Value`, panicking if…",31,[[],["externref",4]]],[0,"entity","","The entity module, with common helpers for Rust structures",null,null],[3,"BoxedSlice","wasmer_types::entity","A slice mapping `K -> V` allocating dense entity references.",null,null],[12,"elems","","",252,null],[12,"unused","","",252,null],[3,"Iter","","Iterate over all keys in order.",null,null],[12,"enumerate","","",253,null],[12,"unused","","",253,null],[3,"IterMut","","Iterate over all keys in order.",null,null],[12,"enumerate","","",254,null],[12,"unused","","",254,null],[3,"Keys","","Iterate over all keys in order.",null,null],[12,"pos","","",255,null],[12,"rev_pos","","",255,null],[12,"unused","","",255,null],[3,"PrimaryMap","","A primary mapping `K -> V` allocating dense entity…",null,null],[12,"elems","","",256,null],[12,"unused","","",256,null],[3,"SecondaryMap","","A mapping `K -> V` for densely indexed entity references.",null,null],[12,"elems","","",257,null],[12,"default","","",257,null],[12,"unused","","",257,null],[0,"packed_option","","Compact representation of `Option<T>` for types with a…",null,null],[3,"PackedOption","wasmer_types::entity::packed_option","Packed representation of `Option<T>`.",null,null],[12,"0","","",258,null],[8,"ReservedValue","","Types that have a reserved value which can\'t be created…",null,null],[10,"reserved_value","","Create an instance of the reserved value.",259,[[]]],[10,"is_reserved_value","","Checks whether value is the reserved one.",259,[[]]],[11,"is_none","","Returns `true` if the packed option is a `None` value.",258,[[]]],[11,"is_some","","Returns `true` if the packed option is a `Some` value.",258,[[]]],[11,"expand","","Expand the packed option into a normal `Option`.",258,[[],["option",4]]],[11,"map","","Maps a `PackedOption<T>` to `Option<U>` by applying a…",258,[[],["option",4]]],[11,"unwrap","","Unwrap a packed `Some` value or panic.",258,[[]]],[11,"expect","","Unwrap a packed `Some` value or panic.",258,[[]]],[11,"take","","Takes the value out of the packed option, leaving a `None`…",258,[[],["option",4]]],[0,"boxed_slice","wasmer_types::entity","Boxed slices for `PrimaryMap`.",null,null],[3,"BoxedSlice","wasmer_types::entity::boxed_slice","A slice mapping `K -> V` allocating dense entity references.",null,null],[12,"elems","","",252,null],[12,"unused","","",252,null],[11,"from_raw","wasmer_types::entity","Create a new slice from a raw pointer. A safer way to…",252,[[]]],[11,"is_valid","","Check if `k` is a valid key in the map.",252,[[]]],[11,"get","","Get the element at `k` if it exists.",252,[[],["option",4]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",252,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",252,[[]]],[11,"len","","Get the total number of entity references created.",252,[[]]],[11,"keys","","Iterate over all the keys in this map.",252,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",252,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",252,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",252,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",252,[[],["itermut",3]]],[11,"last","","Returns the last element that was inserted in the map.",252,[[],["option",4]]],[0,"iter","","A double-ended iterator over entity references and entities.",null,null],[3,"Iter","wasmer_types::entity::iter","Iterate over all keys in order.",null,null],[12,"enumerate","","",253,null],[12,"unused","","",253,null],[3,"IterMut","","Iterate over all keys in order.",null,null],[12,"enumerate","","",254,null],[12,"unused","","",254,null],[3,"IntoIter","","Iterate over all keys in order.",null,null],[12,"enumerate","","",260,null],[12,"unused","","",260,null],[11,"new","wasmer_types::entity","Create an `Iter` iterator that visits the `PrimaryMap`…",253,[[["iter",3]]]],[11,"new","","Create an `IterMut` iterator that visits the `PrimaryMap`…",254,[[["itermut",3]]]],[11,"new","wasmer_types::entity::iter","Create an `IntoIter` iterator that visits the `PrimaryMap`…",260,[[["intoiter",3]]]],[0,"keys","wasmer_types::entity","A double-ended iterator over entity references.",null,null],[3,"Keys","wasmer_types::entity::keys","Iterate over all keys in order.",null,null],[12,"pos","","",255,null],[12,"rev_pos","","",255,null],[12,"unused","","",255,null],[11,"with_len","wasmer_types::entity","Create a `Keys` iterator that visits `len` entities…",255,[[]]],[0,"primary_map","","Densely numbered entity references as mapping keys.",null,null],[3,"PrimaryMap","wasmer_types::entity::primary_map","A primary mapping `K -> V` allocating dense entity…",null,null],[12,"elems","","",256,null],[12,"unused","","",256,null],[11,"new","wasmer_types::entity","Create a new empty map.",256,[[]]],[11,"with_capacity","","Create a new empty map with the given capacity.",256,[[]]],[11,"is_valid","","Check if `k` is a valid key in the map.",256,[[]]],[11,"get","","Get the element at `k` if it exists.",256,[[],["option",4]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",256,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",256,[[]]],[11,"len","","Get the total number of entity references created.",256,[[]]],[11,"keys","","Iterate over all the keys in this map.",256,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",256,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",256,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",256,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",256,[[],["itermut",3]]],[11,"clear","","Remove all entries from this map.",256,[[]]],[11,"next_key","","Get the key that will be assigned to the next pushed value.",256,[[]]],[11,"push","","Append `v` to the mapping, assigning a new key which is…",256,[[]]],[11,"last","","Returns the last element that was inserted in the map.",256,[[],["option",4]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",256,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",256,[[]]],[11,"shrink_to_fit","","Shrinks the capacity of the `PrimaryMap` as much as…",256,[[]]],[11,"into_boxed_slice","","Consumes this `PrimaryMap` and produces a `BoxedSlice`.",256,[[],["boxedslice",3]]],[0,"secondary_map","","Densely numbered entity references as mapping keys.",null,null],[3,"SecondaryMap","wasmer_types::entity::secondary_map","A mapping `K -> V` for densely indexed entity references.",null,null],[12,"elems","","",257,null],[12,"default","","",257,null],[12,"unused","","",257,null],[11,"new","wasmer_types::entity","Create a new empty map.",257,[[]]],[11,"with_capacity","","Create a new, empty map with the specified capacity.",257,[[]]],[11,"with_default","","Create a new empty map with a specified default value.",257,[[]]],[11,"capacity","","Returns the number of elements the map can hold without…",257,[[]]],[11,"get","","Get the element at `k` if it exists.",257,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",257,[[]]],[11,"clear","","Remove all entries from this map.",257,[[]]],[11,"iter","","Iterate over all the keys and values in this map.",257,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",257,[[],["itermut",3]]],[11,"keys","","Iterate over all the keys in this map.",257,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",257,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",257,[[],["itermut",3]]],[11,"resize","","Resize the map to have `n` entries by adding default…",257,[[]]],[8,"EntityRef","","A type wrapping a small integer index should implement…",null,null],[10,"new","","Create a new entity reference from a small integer. This…",261,[[]]],[10,"index","","Get the index that was used to create this entity reference.",261,[[]]],[17,"WASM_MAX_PAGES","wasmer_types","The number of pages we can have before we run out of byte…",null,null],[17,"WASM_MIN_PAGES","","The minimum number of pages allowed.",null,null],[17,"WASM_PAGE_SIZE","","WebAssembly page sizes are fixed to be 64KiB. Note: large…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[8,"NativeWasmType","","`NativeWasmType` represents a Wasm type that has a direct…",null,null],[16,"Abi","","The ABI for this type (i32, i64, f32, f64)",245,null],[18,"WASM_TYPE","wasmer_types::native","Type for this `NativeWasmType`.",245,null],[10,"to_binary","wasmer_types","Convert self to i128 binary representation.",245,[[]]],[11,"to_value","wasmer_types::native","Convert self to a `Value`.",245,[[],["value",4]]],[10,"from_binary","wasmer_types","Convert to self from i128 binary representation.",245,[[]]],[8,"ValueType","","Trait for a Value type. A Value type is a type that is…",null,null],[8,"HostInfo","","",null,null],[11,"finalize","wasmer_types::ref","",250,[[]]],[14,"entity_impl","wasmer_types","Macro which provides the common implementation of a 32-bit…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"to_string","","",263,[[],["string",3]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"equivalent","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[]]],[11,"from","wasmer_types::lib::std::any","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"equivalent","","",39,[[]]],[11,"from","wasmer_types::lib::std::boxed","",42,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"into_searcher","","",42,[[],["charpredicatesearcher",3]]],[11,"is_contained_in","","",42,[[]]],[11,"is_prefix_of","","",42,[[]]],[11,"strip_prefix_of","","",42,[[],["option",4]]],[11,"is_suffix_of","","",42,[[]]],[11,"strip_suffix_of","","",42,[[],["option",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"equivalent","","",42,[[]]],[11,"from","wasmer_types::lib::std::cell","",43,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"equivalent","","",43,[[]]],[11,"from","","",44,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"equivalent","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::cmp","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"equivalent","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"equivalent","","",52,[[]]],[11,"from","wasmer_types::lib::std::convert","",264,[[]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"to_string","","",264,[[],["string",3]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"equivalent","","",264,[[]]],[11,"from","wasmer_types::lib::std::fmt","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"to_string","","",265,[[],["string",3]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"equivalent","","",265,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::hash","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"equivalent","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::iter","",86,[[]]],[11,"into","","",86,[[]]],[11,"into_iter","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"into_iter","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into_iter","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"into_iter","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"into_iter","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"into_iter","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"into_iter","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"into_iter","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"into_iter","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"into_iter","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"into_iter","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"into_iter","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"into_iter","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"into_iter","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"into_iter","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"into_iter","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"into_iter","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"into_iter","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"into_iter","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"into_iter","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"into_iter","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"into_iter","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"into_iter","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"into_iter","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"into_iter","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"into_iter","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"into_iter","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"into_iter","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"into_iter","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::marker","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"equivalent","","",266,[[]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"equivalent","","",267,[[]]],[11,"from","wasmer_types::lib::std::mem","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"equivalent","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"equivalent","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::ops","",157,[[]]],[11,"into","","",157,[[]]],[11,"into_iter","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"equivalent","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"into_iter","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"equivalent","","",158,[[]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"equivalent","","",268,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"equivalent","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"equivalent","","",160,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"into_iter","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"equivalent","","",162,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"equivalent","","",163,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"equivalent","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::ptr","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"equivalent","","",168,[[]]],[11,"from","wasmer_types::lib::std::rc","",169,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"to_string","","",169,[[],["string",3]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"equivalent","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::slice","",173,[[]]],[11,"into","","",173,[[]]],[11,"into_iter","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"into_iter","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"into_iter","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"into_iter","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"into_iter","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"into_iter","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"into_iter","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"into_iter","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"into_iter","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"into_iter","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"into_iter","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"into_iter","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"into_iter","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"into_iter","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"into_iter","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"into_iter","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"into_iter","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"into_iter","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"into_iter","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"into_iter","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"into_iter","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"into_iter","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::string","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"to_string","","",196,[[],["string",3]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"equivalent","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"to_string","","",197,[[],["string",3]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"equivalent","","",197,[[]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_string","","",198,[[],["string",3]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"into_iter","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::sync::mpsc","",201,[[]]],[11,"into","","",201,[[]]],[11,"into_iter","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"into_iter","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"into_iter","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"into_iter","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"to_string","","",207,[[],["string",3]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"equivalent","","",207,[[]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"to_string","","",269,[[],["string",3]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"equivalent","","",269,[[]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"to_string","","",208,[[],["string",3]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"equivalent","","",208,[[]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"to_string","","",209,[[],["string",3]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"equivalent","","",209,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"to_string","","",210,[[],["string",3]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"equivalent","","",210,[[]]],[11,"from","wasmer_types::lib::std::sync","",211,[[]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"to_string","","",211,[[],["string",3]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"equivalent","","",211,[[]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"equivalent","","",215,[[]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::sync","",226,[[]]],[11,"into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"equivalent","","",229,[[]]],[11,"from","","",230,[[]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_string","","",231,[[],["string",3]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"from","","",234,[[]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_string","","",235,[[],["string",3]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_string","","",236,[[],["string",3]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_string","","",237,[[],["string",3]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_string","","",238,[[],["string",3]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","wasmer_types::lib::std::vec","",239,[[]]],[11,"into","","",239,[[]]],[11,"into_iter","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"equivalent","","",239,[[]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"into_iter","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"into_iter","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"into_iter","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"into_iter","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","wasmer_types::memory_view","",270,[[]]],[11,"into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"from","wasmer_types::ref","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","wasmer_types::entity","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"into_iter","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"into_iter","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"into_iter","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"into_iter","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"equivalent","","",256,[[]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"equivalent","","",257,[[]]],[11,"from","wasmer_types::entity::packed_option","",258,[[]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"equivalent","","",258,[[]]],[11,"from","wasmer_types::entity::iter","",260,[[]]],[11,"into","","",260,[[]]],[11,"into_iter","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"description","wasmer_types::lib::std::sync","",238,[[]]],[11,"cause","","",238,[[],[["error",8],["option",4]]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",208,[[]]],[11,"description","wasmer_types::lib::std::sync","",237,[[]]],[11,"description","wasmer_types::lib::std::boxed","",42,[[]]],[11,"cause","","",42,[[],[["error",8],["option",4]]]],[11,"source","","",42,[[],[["option",4],["error",8]]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",207,[[]]],[11,"description","wasmer_types::lib::std::convert","",264,[[]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",209,[[]]],[11,"description","wasmer_types::lib::std::fmt","",265,[[]]],[11,"description","wasmer_types::lib::std::string","",198,[[]]],[11,"description","","",197,[[]]],[11,"description","wasmer_types::lib::std::cell","",45,[[]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",210,[[]]],[11,"description","","",269,[[]]],[11,"description","wasmer_types::lib::std::cell","",46,[[]]],[11,"deref","wasmer_types::lib::std::sync","",231,[[]]],[11,"deref","","",236,[[]]],[11,"deref","","",235,[[]]],[11,"partial_cmp","wasmer_types::lib::std::borrow","",39,[[["pathbuf",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["osstring",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["pathbuf",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["osstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["path",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",39,[[["osstring",3]],[["ordering",4],["option",4]]]],[11,"from","wasmer_types::lib::std::boxed","",42,[[["path",3],["cow",4]],[["path",3],["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::rc","Converts a `Path` into an `Rc` by copying the `Path` data…",169,[[["path",3]],[["path",3],["rc",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [`String`] into a box of dyn [`Error`].",42,[[["string",3]],[["global",3],["box",3],["error",8]]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["cstring",3]],[["cow",4],["cstr",3]]]],[11,"from","","",39,[[["cstring",3]],[["cow",4],["cstr",3]]]],[11,"from","wasmer_types::lib::std::sync","",238,[[["poisonerror",3]],["trylockerror",4]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [`Cow`] into a box of dyn [`Error`].",42,[[["cow",4]],[["global",3],["box",3],["error",8]]]],[11,"from","","Converts a [`OsString`] into a [`Box`]`<OsStr>` without…",42,[[["osstring",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","wasmer_types::lib::std::sync::mpsc","Converts a `RecvError` into a `RecvTimeoutError`.",209,[[["recverror",3]],["recvtimeouterror",4]]],[11,"from","","Converts a `RecvError` into a `TryRecvError`.",208,[[["recverror",3]],["tryrecverror",4]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["path",3]],[["cow",4],["path",3]]]],[11,"from","","",39,[[["pathbuf",3]],[["cow",4],["path",3]]]],[11,"from","","",39,[[["cstr",3]],[["cow",4],["cstr",3]]]],[11,"from","wasmer_types::lib::std::sync","Creates a new mutex in an unlocked state ready for use.…",230,[[],["mutex",3]]],[11,"from","wasmer_types::lib::std::sync::mpsc","Converts a `SendError<T>` into a `TrySendError<T>`.",210,[[["senderror",3]],["trysenderror",4]]],[11,"from","wasmer_types::lib::std::sync","Converts a [`CString`] into a [`Arc`]`<CStr>` without…",211,[[["cstring",3]],[["arc",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [`String`] into a box of dyn [`Error`] +…",42,[[["string",3]],[["global",3],["error",8],["box",3]]]],[11,"from","wasmer_types::lib::std::sync","Converts a `PathBuf` into an `Arc` by moving the `PathBuf`…",211,[[["pathbuf",3]],[["path",3],["arc",3]]]],[11,"from","","",211,[[["osstr",3]],[["osstr",3],["arc",3]]]],[11,"from","","Creates a new instance of an `RwLock<T>` which is…",234,[[],["rwlock",3]]],[11,"from","","Converts a [`OsString`] into a [`Arc`]`<OsStr>` without…",211,[[["osstring",3]],[["osstr",3],["arc",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [`Cow`] into a box of dyn [`Error`] + [`Send`]…",42,[[["cow",4]],[["box",3],["error",8],["global",3]]]],[11,"from","wasmer_types::lib::std::rc","",169,[[["osstr",3]],[["osstr",3],["rc",3]]]],[11,"from","","Converts a [`CString`] into a [`Rc`]`<CStr>` without…",169,[[["cstring",3]],[["rc",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [`CString`] into a [`Box`]`<CStr>` without…",42,[[["cstring",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","","",42,[[["cstr",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","","Converts a `str` into a box of dyn [`Error`] + [`Send`] +…",42,[[],[["box",3],["error",8],["global",3]]]],[11,"from","","",42,[[["osstr",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","","",42,[[["cow",4],["osstr",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["osstring",3]],[["osstr",3],["cow",4]]]],[11,"from","wasmer_types::lib::std::rc","Converts a `PathBuf` into an `Rc` by moving the `PathBuf`…",169,[[["pathbuf",3]],[["path",3],["rc",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a `PathBuf` into a `Box<Path>`",42,[[["pathbuf",3]],[["path",3],["global",3],["box",3]]]],[11,"from","","",42,[[["path",3]],[["path",3],["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::rc","",169,[[["cstr",3]],[["rc",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["osstring",3]],[["osstr",3],["cow",4]]]],[11,"from","","",39,[[["osstr",3]],[["osstr",3],["cow",4]]]],[11,"from","wasmer_types::lib::std::sync","",211,[[["cstr",3]],[["arc",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::rc","Converts a [`OsString`] into a [`Rc`]`<OsStr>` without…",169,[[["osstring",3]],[["osstr",3],["rc",3]]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["pathbuf",3]],[["cow",4],["path",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a `str` into a box of dyn [`Error`].",42,[[],[["global",3],["box",3],["error",8]]]],[11,"from","","Converts a type of [`Error`] into a box of dyn [`Error`].",42,[[],[["box",3],["global",3],["error",8]]]],[11,"from","","Converts a type of [`Error`] + [`Send`] + [`Sync`] into a…",42,[[],[["box",3],["error",8],["global",3]]]],[11,"from","wasmer_types::lib::std::sync","Converts a `Path` into an `Arc` by copying the `Path` data…",211,[[["path",3]],[["path",3],["arc",3]]]],[11,"from","wasmer_types::lib::std::boxed","",42,[[["cow",4],["cstr",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","wasmer_types::lib::std::vec","Converts a [`CString`] into a [`Vec`]`<u8>`.",239,[[["cstring",3]],["vec",3]]],[11,"as_ref","wasmer_types::lib::std::string","",196,[[],["path",3]]],[11,"as_ref","wasmer_types::lib::std::borrow","",39,[[],["path",3]]],[11,"as_ref","wasmer_types::lib::std::string","",196,[[],["osstr",3]]],[11,"drop","wasmer_types::lib::std::sync","",231,[[]]],[11,"drop","wasmer_types::lib::std::sync::mpsc","",205,[[]]],[11,"drop","wasmer_types::lib::std::sync","",236,[[]]],[11,"drop","","",234,[[]]],[11,"drop","","",235,[[]]],[11,"drop","wasmer_types::lib::std::sync::mpsc","",206,[[]]],[11,"drop","","",201,[[]]],[11,"into_iter","","",201,[[],["intoiter",3]]],[11,"clone","wasmer_types::lib::std::boxed","",42,[[],[["box",3],["cstr",3],["global",3]]]],[11,"clone","","",42,[[],[["osstr",3],["box",3],["global",3]]]],[11,"clone","wasmer_types::lib::std::sync::mpsc","",207,[[],["senderror",3]]],[11,"clone","wasmer_types::lib::std::sync","",229,[[],["waittimeoutresult",3]]],[11,"clone","wasmer_types::lib::std::sync::mpsc","",208,[[],["tryrecverror",4]]],[11,"clone","","",269,[[],["recverror",3]]],[11,"clone","","",209,[[],["recvtimeouterror",4]]],[11,"clone","","",210,[[],["trysenderror",4]]],[11,"clone","wasmer_types::lib::std::boxed","",42,[[],[["path",3],["global",3],["box",3]]]],[11,"clone","wasmer_types::lib::std::sync::mpsc","",206,[[],["syncsender",3]]],[11,"clone","","",205,[[],["sender",3]]],[11,"fill_buf","wasmer_types::lib::std::boxed","",42,[[],[["result",4],["error",3]]]],[11,"consume","","",42,[[]]],[11,"read_until","","",42,[[["vec",3]],[["result",4],["error",3]]]],[11,"read_line","","",42,[[["string",3]],[["result",4],["error",3]]]],[11,"to_socket_addrs","wasmer_types::lib::std::string","",196,[[],[["error",3],["intoiter",3],["result",4]]]],[11,"seek","wasmer_types::lib::std::boxed","",42,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["path",3]]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",269,[[["recverror",3]]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["osstr",3]]]],[11,"eq","","",39,[[["osstr",3]]]],[11,"eq","","",39,[[["path",3]]]],[11,"eq","","",39,[[["osstr",3]]]],[11,"eq","wasmer_types::lib::std::sync","",229,[[["waittimeoutresult",3]]]],[11,"ne","","",229,[[["waittimeoutresult",3]]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",209,[[["recvtimeouterror",4]]]],[11,"eq","","",207,[[["senderror",3]]]],[11,"ne","","",207,[[["senderror",3]]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["path",3]]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",208,[[["tryrecverror",4]]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["pathbuf",3]]]],[11,"eq","","",39,[[["path",3]]]],[11,"eq","","",39,[[["osstring",3]]]],[11,"eq","","",39,[[["pathbuf",3]]]],[11,"eq","","",39,[[["osstr",3]]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",210,[[["trysenderror",4]]]],[11,"ne","","",210,[[["trysenderror",4]]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["osstring",3]]]],[11,"write","wasmer_types::lib::std::boxed","",42,[[],[["result",4],["error",3]]]],[11,"write_vectored","","",42,[[],[["result",4],["error",3]]]],[11,"is_write_vectored","","",42,[[]]],[11,"flush","","",42,[[],[["error",3],["result",4]]]],[11,"write_all","","",42,[[],[["error",3],["result",4]]]],[11,"write_fmt","","",42,[[["arguments",3]],[["error",3],["result",4]]]],[11,"write","wasmer_types::lib::std::vec","",239,[[],[["result",4],["error",3]]]],[11,"write_vectored","","",239,[[],[["result",4],["error",3]]]],[11,"is_write_vectored","","",239,[[]]],[11,"write_all","","",239,[[],[["error",3],["result",4]]]],[11,"flush","","",239,[[],[["error",3],["result",4]]]],[11,"deref_mut","wasmer_types::lib::std::sync","",231,[[]]],[11,"deref_mut","","",236,[[]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",269,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",235,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",238,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",231,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",236,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",237,[[["formatter",3]],[["error",3],["result",4]]]],[11,"read","wasmer_types::lib::std::boxed","",42,[[],[["result",4],["error",3]]]],[11,"read_vectored","","",42,[[],[["result",4],["error",3]]]],[11,"is_read_vectored","","",42,[[]]],[11,"initializer","","",42,[[],["initializer",3]]],[11,"read_to_end","","",42,[[["vec",3]],[["result",4],["error",3]]]],[11,"read_to_string","","",42,[[["string",3]],[["result",4],["error",3]]]],[11,"read_exact","","",42,[[],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",234,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",228,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",233,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",238,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",269,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",237,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",231,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",232,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",236,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",235,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","Creates a `Condvar` which is ready to be waited on and…",228,[[],["condvar",3]]],[11,"default","wasmer_types::lib::std::boxed","",42,[[],[["osstr",3],["box",3],["global",3]]]],[11,"default","","",42,[[],[["box",3],["cstr",3],["global",3]]]],[11,"default","wasmer_types::lib::std::sync","Creates a new `RwLock<T>`, with the `Default` value for T.",234,[[],["rwlock",3]]],[11,"default","","Creates a `Mutex<T>`, with the `Default` value for T.",230,[[],["mutex",3]]],[11,"next","wasmer_types::lib::std::sync::mpsc","",204,[[],["option",4]]],[11,"next","","",202,[[],["option",4]]],[11,"next","","",203,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",101,[[],["option",4]]],[11,"size_hint","","",101,[[]]],[11,"try_fold","","",101,[[]]],[11,"fold","","",101,[[]]],[11,"nth","","",101,[[],["option",4]]],[11,"last","","",101,[[],["option",4]]],[11,"count","","",101,[[]]],[11,"__iterator_get_unchecked","","",101,[[]]],[11,"next","wasmer_types::lib::std::slice","",193,[[],["option",4]]],[11,"size_hint","","",193,[[]]],[11,"next","wasmer_types::lib::std::iter","",90,[[],["option",4]]],[11,"size_hint","","",90,[[]]],[11,"next","","",112,[[],["option",4]]],[11,"size_hint","","",112,[[]]],[11,"advance_by","","",112,[[],["result",4]]],[11,"nth","","",112,[[],["option",4]]],[11,"try_fold","","",112,[[]]],[11,"fold","","",112,[[]]],[11,"find","","",112,[[],["option",4]]],[11,"next","wasmer_types::lib::std::slice","",195,[[],["option",4]]],[11,"size_hint","","",195,[[]]],[11,"next","wasmer_types::lib::std::iter","",120,[[],["option",4]]],[11,"size_hint","","",120,[[]]],[11,"try_fold","","",120,[[]]],[11,"fold","","",120,[[]]],[11,"next","wasmer_types::lib::std::slice","",190,[[],["option",4]]],[11,"size_hint","","",190,[[]]],[11,"next","","",194,[[],["option",4]]],[11,"size_hint","","",194,[[]]],[11,"next","wasmer_types::lib::std::iter","",109,[[],["option",4]]],[11,"size_hint","","",109,[[]]],[11,"count","","",109,[[]]],[11,"try_fold","","",109,[[]]],[11,"fold","","",109,[[]]],[11,"next","","",87,[[],["option",4]]],[11,"next","","",107,[[],["option",4]]],[11,"size_hint","","",107,[[]]],[11,"try_fold","","",107,[[]]],[11,"next","wasmer_types::lib::std::slice","",181,[[],["option",4]]],[11,"size_hint","","",181,[[]]],[11,"count","","",181,[[]]],[11,"nth","","",181,[[],["option",4]]],[11,"last","","",181,[[],["option",4]]],[11,"next","","",184,[[],["option",4]]],[11,"size_hint","","",184,[[]]],[11,"count","","",184,[[]]],[11,"nth","","",184,[[],["option",4]]],[11,"last","","",184,[[],["option",4]]],[11,"for_each","","",184,[[]]],[11,"all","","",184,[[]]],[11,"any","","",184,[[]]],[11,"find","","",184,[[],["option",4]]],[11,"find_map","","",184,[[],["option",4]]],[11,"position","","",184,[[],["option",4]]],[11,"rposition","","",184,[[],["option",4]]],[11,"is_sorted_by","","",184,[[]]],[11,"next","wasmer_types::lib::std::ops","",158,[[],["option",4]]],[11,"size_hint","","",158,[[]]],[11,"nth","","",158,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",118,[[],["option",4]]],[11,"size_hint","","",118,[[]]],[11,"try_fold","","",118,[[]]],[11,"fold","","",118,[[]]],[11,"next","","Overflow BehaviorThe method does no guarding against…",108,[[],["option",4]]],[11,"size_hint","","",108,[[]]],[11,"nth","","",108,[[],["option",4]]],[11,"count","","",108,[[]]],[11,"try_fold","","",108,[[]]],[11,"fold","","",108,[[]]],[11,"__iterator_get_unchecked","","",108,[[]]],[11,"next","","",113,[[],["option",4]]],[11,"size_hint","","",113,[[]]],[11,"nth","","",113,[[],["option",4]]],[11,"__iterator_get_unchecked","","",113,[[]]],[11,"next","wasmer_types::lib::std::slice","",187,[[],["option",4]]],[11,"size_hint","","",187,[[]]],[11,"count","","",187,[[]]],[11,"nth","","",187,[[],["option",4]]],[11,"last","","",187,[[],["option",4]]],[11,"next","","",189,[[],["option",4]]],[11,"size_hint","","",189,[[]]],[11,"count","","",189,[[]]],[11,"nth","","",189,[[],["option",4]]],[11,"last","","",189,[[],["option",4]]],[11,"next","wasmer_types::lib::std::ops","",162,[[],["option",4]]],[11,"size_hint","","",162,[[]]],[11,"nth","","",162,[[],["option",4]]],[11,"try_fold","","",162,[[]]],[11,"fold","","",162,[[]]],[11,"last","","",162,[[],["option",4]]],[11,"min","","",162,[[],["option",4]]],[11,"max","","",162,[[],["option",4]]],[11,"next","wasmer_types::lib::std::slice","",177,[[],["option",4]]],[11,"size_hint","","",177,[[]]],[11,"count","","",177,[[]]],[11,"nth","","",177,[[],["option",4]]],[11,"last","","",177,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",100,[[],["option",4]]],[11,"size_hint","","",100,[[]]],[11,"try_fold","","",100,[[]]],[11,"fold","","",100,[[]]],[11,"__iterator_get_unchecked","","",100,[[]]],[11,"next","wasmer_types::lib::std::slice","",191,[[],["option",4]]],[11,"size_hint","","",191,[[]]],[11,"next","","",192,[[],["option",4]]],[11,"size_hint","","",192,[[]]],[11,"next","wasmer_types::lib::std::iter","",106,[[],["option",4]]],[11,"count","","",106,[[]]],[11,"try_fold","","",106,[[]]],[11,"fold","","",106,[[]]],[11,"advance_by","","",106,[[],["result",4]]],[11,"nth","","",106,[[],["option",4]]],[11,"find","","",106,[[],["option",4]]],[11,"last","","",106,[[],["option",4]]],[11,"size_hint","","",106,[[]]],[11,"next","wasmer_types::lib::std::slice","",186,[[],["option",4]]],[11,"size_hint","","",186,[[]]],[11,"count","","",186,[[]]],[11,"nth","","",186,[[],["option",4]]],[11,"last","","",186,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",86,[[],["option",4]]],[11,"size_hint","","",86,[[]]],[11,"next","","",91,[[],["option",4]]],[11,"size_hint","","",91,[[]]],[11,"next","wasmer_types::lib::std::slice","",185,[[],["option",4]]],[11,"size_hint","","",185,[[]]],[11,"count","","",185,[[]]],[11,"nth","","",185,[[],["option",4]]],[11,"last","","",185,[[],["option",4]]],[11,"for_each","","",185,[[]]],[11,"all","","",185,[[]]],[11,"any","","",185,[[]]],[11,"find","","",185,[[],["option",4]]],[11,"find_map","","",185,[[],["option",4]]],[11,"position","","",185,[[],["option",4]]],[11,"rposition","","",185,[[],["option",4]]],[11,"next","","",175,[[],["option",4]]],[11,"size_hint","","",175,[[]]],[11,"count","","",175,[[]]],[11,"nth","","",175,[[],["option",4]]],[11,"last","","",175,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",114,[[],["option",4]]],[11,"size_hint","","",114,[[]]],[11,"try_fold","","",114,[[]]],[11,"fold","","",114,[[]]],[11,"next","wasmer_types::lib::std::slice","",180,[[],["option",4]]],[11,"size_hint","","",180,[[]]],[11,"count","","",180,[[]]],[11,"nth","","",180,[[],["option",4]]],[11,"last","","",180,[[],["option",4]]],[11,"next","wasmer_types::lib::std::ops","",157,[[],["option",4]]],[11,"size_hint","","",157,[[]]],[11,"nth","","",157,[[],["option",4]]],[11,"last","","",157,[[],["option",4]]],[11,"min","","",157,[[],["option",4]]],[11,"max","","",157,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",102,[[],["option",4]]],[11,"size_hint","","",102,[[]]],[11,"try_fold","","",102,[[]]],[11,"fold","","",102,[[]]],[11,"next","","",92,[[],["option",4]]],[11,"size_hint","","",92,[[]]],[11,"next","wasmer_types::lib::std::slice","",178,[[],["option",4]]],[11,"size_hint","","",178,[[]]],[11,"count","","",178,[[]]],[11,"nth","","",178,[[],["option",4]]],[11,"last","","",178,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",116,[[],["option",4]]],[11,"size_hint","","",116,[[]]],[11,"try_fold","","",116,[[]]],[11,"fold","","",116,[[]]],[11,"next","","",122,[[],["option",4]]],[11,"size_hint","","",122,[[]]],[11,"try_fold","","",122,[[]]],[11,"fold","","",122,[[]]],[11,"next","","",110,[[],["option",4]]],[11,"size_hint","","",110,[[]]],[11,"try_fold","","",110,[[]]],[11,"fold","","",110,[[]]],[11,"next","","",111,[[],["option",4]]],[11,"size_hint","","",111,[[]]],[11,"try_fold","","",111,[[]]],[11,"fold","","",111,[[]]],[11,"__iterator_get_unchecked","","",111,[[]]],[11,"next","wasmer_types::lib::std::slice","",188,[[],["option",4]]],[11,"size_hint","","",188,[[]]],[11,"count","","",188,[[]]],[11,"nth","","",188,[[],["option",4]]],[11,"last","","",188,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",103,[[],["option",4]]],[11,"size_hint","","",103,[[]]],[11,"try_fold","","",103,[[]]],[11,"fold","","",103,[[]]],[11,"next","wasmer_types::lib::std::slice","",179,[[],["option",4]]],[11,"size_hint","","",179,[[]]],[11,"count","","",179,[[]]],[11,"nth","","",179,[[],["option",4]]],[11,"last","","",179,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",105,[[],["option",4]]],[11,"size_hint","","",105,[[]]],[11,"nth","","",105,[[],["option",4]]],[11,"try_fold","","",105,[[]]],[11,"fold","","",105,[[]]],[11,"next","","",121,[[],["option",4]]],[11,"nth","","",121,[[],["option",4]]],[11,"last","","",121,[[],["option",4]]],[11,"count","","",121,[[]]],[11,"size_hint","","",121,[[]]],[11,"try_fold","","",121,[[]]],[11,"fold","","",121,[[]]],[11,"find","","",121,[[],["option",4]]],[11,"__iterator_get_unchecked","","",121,[[]]],[11,"next","wasmer_types::lib::std::slice","",173,[[],["option",4]]],[11,"size_hint","","",173,[[]]],[11,"count","","",173,[[]]],[11,"nth","","",173,[[],["option",4]]],[11,"last","","",173,[[],["option",4]]],[11,"__iterator_get_unchecked","","",173,[[]]],[11,"next","","",183,[[],["option",4]]],[11,"size_hint","","",183,[[]]],[11,"next","wasmer_types::lib::std::iter","",117,[[],["option",4]]],[11,"nth","","",117,[[],["option",4]]],[11,"count","","",117,[[]]],[11,"last","","",117,[[],["option",4]]],[11,"size_hint","","",117,[[]]],[11,"try_fold","","",117,[[]]],[11,"fold","","",117,[[]]],[11,"next","wasmer_types::lib::std::slice","",182,[[],["option",4]]],[11,"size_hint","","",182,[[]]],[11,"next","wasmer_types::lib::std::iter","",119,[[],["option",4]]],[11,"nth","","",119,[[],["option",4]]],[11,"size_hint","","",119,[[]]],[11,"try_fold","","",119,[[]]],[11,"fold","","",119,[[]]],[11,"next","","",89,[[],["option",4]]],[11,"size_hint","","",89,[[]]],[11,"next","","",115,[[],["option",4]]],[11,"count","","",115,[[]]],[11,"nth","","",115,[[],["option",4]]],[11,"last","","",115,[[],["option",4]]],[11,"size_hint","","",115,[[]]],[11,"try_fold","","",115,[[]]],[11,"fold","","",115,[[]]],[11,"next","wasmer_types::lib::std::slice","",174,[[],["option",4]]],[11,"size_hint","","",174,[[]]],[11,"count","","",174,[[]]],[11,"nth","","",174,[[],["option",4]]],[11,"last","","",174,[[],["option",4]]],[11,"__iterator_get_unchecked","","",174,[[]]],[11,"next","wasmer_types::lib::std::iter","",88,[[],["option",4]]],[11,"size_hint","","",88,[[]]],[11,"get","wasmer_types::lib::std::ops","",162,[[],["option",4]]],[11,"get_mut","","",162,[[],["option",4]]],[11,"get_unchecked","","",162,[[]]],[11,"get_unchecked_mut","","",162,[[]]],[11,"index","","",162,[[]]],[11,"index_mut","","",162,[[]]],[11,"get","","",158,[[],["option",4]]],[11,"get_mut","","",158,[[],["option",4]]],[11,"get_unchecked","","",158,[[]]],[11,"get_unchecked_mut","","",158,[[]]],[11,"index","","",158,[[]]],[11,"index_mut","","",158,[[]]],[11,"get","","",162,[[],["option",4]]],[11,"get_mut","","",162,[[],["option",4]]],[11,"get_unchecked","","",162,[[]]],[11,"get_unchecked_mut","","",162,[[]]],[11,"index","","",162,[[]]],[11,"index_mut","","",162,[[]]],[11,"get","","",157,[[],["option",4]]],[11,"get_mut","","",157,[[],["option",4]]],[11,"get_unchecked","","",157,[[]]],[11,"get_unchecked_mut","","",157,[[]]],[11,"index","","",157,[[]]],[11,"index_mut","","",157,[[]]],[11,"get","","",159,[[],["option",4]]],[11,"get_mut","","",159,[[],["option",4]]],[11,"get_unchecked","","",159,[[]]],[11,"get_unchecked_mut","","",159,[[]]],[11,"index","","",159,[[]]],[11,"index_mut","","",159,[[]]],[11,"get","","",163,[[],["option",4]]],[11,"get_mut","","",163,[[],["option",4]]],[11,"get_unchecked","","",163,[[]]],[11,"get_unchecked_mut","","",163,[[]]],[11,"index","","",163,[[]]],[11,"index_mut","","",163,[[]]],[11,"get","","",268,[[],["option",4]]],[11,"get_mut","","",268,[[],["option",4]]],[11,"get_unchecked","","",268,[[]]],[11,"get_unchecked_mut","","",268,[[]]],[11,"index","","",268,[[]]],[11,"index_mut","","",268,[[]]],[11,"get","","",157,[[],["option",4]]],[11,"get_mut","","",157,[[],["option",4]]],[11,"get_unchecked","","",157,[[]]],[11,"get_unchecked_mut","","",157,[[]]],[11,"index","","",157,[[]]],[11,"index_mut","","",157,[[]]],[11,"get","","",159,[[],["option",4]]],[11,"get_mut","","",159,[[],["option",4]]],[11,"get_unchecked","","",159,[[]]],[11,"get_unchecked_mut","","",159,[[]]],[11,"index","","",159,[[]]],[11,"index_mut","","",159,[[]]],[11,"get","","",268,[[],["option",4]]],[11,"get_mut","","",268,[[],["option",4]]],[11,"get_unchecked","","",268,[[]]],[11,"get_unchecked_mut","","",268,[[]]],[11,"index","","",268,[[]]],[11,"index_mut","","",268,[[]]],[11,"get","","",163,[[],["option",4]]],[11,"get_mut","","",163,[[],["option",4]]],[11,"get_unchecked","","",163,[[]]],[11,"get_unchecked_mut","","",163,[[]]],[11,"index","","",163,[[]]],[11,"index_mut","","",163,[[]]],[11,"get","","",158,[[],["option",4]]],[11,"get_mut","","",158,[[],["option",4]]],[11,"get_unchecked","","",158,[[]]],[11,"get_unchecked_mut","","",158,[[]]],[11,"index","","",158,[[]]],[11,"index_mut","","",158,[[]]],[11,"eq","wasmer_types::lib::std::cmp","",52,[[["reverse",3]]]],[11,"ne","","",52,[[["reverse",3]]]],[11,"eq","wasmer_types::lib::std::marker","",266,[[["phantomdata",3]]]],[11,"eq","wasmer_types::lib::std::cmp","",51,[[["ordering",4]]]],[11,"eq","wasmer_types::lib::std::convert","",264,[[["infallible",4]]]],[11,"eq","wasmer_types::lib::std::ops","",167,[[["controlflow",4]]]],[11,"ne","","",167,[[["controlflow",4]]]],[11,"eq","wasmer_types::lib::std::any","",37,[[["typeid",3]]]],[11,"ne","","",37,[[["typeid",3]]]],[11,"eq","wasmer_types::lib::std::ptr","",168,[[["nonnull",3]]]],[11,"eq","wasmer_types::lib::std::hash","",82,[[["buildhasherdefault",3]]]],[11,"eq","wasmer_types::lib::std::ops","",159,[[["rangeto",3]]]],[11,"ne","","",159,[[["rangeto",3]]]],[11,"eq","wasmer_types::lib::std::mem","",125,[[["manuallydrop",3]]]],[11,"ne","","",125,[[["manuallydrop",3]]]],[11,"eq","wasmer_types::lib::std::ops","",268,[[["rangefull",3]]]],[11,"eq","","",163,[[["rangetoinclusive",3]]]],[11,"ne","","",163,[[["rangetoinclusive",3]]]],[11,"eq","wasmer_types::lib::std::marker","",267,[[["phantompinned",3]]]],[11,"eq","wasmer_types::lib::std::mem","",124,[[["discriminant",3]]]],[11,"eq","wasmer_types::lib::std::ops","",158,[[["rangefrom",3]]]],[11,"ne","","",158,[[["rangefrom",3]]]],[11,"eq","","",162,[[["rangeinclusive",3]]]],[11,"ne","","",162,[[["rangeinclusive",3]]]],[11,"eq","","",160,[[["bound",4]]]],[11,"ne","","",160,[[["bound",4]]]],[11,"eq","wasmer_types::lib::std::cell","PanicsPanics if the value in either `RefCell` is currently…",44,[[["refcell",3]]]],[11,"eq","wasmer_types::lib::std::ops","",157,[[["range",3]]]],[11,"ne","","",157,[[["range",3]]]],[11,"eq","wasmer_types::lib::std::sync::atomic","",215,[[["ordering",4]]]],[11,"eq","wasmer_types::lib::std::cell","",43,[[["cell",3]]]],[11,"eq","wasmer_types::lib::std::ops","",166,[[["generatorstate",4]]]],[11,"ne","","",166,[[["generatorstate",4]]]],[11,"eq","wasmer_types::lib::std::fmt","",265,[[["error",3]]]],[11,"hash","wasmer_types::lib::std::ops","",162,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",160,[[]]],[11,"hash","wasmer_types::lib::std::convert","",264,[[]]],[11,"hash","wasmer_types::lib::std::any","",37,[[]]],[11,"hash","wasmer_types::lib::std::ops","",157,[[]]],[11,"hash","wasmer_types::lib::std::mem","",125,[[]]],[11,"hash","wasmer_types::lib::std::cmp","",52,[[]]],[11,"hash","wasmer_types::lib::std::sync::atomic","",215,[[]]],[11,"hash","wasmer_types::lib::std::ops","",268,[[]]],[11,"hash","wasmer_types::lib::std::marker","",266,[[]]],[11,"hash","wasmer_types::lib::std::mem","",124,[[]]],[11,"hash","wasmer_types::lib::std::marker","",267,[[]]],[11,"hash","wasmer_types::lib::std::ops","",158,[[]]],[11,"hash","","",163,[[]]],[11,"hash","wasmer_types::lib::std::ptr","",168,[[]]],[11,"hash","wasmer_types::lib::std::ops","",159,[[]]],[11,"hash","wasmer_types::lib::std::fmt","",265,[[]]],[11,"hash","wasmer_types::lib::std::cmp","",51,[[]]],[11,"default","wasmer_types::lib::std::cell","Creates an `UnsafeCell`, with the `Default` value for T.",49,[[],["unsafecell",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",224,[[],["atomicisize",3]]],[11,"default","","",218,[[],["atomici16",3]]],[11,"default","wasmer_types::lib::std::hash","",82,[[],["buildhasherdefault",3]]],[11,"default","wasmer_types::lib::std::cmp","",52,[[],["reverse",3]]],[11,"default","wasmer_types::lib::std::fmt","",265,[[],["error",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",221,[[],["atomicu32",3]]],[11,"default","","Creates a null `AtomicPtr<T>`.",214,[[],["atomicptr",3]]],[11,"default","wasmer_types::lib::std::cell","Creates a `Cell<T>`, with the `Default` value for T.",43,[[],["cell",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",217,[[],["atomicu8",3]]],[11,"default","wasmer_types::lib::std::mem","",125,[[],["manuallydrop",3]]],[11,"default","wasmer_types::lib::std::hash","",83,[[],["siphasher",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",222,[[],["atomici64",3]]],[11,"default","","Creates an `AtomicBool` initialized to `false`.",213,[[],["atomicbool",3]]],[11,"default","wasmer_types::lib::std::ops","",268,[[],["rangefull",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",225,[[],["atomicusize",3]]],[11,"default","wasmer_types::lib::std::marker","",266,[[],["phantomdata",3]]],[11,"default","wasmer_types::lib::std::ops","",157,[[],["range",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",219,[[],["atomicu16",3]]],[11,"default","wasmer_types::lib::std::cell","Creates a `RefCell<T>`, with the `Default` value for T.",44,[[],["refcell",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",220,[[],["atomici32",3]]],[11,"default","","",216,[[],["atomici8",3]]],[11,"default","wasmer_types::lib::std::iter","",86,[[],["empty",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",223,[[],["atomicu64",3]]],[11,"as_ref","wasmer_types::lib::std::slice","",184,[[]]],[11,"is_empty","","",173,[[]]],[11,"len","wasmer_types::lib::std::iter","",108,[[]]],[11,"is_empty","","",108,[[]]],[11,"len","","",89,[[]]],[11,"is_empty","wasmer_types::lib::std::slice","",174,[[]]],[11,"is_empty","","",188,[[]]],[11,"len","wasmer_types::lib::std::iter","",122,[[]]],[11,"is_empty","","",122,[[]]],[11,"len","","",111,[[]]],[11,"is_empty","","",111,[[]]],[11,"len","","",88,[[]]],[11,"is_empty","wasmer_types::lib::std::slice","",179,[[]]],[11,"len","wasmer_types::lib::std::iter","",121,[[]]],[11,"is_empty","","",121,[[]]],[11,"len","","",86,[[]]],[11,"is_empty","wasmer_types::lib::std::slice","",180,[[]]],[11,"len","wasmer_types::lib::std::iter","",112,[[]]],[11,"is_empty","","",112,[[]]],[11,"len","wasmer_types::lib::std::slice","",185,[[]]],[11,"is_empty","","",185,[[]]],[11,"len","wasmer_types::lib::std::iter","",101,[[]]],[11,"is_empty","","",101,[[]]],[11,"len","","",100,[[]]],[11,"is_empty","","",100,[[]]],[11,"is_empty","wasmer_types::lib::std::slice","",187,[[]]],[11,"len","","",184,[[]]],[11,"is_empty","","",184,[[]]],[11,"is_empty","","",175,[[]]],[11,"cmp","wasmer_types::lib::std::any","",37,[[["typeid",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::marker","",266,[[["phantomdata",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::cmp","",51,[[["ordering",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::ptr","",168,[[["nonnull",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::cell","",43,[[["cell",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::cmp","",52,[[["reverse",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::marker","",267,[[["phantompinned",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::fmt","",265,[[["error",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::cell","PanicsPanics if the value in either `RefCell` is currently…",44,[[["refcell",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::convert","",264,[[["infallible",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::ops","",166,[[["generatorstate",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::mem","",125,[[["manuallydrop",3]],["ordering",4]]],[11,"as_inner","wasmer_types::lib::std::iter","",108,[[]]],[11,"as_inner","","",122,[[]]],[11,"as_inner","","",110,[[]]],[11,"as_inner","","",115,[[]]],[11,"as_inner","","",103,[[]]],[11,"as_inner","","",109,[[]]],[11,"as_inner","","",117,[[]]],[11,"as_inner","","",120,[[]]],[11,"as_inner","","",118,[[]]],[11,"as_inner","","",111,[[]]],[11,"as_inner","","",119,[[]]],[11,"as_inner","","",121,[[]]],[11,"as_inner","","",116,[[]]],[11,"as_inner","","",113,[[]]],[11,"write_str","wasmer_types::lib::std::fmt","",72,[[],[["error",3],["result",4]]]],[11,"write_char","","",72,[[],[["error",3],["result",4]]]],[11,"write_fmt","","",72,[[["arguments",3]],[["error",3],["result",4]]]],[11,"deref_mut","wasmer_types::lib::std::cell","",48,[[]]],[11,"deref_mut","wasmer_types::lib::std::mem","",125,[[]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an `u64` into an `AtomicU64`.",223,[[],["atomicu64",3]]],[11,"from","","Converts an `i16` into an `AtomicI16`.",218,[[],["atomici16",3]]],[11,"from","wasmer_types::lib::std::ptr","",168,[[["unique",3]],["nonnull",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an `isize` into an `AtomicIsize`.",224,[[],["atomicisize",3]]],[11,"from","wasmer_types::lib::std::convert","",264,[[],["infallible",4]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an `u32` into an `AtomicU32`.",221,[[],["atomicu32",3]]],[11,"from","","Converts an `i64` into an `AtomicI64`.",222,[[],["atomici64",3]]],[11,"from","","Converts an `u8` into an `AtomicU8`.",217,[[],["atomicu8",3]]],[11,"from","wasmer_types::lib::std::cell","",44,[[],["refcell",3]]],[11,"from","","",49,[[],["unsafecell",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an `i8` into an `AtomicI8`.",216,[[],["atomici8",3]]],[11,"from","","",214,[[],["atomicptr",3]]],[11,"from","","Converts an `u16` into an `AtomicU16`.",219,[[],["atomicu16",3]]],[11,"from","wasmer_types::lib::std::ptr","",168,[[],["nonnull",3]]],[11,"from","","",168,[[],["nonnull",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an `usize` into an `AtomicUsize`.",225,[[],["atomicusize",3]]],[11,"from","","Converts a `bool` into an `AtomicBool`.",213,[[],["atomicbool",3]]],[11,"from","wasmer_types::lib::std::cell","",43,[[],["cell",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an `i32` into an `AtomicI32`.",220,[[],["atomici32",3]]],[11,"fmt","wasmer_types::lib::std::ptr","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","wasmer_types::lib::std::mem","",125,[[["manuallydrop",3]],[["ordering",4],["option",4]]]],[11,"lt","","",125,[[["manuallydrop",3]]]],[11,"le","","",125,[[["manuallydrop",3]]]],[11,"gt","","",125,[[["manuallydrop",3]]]],[11,"ge","","",125,[[["manuallydrop",3]]]],[11,"partial_cmp","wasmer_types::lib::std::cell","",43,[[["cell",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["cell",3]]]],[11,"le","","",43,[[["cell",3]]]],[11,"gt","","",43,[[["cell",3]]]],[11,"ge","","",43,[[["cell",3]]]],[11,"partial_cmp","wasmer_types::lib::std::fmt","",265,[[["error",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::convert","",264,[[["infallible",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::ptr","",168,[[["nonnull",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::cmp","",52,[[["reverse",3]],[["ordering",4],["option",4]]]],[11,"lt","","",52,[[["reverse",3]]]],[11,"le","","",52,[[["reverse",3]]]],[11,"gt","","",52,[[["reverse",3]]]],[11,"ge","","",52,[[["reverse",3]]]],[11,"partial_cmp","wasmer_types::lib::std::marker","",267,[[["phantompinned",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::cell","PanicsPanics if the value in either `RefCell` is currently…",44,[[["refcell",3]],[["ordering",4],["option",4]]]],[11,"lt","","PanicsPanics if the value in either `RefCell` is currently…",44,[[["refcell",3]]]],[11,"le","","PanicsPanics if the value in either `RefCell` is currently…",44,[[["refcell",3]]]],[11,"gt","","PanicsPanics if the value in either `RefCell` is currently…",44,[[["refcell",3]]]],[11,"ge","","PanicsPanics if the value in either `RefCell` is currently…",44,[[["refcell",3]]]],[11,"partial_cmp","wasmer_types::lib::std::ops","",166,[[["generatorstate",4]],[["ordering",4],["option",4]]]],[11,"lt","","",166,[[["generatorstate",4]]]],[11,"le","","",166,[[["generatorstate",4]]]],[11,"gt","","",166,[[["generatorstate",4]]]],[11,"ge","","",166,[[["generatorstate",4]]]],[11,"partial_cmp","wasmer_types::lib::std::marker","",266,[[["phantomdata",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::cmp","",51,[[["ordering",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::any","",37,[[["typeid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["typeid",3]]]],[11,"le","","",37,[[["typeid",3]]]],[11,"gt","","",37,[[["typeid",3]]]],[11,"ge","","",37,[[["typeid",3]]]],[11,"fmt","wasmer_types::lib::std::convert","",264,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",265,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next_back","wasmer_types::lib::std::iter","",89,[[],["option",4]]],[11,"next_back","","",108,[[],["option",4]]],[11,"nth_back","","",108,[[],["option",4]]],[11,"try_rfold","","",108,[[]]],[11,"rfold","","",108,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",181,[[],["option",4]]],[11,"nth_back","","",181,[[],["option",4]]],[11,"next_back","","",174,[[],["option",4]]],[11,"nth_back","","",174,[[],["option",4]]],[11,"next_back","","",182,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",102,[[],["option",4]]],[11,"try_rfold","","",102,[[]]],[11,"rfold","","",102,[[]]],[11,"next_back","","",101,[[],["option",4]]],[11,"try_rfold","","",101,[[]]],[11,"rfold","","",101,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",184,[[],["option",4]]],[11,"nth_back","","",184,[[],["option",4]]],[11,"next_back","","",178,[[],["option",4]]],[11,"nth_back","","",178,[[],["option",4]]],[11,"next_back","","",185,[[],["option",4]]],[11,"nth_back","","",185,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",109,[[],["option",4]]],[11,"try_rfold","","",109,[[]]],[11,"rfold","","",109,[[]]],[11,"next_back","","",88,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::slice","",187,[[],["option",4]]],[11,"nth_back","","",187,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",105,[[],["option",4]]],[11,"nth_back","","",105,[[],["option",4]]],[11,"try_rfold","","",105,[[]]],[11,"rfold","","",105,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",191,[[],["option",4]]],[11,"next_back","","",177,[[],["option",4]]],[11,"nth_back","","",177,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",106,[[],["option",4]]],[11,"advance_back_by","","",106,[[],["result",4]]],[11,"nth_back","","",106,[[],["option",4]]],[11,"rfind","","",106,[[],["option",4]]],[11,"try_rfold","","",106,[[]]],[11,"rfold","","",106,[[]]],[11,"next_back","","",110,[[],["option",4]]],[11,"try_rfold","","",110,[[]]],[11,"rfold","","",110,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",173,[[],["option",4]]],[11,"nth_back","","",173,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",121,[[],["option",4]]],[11,"nth_back","","",121,[[],["option",4]]],[11,"try_rfold","","",121,[[]]],[11,"rfold","","",121,[[]]],[11,"rfind","","",121,[[],["option",4]]],[11,"next_back","","",119,[[],["option",4]]],[11,"nth_back","","",119,[[],["option",4]]],[11,"try_rfold","","",119,[[]]],[11,"rfold","","",119,[[]]],[11,"next_back","","",122,[[],["option",4]]],[11,"try_rfold","","",122,[[]]],[11,"rfold","","",122,[[]]],[11,"next_back","wasmer_types::lib::std::ops","",162,[[],["option",4]]],[11,"nth_back","","",162,[[],["option",4]]],[11,"try_rfold","","",162,[[]]],[11,"rfold","","",162,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",175,[[],["option",4]]],[11,"nth_back","","",175,[[],["option",4]]],[11,"next_back","","",189,[[],["option",4]]],[11,"nth_back","","",189,[[],["option",4]]],[11,"next_back","","",180,[[],["option",4]]],[11,"nth_back","","",180,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",113,[[],["option",4]]],[11,"next_back","","",112,[[],["option",4]]],[11,"advance_back_by","","",112,[[],["result",4]]],[11,"nth_back","","",112,[[],["option",4]]],[11,"try_rfold","","",112,[[]]],[11,"rfold","","",112,[[]]],[11,"rfind","","",112,[[],["option",4]]],[11,"next_back","","",90,[[],["option",4]]],[11,"next_back","","",111,[[],["option",4]]],[11,"try_rfold","","",111,[[]]],[11,"rfold","","",111,[[]]],[11,"next_back","","",115,[[],["option",4]]],[11,"try_rfold","","",115,[[]]],[11,"rfold","","",115,[[]]],[11,"next_back","","",114,[[],["option",4]]],[11,"try_rfold","","",114,[[]]],[11,"rfold","","",114,[[]]],[11,"next_back","","",86,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::slice","",186,[[],["option",4]]],[11,"nth_back","","",186,[[],["option",4]]],[11,"next_back","","",190,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",117,[[],["option",4]]],[11,"nth_back","","",117,[[],["option",4]]],[11,"try_rfold","","",117,[[]]],[11,"rfold","","",117,[[]]],[11,"next_back","","",100,[[],["option",4]]],[11,"try_rfold","","",100,[[]]],[11,"rfold","","",100,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",179,[[],["option",4]]],[11,"nth_back","","",179,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::ops","",157,[[],["option",4]]],[11,"nth_back","","",157,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::slice","",183,[[],["option",4]]],[11,"next_back","","",188,[[],["option",4]]],[11,"nth_back","","",188,[[],["option",4]]],[11,"fmt","wasmer_types::lib::std::iter","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::hash","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",221,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::mem","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ptr","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",217,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::convert","",264,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cmp","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",214,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",219,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",215,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",216,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::hash","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::marker","",266,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",222,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",265,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",213,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",220,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::mem","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cmp","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::marker","",267,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",268,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::mem","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"start_bound","wasmer_types::lib::std::ops","",163,[[],["bound",4]]],[11,"end_bound","","",163,[[],["bound",4]]],[11,"start_bound","","",162,[[],["bound",4]]],[11,"end_bound","","",162,[[],["bound",4]]],[11,"start_bound","","",159,[[],["bound",4]]],[11,"end_bound","","",159,[[],["bound",4]]],[11,"start_bound","","",163,[[],["bound",4]]],[11,"end_bound","","",163,[[],["bound",4]]],[11,"start_bound","","",158,[[],["bound",4]]],[11,"end_bound","","",158,[[],["bound",4]]],[11,"start_bound","","",157,[[],["bound",4]]],[11,"end_bound","","",157,[[],["bound",4]]],[11,"start_bound","","",159,[[],["bound",4]]],[11,"end_bound","","",159,[[],["bound",4]]],[11,"start_bound","","",157,[[],["bound",4]]],[11,"end_bound","","",157,[[],["bound",4]]],[11,"start_bound","","",162,[[],["bound",4]]],[11,"end_bound","","",162,[[],["bound",4]]],[11,"start_bound","","",268,[[],["bound",4]]],[11,"end_bound","","",268,[[],["bound",4]]],[11,"start_bound","","",158,[[],["bound",4]]],[11,"end_bound","","",158,[[],["bound",4]]],[11,"into_result","","",167,[[],["result",4]]],[11,"from_error","","",167,[[],["controlflow",4]]],[11,"from_ok","","",167,[[],["controlflow",4]]],[11,"clone","wasmer_types::lib::std::cmp","",52,[[],["reverse",3]]],[11,"clone","wasmer_types::lib::std::cell","",43,[[],["cell",3]]],[11,"clone","wasmer_types::lib::std::fmt","",265,[[],["error",3]]],[11,"clone","wasmer_types::lib::std::iter","",121,[[],["fuse",3]]],[11,"clone","wasmer_types::lib::std::slice","",178,[[],["windows",3]]],[11,"clone","wasmer_types::lib::std::iter","",119,[[],["take",3]]],[11,"clone","","",92,[[],["successors",3]]],[11,"clone","","",113,[[],["zip",3]]],[11,"clone","","",117,[[],["skip",3]]],[11,"clone","wasmer_types::lib::std::hash","",82,[[],["buildhasherdefault",3]]],[11,"clone","wasmer_types::lib::std::iter","",88,[[],["once",3]]],[11,"clone","","",90,[[],["repeat",3]]],[11,"clone","","",114,[[],["flatmap",3]]],[11,"clone","","",118,[[],["skipwhile",3]]],[11,"clone","wasmer_types::lib::std::slice","",177,[[],["chunks",3]]],[11,"clone","wasmer_types::lib::std::convert","",264,[[],["infallible",4]]],[11,"clone","wasmer_types::lib::std::hash","",83,[[],["siphasher",3]]],[11,"clone","wasmer_types::lib::std::iter","",115,[[],["peekable",3]]],[11,"clone","wasmer_types::lib::std::ops","",157,[[],["range",3]]],[11,"clone","wasmer_types::lib::std::iter","",105,[[],["stepby",3]]],[11,"clone","wasmer_types::lib::std::slice","",179,[[],["chunksexact",3]]],[11,"clone","wasmer_types::lib::std::ops","",159,[[],["rangeto",3]]],[11,"clone","wasmer_types::lib::std::sync::atomic","",215,[[],["ordering",4]]],[11,"clone","wasmer_types::lib::std::iter","",107,[[],["cycle",3]]],[11,"clone","wasmer_types::lib::std::any","",37,[[],["typeid",3]]],[11,"clone","wasmer_types::lib::std::iter","",106,[[],["chain",3]]],[11,"clone","wasmer_types::lib::std::cell","PanicsPanics if the value is currently mutably borrowed.",44,[[],["refcell",3]]],[11,"clone","wasmer_types::lib::std::iter","",89,[[],["oncewith",3]]],[11,"clone","","",122,[[],["inspect",3]]],[11,"clone","wasmer_types::lib::std::ptr","",168,[[],["nonnull",3]]],[11,"clone","wasmer_types::lib::std::iter","",91,[[],["repeatwith",3]]],[11,"clone","wasmer_types::lib::std::slice","",182,[[],["split",3]]],[11,"clone","wasmer_types::lib::std::iter","",108,[[],["enumerate",3]]],[11,"clone","","",112,[[],["rev",3]]],[11,"clone","","",103,[[],["mapwhile",3]]],[11,"clone","","",102,[[],["flatten",3]]],[11,"clone","wasmer_types::lib::std::ops","",166,[[],["generatorstate",4]]],[11,"clone","","",163,[[],["rangetoinclusive",3]]],[11,"clone","wasmer_types::lib::std::iter","",101,[[],["copied",3]]],[11,"clone","wasmer_types::lib::std::slice","",175,[[],["arraywindows",3]]],[11,"clone","wasmer_types::lib::std::marker","",267,[[],["phantompinned",3]]],[11,"clone","wasmer_types::lib::std::fmt","",62,[[],["arguments",3]]],[11,"clone","wasmer_types::lib::std::slice","",173,[[],["arraychunks",3]]],[11,"clone","wasmer_types::lib::std::mem","",126,[[],["maybeuninit",19]]],[11,"clone","","",125,[[],["manuallydrop",3]]],[11,"clone","wasmer_types::lib::std::iter","",87,[[],["fromfn",3]]],[11,"clone","wasmer_types::lib::std::slice","",186,[[],["rchunks",3]]],[11,"clone","wasmer_types::lib::std::iter","",86,[[],["empty",3]]],[11,"clone","wasmer_types::lib::std::slice","",187,[[],["rchunksexact",3]]],[11,"clone","wasmer_types::lib::std::iter","",111,[[],["map",3]]],[11,"clone","","",120,[[],["takewhile",3]]],[11,"clone","wasmer_types::lib::std::marker","",266,[[],["phantomdata",3]]],[11,"clone","wasmer_types::lib::std::iter","",110,[[],["filtermap",3]]],[11,"clone","wasmer_types::lib::std::slice","",190,[[],["rsplit",3]]],[11,"clone","wasmer_types::lib::std::ops","",160,[[],["bound",4]]],[11,"clone","","",268,[[],["rangefull",3]]],[11,"clone","wasmer_types::lib::std::mem","",124,[[],["discriminant",3]]],[11,"clone","wasmer_types::lib::std::ops","",158,[[],["rangefrom",3]]],[11,"clone","wasmer_types::lib::std::iter","",100,[[],["cloned",3]]],[11,"clone","wasmer_types::lib::std::cmp","",51,[[],["ordering",4]]],[11,"clone","wasmer_types::lib::std::iter","",116,[[],["scan",3]]],[11,"clone","","",109,[[],["filter",3]]],[11,"clone","wasmer_types::lib::std::ops","",162,[[],["rangeinclusive",3]]],[11,"clone","wasmer_types::lib::std::slice","",184,[[],["iter",3]]],[11,"clone","wasmer_types::lib::std::ops","",167,[[],["controlflow",4]]],[11,"deref","wasmer_types::lib::std::cell","",47,[[]]],[11,"deref","wasmer_types::lib::std::mem","",125,[[]]],[11,"deref","wasmer_types::lib::std::cell","",48,[[]]],[11,"write","wasmer_types::lib::std::hash","",83,[[]]],[11,"finish","","",83,[[]]],[11,"build_hasher","","",82,[[]]],[11,"index_mut","wasmer_types::lib::std::string","",196,[[["range",3]]]],[11,"index_mut","","",196,[[["rangefull",3]]]],[11,"index_mut","wasmer_types::lib::std::vec","",239,[[]]],[11,"index_mut","wasmer_types::lib::std::string","",196,[[["rangefrom",3]]]],[11,"index_mut","","",196,[[["rangeinclusive",3]]]],[11,"index_mut","","",196,[[["rangetoinclusive",3]]]],[11,"index_mut","","",196,[[["rangeto",3]]]],[11,"next","wasmer_types::lib::std::vec","",242,[[],["option",4]]],[11,"size_hint","","",242,[[]]],[11,"next","","",240,[[],["option",4]]],[11,"size_hint","","",240,[[]]],[11,"count","","",240,[[]]],[11,"__iterator_get_unchecked","","",240,[[]]],[11,"next","","",241,[[],["option",4]]],[11,"size_hint","","",241,[[]]],[11,"next","","",243,[[],["option",4]]],[11,"size_hint","","",243,[[]]],[11,"next","wasmer_types::lib::std::string","",200,[[],["option",4]]],[11,"size_hint","","",200,[[]]],[11,"last","","",200,[[],["option",4]]],[11,"next","wasmer_types::lib::std::boxed","",42,[[],["option",4]]],[11,"size_hint","","",42,[[]]],[11,"nth","","",42,[[],["option",4]]],[11,"last","","",42,[[],["option",4]]],[11,"write_str","wasmer_types::lib::std::string","",196,[[],[["error",3],["result",4]]]],[11,"write_char","","",196,[[],[["error",3],["result",4]]]],[11,"resume","wasmer_types::lib::std::boxed","",42,[[["pin",3],["box",3]],["generatorstate",4]]],[11,"deref","wasmer_types::lib::std::borrow","",39,[[]]],[11,"deref","wasmer_types::lib::std::boxed","",42,[[]]],[11,"deref","wasmer_types::lib::std::string","",196,[[]]],[11,"deref","wasmer_types::lib::std::rc","",169,[[]]],[11,"deref","wasmer_types::lib::std::sync","",211,[[]]],[11,"deref","wasmer_types::lib::std::vec","",239,[[]]],[11,"partial_cmp","wasmer_types::lib::std::borrow","",39,[[["cow",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::boxed","",42,[[["box",3]],[["ordering",4],["option",4]]]],[11,"lt","","",42,[[["box",3]]]],[11,"le","","",42,[[["box",3]]]],[11,"ge","","",42,[[["box",3]]]],[11,"gt","","",42,[[["box",3]]]],[11,"partial_cmp","wasmer_types::lib::std::sync","Partial comparison for two `Arc`s.",211,[[["arc",3]],[["ordering",4],["option",4]]]],[11,"lt","","Less-than comparison for two `Arc`s.",211,[[["arc",3]]]],[11,"le","","\'Less than or equal to\' comparison for two `Arc`s.",211,[[["arc",3]]]],[11,"gt","","Greater-than comparison for two `Arc`s.",211,[[["arc",3]]]],[11,"ge","","\'Greater than or equal to\' comparison for two `Arc`s.",211,[[["arc",3]]]],[11,"partial_cmp","wasmer_types::lib::std::vec","",239,[[["vec",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","wasmer_types::lib::std::rc","Partial comparison for two `Rc`s.",169,[[["rc",3]],[["ordering",4],["option",4]]]],[11,"lt","","Less-than comparison for two `Rc`s.",169,[[["rc",3]]]],[11,"le","","\'Less than or equal to\' comparison for two `Rc`s.",169,[[["rc",3]]]],[11,"gt","","Greater-than comparison for two `Rc`s.",169,[[["rc",3]]]],[11,"ge","","\'Greater than or equal to\' comparison for two `Rc`s.",169,[[["rc",3]]]],[11,"partial_cmp","wasmer_types::lib::std::string","",196,[[["string",3]],[["ordering",4],["option",4]]]],[11,"lt","","",196,[[["string",3]]]],[11,"le","","",196,[[["string",3]]]],[11,"gt","","",196,[[["string",3]]]],[11,"ge","","",196,[[["string",3]]]],[11,"call_mut","wasmer_types::lib::std::boxed","",42,[[]]],[11,"from","wasmer_types::lib::std::rc","",169,[[["global",3],["box",3]],["rc",3]]],[11,"from","wasmer_types::lib::std::string","",196,[[["cow",4]],["string",3]]],[11,"from","wasmer_types::lib::std::rc","",169,[[],["rc",3]]],[11,"from","wasmer_types::lib::std::sync","",211,[[],["arc",3]]],[11,"from","wasmer_types::lib::std::string","Converts the given boxed `str` slice to a `String`. It is…",196,[[["global",3],["box",3]],["string",3]]],[11,"from","wasmer_types::lib::std::rc","",169,[[["cow",4]],["rc",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts a `Box<str>` into a `Box<[u8]>`",42,[[["box",3]],["box",3]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["vec",3]],["cow",4]]],[11,"from","","",39,[[["string",3]],["cow",4]]],[11,"from","wasmer_types::lib::std::vec","",239,[[],["vec",3]]],[11,"from","","Converts a `BinaryHeap<T>` into a `Vec<T>`.",239,[[["binaryheap",3]],["vec",3]]],[11,"from","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts the given `String` to a boxed `str` slice that is…",42,[[["string",3]],[["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::vec","",239,[[["cow",4]],["vec",3]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[],["cow",4]]],[11,"from","wasmer_types::lib::std::boxed","Converts a generic type `T` into a `Box<T>`",42,[[],[["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::sync","",211,[[],["arc",3]]],[11,"from","","",211,[[["vec",3]],["arc",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts a `&str` into a `Box<str>`",42,[[],[["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::rc","",169,[[],["rc",3]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[],["cow",4]]],[11,"from","wasmer_types::lib::std::rc","",169,[[["vec",3]],["rc",3]]],[11,"from","wasmer_types::lib::std::vec","Turn a `VecDeque<T>` into a `Vec<T>`.",239,[[["vecdeque",3]],["vec",3]]],[11,"from","","Converts the given `String` to a vector `Vec` that holds…",239,[[["string",3]],["vec",3]]],[11,"from","","",239,[[["global",3],["box",3]],["vec",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts a `&[T]` into a `Box<[T]>`",42,[[],[["global",3],["box",3]]]],[11,"from","","",42,[[["cow",4]],[["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::sync","",211,[[["global",3],["box",3]],["arc",3]]],[11,"from","","",211,[[["string",3]],["arc",3]]],[11,"from","","",211,[[],["arc",3]]],[11,"from","wasmer_types::lib::std::rc","",169,[[["string",3]],["rc",3]]],[11,"from","wasmer_types::lib::std::boxed","",42,[[["cow",4]],[["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["string",3]],["cow",4]]],[11,"from","wasmer_types::lib::std::sync","",211,[[["cow",4]],["arc",3]]],[11,"from","wasmer_types::lib::std::vec","",239,[[],["vec",3]]],[11,"from","wasmer_types::lib::std::rc","",169,[[],["rc",3]]],[11,"from","wasmer_types::lib::std::vec","",239,[[],["vec",3]]],[11,"from","wasmer_types::lib::std::string","",196,[[["string",3]],["string",3]]],[11,"from","","Converts a `&mut str` into a `String`.",196,[[],["string",3]]],[11,"from","wasmer_types::lib::std::borrow","",39,[[["vec",3]],["cow",4]]],[11,"from","wasmer_types::lib::std::vec","",239,[[],["vec",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts a `[T; N]` into a `Box<[T]>`",42,[[],[["global",3],["box",3]]]],[11,"from","","",42,[[["vec",3]],[["global",3],["box",3]]]],[11,"from","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"poll","wasmer_types::lib::std::boxed","",42,[[["context",3],["pin",3],["box",3]],["poll",4]]],[11,"is_empty","wasmer_types::lib::std::vec","",241,[[]]],[11,"len","wasmer_types::lib::std::boxed","",42,[[]]],[11,"is_empty","","",42,[[]]],[11,"is_empty","wasmer_types::lib::std::vec","",240,[[]]],[11,"add","wasmer_types::lib::std::borrow","",39,[[["cow",4]]]],[11,"add","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"add","wasmer_types::lib::std::borrow","",39,[[]]],[11,"from_str","wasmer_types::lib::std::string","",196,[[],[["result",4],["string",3]]]],[11,"as_ref","wasmer_types::lib::std::vec","",239,[[],["vec",3]]],[11,"as_ref","","",239,[[]]],[11,"as_ref","","",240,[[]]],[11,"as_ref","wasmer_types::lib::std::rc","",169,[[]]],[11,"as_ref","wasmer_types::lib::std::boxed","",42,[[]]],[11,"as_ref","wasmer_types::lib::std::vec","",241,[[]]],[11,"as_ref","wasmer_types::lib::std::string","",196,[[]]],[11,"as_ref","wasmer_types::lib::std::sync","",211,[[]]],[11,"as_ref","wasmer_types::lib::std::string","",196,[[]]],[11,"as_ref","wasmer_types::lib::std::borrow","",39,[[]]],[11,"fmt","wasmer_types::lib::std::sync","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::boxed","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","wasmer_types::lib::std::string","",196,[[["rangetoinclusive",3]]]],[11,"index","","",196,[[["rangeinclusive",3]]]],[11,"index","wasmer_types::lib::std::vec","",239,[[]]],[11,"index","wasmer_types::lib::std::string","",196,[[["rangeto",3]]]],[11,"index","","",196,[[["rangefrom",3]]]],[11,"index","","",196,[[["range",3]]]],[11,"index","","",196,[[["rangefull",3]]]],[11,"from_iter","","",196,[[],["string",3]]],[11,"from_iter","wasmer_types::lib::std::sync","Takes each element in the `Iterator` and collects it into…",211,[[],["arc",3]]],[11,"from_iter","wasmer_types::lib::std::borrow","",39,[[],["cow",4]]],[11,"from_iter","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"from_iter","wasmer_types::lib::std::vec","",239,[[],["vec",3]]],[11,"from_iter","wasmer_types::lib::std::rc","Takes each element in the `Iterator` and collects it into…",169,[[],["rc",3]]],[11,"from_iter","wasmer_types::lib::std::boxed","",42,[[],[["global",3],["box",3]]]],[11,"from_iter","wasmer_types::lib::std::borrow","",39,[[],["cow",4]]],[11,"from_iter","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"from_iter","wasmer_types::lib::std::borrow","",39,[[],["cow",4]]],[11,"from_iter","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"from_iter","","",196,[[],["string",3]]],[11,"from_iter","","",196,[[],["string",3]]],[11,"from_iter","wasmer_types::lib::std::borrow","",39,[[],["cow",4]]],[11,"drop","wasmer_types::lib::std::vec","",242,[[]]],[11,"drop","wasmer_types::lib::std::rc","Drops the `Rc`.",169,[[]]],[11,"drop","wasmer_types::lib::std::string","",200,[[]]],[11,"drop","wasmer_types::lib::std::sync","Drops the `Arc`.",211,[[]]],[11,"drop","wasmer_types::lib::std::vec","",239,[[]]],[11,"drop","wasmer_types::lib::std::sync","Drops the `Weak` pointer.",212,[[]]],[11,"drop","wasmer_types::lib::std::rc","Drops the `Weak` pointer.",170,[[]]],[11,"drop","wasmer_types::lib::std::boxed","",42,[[]]],[11,"drop","wasmer_types::lib::std::vec","",240,[[]]],[11,"drop","","",243,[[]]],[11,"drop","","",241,[[]]],[11,"to_string","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"to_string","wasmer_types::lib::std::borrow","",39,[[],["string",3]]],[11,"into_iter","wasmer_types::lib::std::vec","Creates a consuming iterator, that is, one that moves each…",239,[[],["intoiter",3]]],[11,"clone","wasmer_types::lib::std::sync","Makes a clone of the `Arc` pointer.",211,[[],["arc",3]]],[11,"clone","wasmer_types::lib::std::vec","",239,[[],["vec",3]]],[11,"clone_from","","",239,[[["vec",3]]]],[11,"clone","wasmer_types::lib::std::sync","Makes a clone of the `Weak` pointer that points to the…",212,[[],["weak",3]]],[11,"clone","wasmer_types::lib::std::string","",196,[[],["string",3]]],[11,"clone_from","","",196,[[["string",3]]]],[11,"clone","wasmer_types::lib::std::boxed","",42,[[],[["global",3],["box",3]]]],[11,"clone_from","","",42,[[["box",3]]]],[11,"clone","wasmer_types::lib::std::rc","Makes a clone of the `Rc` pointer.",169,[[],["rc",3]]],[11,"clone","wasmer_types::lib::std::borrow","",39,[[],["cow",4]]],[11,"clone_from","","",39,[[["cow",4]]]],[11,"clone","wasmer_types::lib::std::boxed","",42,[[],[["global",3],["box",3]]]],[11,"clone","wasmer_types::lib::std::string","",197,[[],["fromutf8error",3]]],[11,"clone","wasmer_types::lib::std::vec","",240,[[],["intoiter",3]]],[11,"clone","wasmer_types::lib::std::rc","Makes a clone of the `Weak` pointer that points to the…",170,[[],["weak",3]]],[11,"clone","wasmer_types::lib::std::boxed","Returns a new box with a `clone()` of this box\'s contents.",42,[[],["box",3]]],[11,"clone_from","","Copies `source`\'s contents into `self` without creating a…",42,[[["box",3]]]],[11,"finish","","",42,[[]]],[11,"write","","",42,[[]]],[11,"write_u8","","",42,[[]]],[11,"write_u16","","",42,[[]]],[11,"write_u32","","",42,[[]]],[11,"write_u64","","",42,[[]]],[11,"write_u128","","",42,[[]]],[11,"write_usize","","",42,[[]]],[11,"write_i8","","",42,[[]]],[11,"write_i16","","",42,[[]]],[11,"write_i32","","",42,[[]]],[11,"write_i64","","",42,[[]]],[11,"write_i128","","",42,[[]]],[11,"write_isize","","",42,[[]]],[11,"as_inner","wasmer_types::lib::std::vec","",240,[[]]],[11,"as_mut","","",239,[[],["vec",3]]],[11,"as_mut","wasmer_types::lib::std::string","",196,[[]]],[11,"as_mut","wasmer_types::lib::std::boxed","",42,[[]]],[11,"as_mut","wasmer_types::lib::std::vec","",239,[[]]],[11,"eq","wasmer_types::lib::std::string","",196,[[["string",3]]]],[11,"ne","","",196,[[["string",3]]]],[11,"eq","wasmer_types::lib::std::vec","",239,[[["vec",3]]]],[11,"ne","","",239,[[["vec",3]]]],[11,"eq","wasmer_types::lib::std::sync","Equality for two `Arc`s.",211,[[["arc",3]]]],[11,"ne","","Inequality for two `Arc`s.",211,[[["arc",3]]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[]]],[11,"ne","","",39,[[]]],[11,"eq","wasmer_types::lib::std::string","",196,[[]]],[11,"ne","","",196,[[]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[]]],[11,"ne","","",39,[[]]],[11,"eq","wasmer_types::lib::std::vec","",239,[[]]],[11,"ne","","",239,[[]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["string",3]]]],[11,"ne","","",39,[[["string",3]]]],[11,"eq","wasmer_types::lib::std::vec","",239,[[]]],[11,"ne","","",239,[[]]],[11,"eq","wasmer_types::lib::std::boxed","",42,[[["box",3]]]],[11,"ne","","",42,[[["box",3]]]],[11,"eq","wasmer_types::lib::std::vec","",239,[[]]],[11,"ne","","",239,[[]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[]]],[11,"ne","","",39,[[]]],[11,"eq","wasmer_types::lib::std::rc","Equality for two `Rc`s.",169,[[["rc",3]]]],[11,"ne","","Inequality for two `Rc`s.",169,[[["rc",3]]]],[11,"eq","wasmer_types::lib::std::string","",196,[[]]],[11,"ne","","",196,[[]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["vec",3]]]],[11,"ne","","",39,[[["vec",3]]]],[11,"eq","","",39,[[]]],[11,"ne","","",39,[[]]],[11,"eq","wasmer_types::lib::std::string","",196,[[["cow",4]]]],[11,"ne","","",196,[[["cow",4]]]],[11,"eq","wasmer_types::lib::std::vec","",239,[[]]],[11,"ne","","",239,[[]]],[11,"eq","wasmer_types::lib::std::string","",197,[[["fromutf8error",3]]]],[11,"ne","","",197,[[["fromutf8error",3]]]],[11,"eq","wasmer_types::lib::std::borrow","",39,[[["cow",4]]]],[11,"eq","wasmer_types::lib::std::vec","",239,[[]]],[11,"ne","","",239,[[]]],[11,"call","wasmer_types::lib::std::boxed","",42,[[]]],[11,"add_assign","wasmer_types::lib::std::string","",196,[[]]],[11,"add_assign","wasmer_types::lib::std::borrow","",39,[[["cow",4]]]],[11,"add_assign","","",39,[[]]],[11,"cmp","","",39,[[["cow",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::boxed","",42,[[["box",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::rc","Comparison for two `Rc`s.",169,[[["rc",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::vec","",239,[[["vec",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::string","",196,[[["string",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::sync","Comparison for two `Arc`s.",211,[[["arc",3]],["ordering",4]]],[11,"deref_mut","wasmer_types::lib::std::string","",196,[[]]],[11,"deref_mut","wasmer_types::lib::std::boxed","",42,[[]]],[11,"deref_mut","wasmer_types::lib::std::vec","",239,[[]]],[11,"hash","","",239,[[]]],[11,"hash","wasmer_types::lib::std::sync","",211,[[]]],[11,"hash","wasmer_types::lib::std::rc","",169,[[]]],[11,"hash","wasmer_types::lib::std::borrow","",39,[[]]],[11,"hash","wasmer_types::lib::std::boxed","",42,[[]]],[11,"hash","wasmer_types::lib::std::string","",196,[[]]],[11,"fmt","wasmer_types::lib::std::boxed","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::borrow","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"borrow_mut","wasmer_types::lib::std::boxed","",42,[[]]],[11,"borrow_mut","wasmer_types::lib::std::vec","",239,[[]]],[11,"borrow_mut","wasmer_types::lib::std::string","",196,[[]]],[11,"fmt","wasmer_types::lib::std::boxed","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::borrow","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::vec","",242,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",240,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",241,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",243,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",212,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::vec","",239,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","wasmer_types::lib::std::rc","Creates a new `Rc<T>`, with the `Default` value for `T`.",169,[[],["rc",3]]],[11,"default","wasmer_types::lib::std::boxed","",42,[[],[["global",3],["box",3]]]],[11,"default","wasmer_types::lib::std::string","Creates an empty `String`.",196,[[],["string",3]]],[11,"default","wasmer_types::lib::std::vec","Creates an empty `Vec<T>`.",239,[[],["vec",3]]],[11,"default","wasmer_types::lib::std::boxed","Creates a `Box<T>`, with the `Default` value for T.",42,[[],[["global",3],["box",3]]]],[11,"default","wasmer_types::lib::std::borrow","Creates an owned Cow<\'a, B> with the default value for the…",39,[[],["cow",4]]],[11,"default","wasmer_types::lib::std::boxed","",42,[[],[["global",3],["box",3]]]],[11,"default","wasmer_types::lib::std::sync","Creates a new `Arc<T>`, with the `Default` value for `T`.",211,[[],["arc",3]]],[11,"default","","Constructs a new `Weak<T>`, without allocating memory.…",212,[[],["weak",3]]],[11,"default","wasmer_types::lib::std::rc","Constructs a new `Weak<T>`, allocating memory for `T`…",170,[[],["weak",3]]],[11,"next_back","wasmer_types::lib::std::string","",200,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::boxed","",42,[[],["option",4]]],[11,"nth_back","","",42,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::vec","",241,[[],["option",4]]],[11,"next_back","","",240,[[],["option",4]]],[11,"next_back","","",242,[[],["option",4]]],[11,"try_from","wasmer_types::lib::std::rc","",169,[[["rc",3]],[["rc",3],["result",4]]]],[11,"try_from","wasmer_types::lib::std::boxed","",42,[[["global",3],["box",3]],[["result",4],["box",3]]]],[11,"try_from","wasmer_types::lib::std::sync","",211,[[["arc",3]],[["arc",3],["result",4]]]],[11,"borrow","wasmer_types::lib::std::rc","",169,[[]]],[11,"borrow","wasmer_types::lib::std::borrow","",39,[[]]],[11,"borrow","wasmer_types::lib::std::string","",196,[[]]],[11,"borrow","wasmer_types::lib::std::boxed","",42,[[]]],[11,"borrow","wasmer_types::lib::std::sync","",211,[[]]],[11,"borrow","wasmer_types::lib::std::vec","",239,[[]]],[11,"call_once","wasmer_types::lib::std::boxed","",42,[[]]],[11,"extend","wasmer_types::lib::std::string","",196,[[]]],[11,"extend_one","","",196,[[]]],[11,"extend_reserve","","",196,[[]]],[11,"extend","","",196,[[]]],[11,"extend_one","","",196,[[["string",3]]]],[11,"extend","","",196,[[]]],[11,"extend_one","","",196,[[]]],[11,"extend_reserve","","",196,[[]]],[11,"extend","wasmer_types::lib::std::vec","",239,[[]]],[11,"extend_one","","",239,[[]]],[11,"extend_reserve","","",239,[[]]],[11,"extend","","",239,[[]]],[11,"extend_one","","",239,[[]]],[11,"extend_reserve","","",239,[[]]],[11,"extend","wasmer_types::lib::std::string","",196,[[]]],[11,"extend_one","","",196,[[]]],[11,"extend","","",196,[[]]],[11,"extend","","",196,[[]]],[11,"extend_one","","",196,[[["cow",4]]]],[11,"size_of_val","wasmer_types::lib::std::any","",36,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",225,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",224,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",221,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",217,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",218,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",216,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::sync","",230,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::cell","",44,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",49,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::sync","",234,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",223,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::marker","",266,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::sync","",211,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::vec","",239,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::string","",196,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",219,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",220,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",222,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::ptr","",168,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::boxed","",42,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",213,[[["memoryusagetracker",8]]]],[11,"deserialize","wasmer_types::lib::std::marker","",266,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",160,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::cell","",44,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",234,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",217,[[],["result",4]]],[11,"serialize","","",219,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::string","",196,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",157,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",213,[[],["result",4]]],[11,"serialize","","",223,[[],["result",4]]],[11,"serialize","","",218,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",212,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",224,[[],["result",4]]],[11,"serialize","","",225,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",230,[[],["result",4]]],[11,"serialize","","",211,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",162,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",221,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::cmp","",52,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",220,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::rc","",169,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::cell","",43,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::rc","",170,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::boxed","",42,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::marker","",266,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::vec","",239,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::fmt","",62,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",216,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::borrow","",39,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",222,[[],["result",4]]],[11,"into_deserializer","wasmer_types::lib::std::vec","",239,[[]]],[11,"into_deserializer","wasmer_types::lib::std::string","",196,[[],["stringdeserializer",3]]],[11,"into_deserializer","wasmer_types::lib::std::borrow","",39,[[],["cowstrdeserializer",3]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",213,[[],[["atomicbool",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::string","",196,[[],[["result",4],["string",3]]]],[11,"deserialize_in_place","","",196,[[["string",3]],["result",4]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",225,[[],[["result",4],["atomicusize",3]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",42,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_types::lib::std::cell","",43,[[],[["result",4],["cell",3]]]],[11,"deserialize","wasmer_types::lib::std::rc","",169,[[],[["rc",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",222,[[],[["atomici64",3],["result",4]]]],[11,"deserialize","","",218,[[],[["result",4],["atomici16",3]]]],[11,"deserialize","","",223,[[],[["result",4],["atomicu64",3]]]],[11,"deserialize","wasmer_types::lib::std::rc","",170,[[],[["weak",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",221,[[],[["result",4],["atomicu32",3]]]],[11,"deserialize","wasmer_types::lib::std::borrow","",39,[[],[["result",4],["cow",4]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",42,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_types::lib::std::ops","",160,[[],[["bound",4],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::vec","",239,[[],[["result",4],["vec",3]]]],[11,"deserialize_in_place","","",239,[[["vec",3]],["result",4]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",216,[[],[["result",4],["atomici8",3]]]],[11,"deserialize","wasmer_types::lib::std::sync","",211,[[],[["arc",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",42,[[],[["box",3],["result",4]]]],[11,"deserialize","","",42,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",220,[[],[["result",4],["atomici32",3]]]],[11,"deserialize","wasmer_types::lib::std::cmp","",52,[[],[["result",4],["reverse",3]]]],[11,"deserialize","wasmer_types::lib::std::sync","",234,[[],[["result",4],["rwlock",3]]]],[11,"deserialize","","",230,[[],[["result",4],["mutex",3]]]],[11,"deserialize","wasmer_types::lib::std::cell","",44,[[],[["result",4],["refcell",3]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",217,[[],[["result",4],["atomicu8",3]]]],[11,"deserialize","wasmer_types::lib::std::ops","",162,[[],[["result",4],["rangeinclusive",3]]]],[11,"deserialize","wasmer_types::lib::std::marker","",266,[[],[["phantomdata",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",219,[[],[["result",4],["atomicu16",3]]]],[11,"deserialize","wasmer_types::lib::std::sync","",212,[[],[["weak",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::ops","",157,[[],[["range",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",42,[[],[["box",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",224,[[],[["result",4],["atomicisize",3]]]],[11,"custom","wasmer_types::lib::std::fmt","",265,[[],["error",3]]],[11,"ptr_eq","wasmer_types","",18,[[["internalrefbase",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"host_info","","",18,[[],[["refmut",3],["option",4]]]],[11,"set_host_info","","",18,[[["option",4],["box",3]]]],[11,"new","","",6,[[]]],[11,"index","","",6,[[]]],[11,"new","","",9,[[]]],[11,"index","","",9,[[]]],[11,"new","","",8,[[]]],[11,"index","","",8,[[]]],[11,"new","","",7,[[]]],[11,"index","","",7,[[]]],[11,"new","","",4,[[]]],[11,"index","","",4,[[]]],[11,"new","","",12,[[]]],[11,"index","","",12,[[]]],[11,"new","","",5,[[]]],[11,"index","","",5,[[]]],[11,"new","","",10,[[]]],[11,"index","","",10,[[]]],[11,"new","","",11,[[]]],[11,"index","","",11,[[]]],[11,"new","","",2,[[]]],[11,"index","","",2,[[]]],[11,"new","","",3,[[]]],[11,"index","","",3,[[]]],[11,"new","","",1,[[]]],[11,"index","","",1,[[]]],[11,"reserved_value","","",6,[[],["localfunctionindex",3]]],[11,"is_reserved_value","","",6,[[]]],[11,"reserved_value","","",9,[[],["localtableindex",3]]],[11,"is_reserved_value","","",9,[[]]],[11,"reserved_value","","",8,[[],["localmemoryindex",3]]],[11,"is_reserved_value","","",8,[[]]],[11,"reserved_value","","",7,[[],["localglobalindex",3]]],[11,"is_reserved_value","","",7,[[]]],[11,"reserved_value","","",4,[[],["functionindex",3]]],[11,"is_reserved_value","","",4,[[]]],[11,"reserved_value","","",12,[[],["tableindex",3]]],[11,"is_reserved_value","","",12,[[]]],[11,"reserved_value","","",5,[[],["globalindex",3]]],[11,"is_reserved_value","","",5,[[]]],[11,"reserved_value","","",10,[[],["memoryindex",3]]],[11,"is_reserved_value","","",10,[[]]],[11,"reserved_value","","",11,[[],["signatureindex",3]]],[11,"is_reserved_value","","",11,[[]]],[11,"reserved_value","","",2,[[],["dataindex",3]]],[11,"is_reserved_value","","",2,[[]]],[11,"reserved_value","","",3,[[],["elemindex",3]]],[11,"is_reserved_value","","",3,[[]]],[11,"reserved_value","","",1,[[],["customsectionindex",3]]],[11,"is_reserved_value","","",1,[[]]],[11,"drop","wasmer_types::ref","",247,[[]]],[11,"drop","","",249,[[]]],[11,"from","wasmer_types","",27,[[]]],[11,"from","","",27,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[]]],[11,"from","","",22,[[["functiontype",3]]]],[11,"from","","",34,[[]]],[11,"from","","",20,[[]]],[11,"from","","",19,[[["pages",3]]]],[11,"from","","",19,[[]]],[11,"from","","",19,[[]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[]]],[11,"from","","",31,[[["externref",4]]]],[11,"from","wasmer_types::entity::packed_option","Convert `t` into a packed `Some(x)`.",258,[[]]],[11,"from","","Convert an option into its packed equivalent.",258,[[["option",4]]]],[11,"into","","",258,[[],["option",4]]],[11,"next_back","wasmer_types::entity","",253,[[],["option",4]]],[11,"next_back","","",254,[[],["option",4]]],[11,"next_back","wasmer_types::entity::iter","",260,[[],["option",4]]],[11,"next_back","wasmer_types::entity","",255,[[],["option",4]]],[11,"into_iter","","",256,[[]]],[11,"next","","",253,[[],["option",4]]],[11,"size_hint","","",253,[[]]],[11,"next","","",254,[[],["option",4]]],[11,"size_hint","","",254,[[]]],[11,"next","wasmer_types::entity::iter","",260,[[],["option",4]]],[11,"size_hint","","",260,[[]]],[11,"next","wasmer_types::entity","",255,[[],["option",4]]],[11,"size_hint","","",255,[[]]],[11,"clone","wasmer_types","",0,[[],["features",3]]],[11,"clone","","",6,[[],["localfunctionindex",3]]],[11,"clone","","",9,[[],["localtableindex",3]]],[11,"clone","","",8,[[],["localmemoryindex",3]]],[11,"clone","","",7,[[],["localglobalindex",3]]],[11,"clone","","",4,[[],["functionindex",3]]],[11,"clone","","",12,[[],["tableindex",3]]],[11,"clone","","",5,[[],["globalindex",3]]],[11,"clone","","",10,[[],["memoryindex",3]]],[11,"clone","","",11,[[],["signatureindex",3]]],[11,"clone","","",2,[[],["dataindex",3]]],[11,"clone","","",3,[[],["elemindex",3]]],[11,"clone","","",1,[[],["customsectionindex",3]]],[11,"clone","","",28,[[],["exportindex",4]]],[11,"clone","","",29,[[],["importindex",4]]],[11,"clone","","",16,[[],["tableinitializer",3]]],[11,"clone","","",14,[[],["datainitializerlocation",3]]],[11,"clone","","",15,[[],["owneddatainitializer",3]]],[11,"clone","wasmer_types::ref","",246,[[],["internalref",3]]],[11,"clone","","",248,[[],["otherref",3]]],[11,"clone","wasmer_types","",30,[[],["externref",4]]],[11,"clone","","",18,[[]]],[11,"clone","","",35,[[],["type",4]]],[11,"clone","","",27,[[],["v128",3]]],[11,"clone","","",32,[[],["externtype",4]]],[11,"clone","","",22,[[],["functiontype",3]]],[11,"clone","","",34,[[],["mutability",4]]],[11,"clone","","",23,[[],["globaltype",3]]],[11,"clone","","",33,[[],["globalinit",4]]],[11,"clone","","",26,[[],["tabletype",3]]],[11,"clone","","",25,[[],["memorytype",3]]],[11,"clone","","",24,[[],["importtype",3]]],[11,"clone","","",21,[[],["exporttype",3]]],[11,"clone","","",20,[[],["pages",3]]],[11,"clone","","",19,[[],["bytes",3]]],[11,"clone","","",263,[[],["pagecountoutofrange",3]]],[11,"clone","","",31,[[],["value",4]]],[11,"clone","wasmer_types::entity::packed_option","",258,[[],["packedoption",3]]],[11,"clone","wasmer_types::entity","",252,[[],["boxedslice",3]]],[11,"clone","","",256,[[],["primarymap",3]]],[11,"clone","","",257,[[],["secondarymap",3]]],[11,"default","wasmer_types","",0,[[]]],[11,"default","wasmer_types::entity::packed_option","Create a default packed option representing `None`.",258,[[]]],[11,"default","wasmer_types::entity","",256,[[],["primarymap",3]]],[11,"default","","",257,[[],["secondarymap",3]]],[11,"cmp","wasmer_types","",6,[[["localfunctionindex",3]],["ordering",4]]],[11,"cmp","","",9,[[["localtableindex",3]],["ordering",4]]],[11,"cmp","","",8,[[["localmemoryindex",3]],["ordering",4]]],[11,"cmp","","",7,[[["localglobalindex",3]],["ordering",4]]],[11,"cmp","","",4,[[["functionindex",3]],["ordering",4]]],[11,"cmp","","",12,[[["tableindex",3]],["ordering",4]]],[11,"cmp","","",5,[[["globalindex",3]],["ordering",4]]],[11,"cmp","","",10,[[["memoryindex",3]],["ordering",4]]],[11,"cmp","","",11,[[["signatureindex",3]],["ordering",4]]],[11,"cmp","","",2,[[["dataindex",3]],["ordering",4]]],[11,"cmp","","",3,[[["elemindex",3]],["ordering",4]]],[11,"cmp","","",1,[[["customsectionindex",3]],["ordering",4]]],[11,"cmp","","",28,[[["exportindex",4]],["ordering",4]]],[11,"cmp","","",29,[[["importindex",4]],["ordering",4]]],[11,"cmp","","",20,[[["pages",3]],["ordering",4]]],[11,"cmp","","",19,[[["bytes",3]],["ordering",4]]],[11,"cmp","wasmer_types::entity::packed_option","",258,[[["packedoption",3]],["ordering",4]]],[11,"eq","wasmer_types","",0,[[["features",3]]]],[11,"ne","","",0,[[["features",3]]]],[11,"eq","","",6,[[["localfunctionindex",3]]]],[11,"ne","","",6,[[["localfunctionindex",3]]]],[11,"eq","","",9,[[["localtableindex",3]]]],[11,"ne","","",9,[[["localtableindex",3]]]],[11,"eq","","",8,[[["localmemoryindex",3]]]],[11,"ne","","",8,[[["localmemoryindex",3]]]],[11,"eq","","",7,[[["localglobalindex",3]]]],[11,"ne","","",7,[[["localglobalindex",3]]]],[11,"eq","","",4,[[["functionindex",3]]]],[11,"ne","","",4,[[["functionindex",3]]]],[11,"eq","","",12,[[["tableindex",3]]]],[11,"ne","","",12,[[["tableindex",3]]]],[11,"eq","","",5,[[["globalindex",3]]]],[11,"ne","","",5,[[["globalindex",3]]]],[11,"eq","","",10,[[["memoryindex",3]]]],[11,"ne","","",10,[[["memoryindex",3]]]],[11,"eq","","",11,[[["signatureindex",3]]]],[11,"ne","","",11,[[["signatureindex",3]]]],[11,"eq","","",2,[[["dataindex",3]]]],[11,"ne","","",2,[[["dataindex",3]]]],[11,"eq","","",3,[[["elemindex",3]]]],[11,"ne","","",3,[[["elemindex",3]]]],[11,"eq","","",1,[[["customsectionindex",3]]]],[11,"ne","","",1,[[["customsectionindex",3]]]],[11,"eq","","",28,[[["exportindex",4]]]],[11,"ne","","",28,[[["exportindex",4]]]],[11,"eq","","",29,[[["importindex",4]]]],[11,"ne","","",29,[[["importindex",4]]]],[11,"eq","","",30,[[]]],[11,"eq","","",35,[[["type",4]]]],[11,"eq","","",27,[[["v128",3]]]],[11,"ne","","",27,[[["v128",3]]]],[11,"eq","","",32,[[["externtype",4]]]],[11,"ne","","",32,[[["externtype",4]]]],[11,"eq","","",22,[[["functiontype",3]]]],[11,"ne","","",22,[[["functiontype",3]]]],[11,"eq","","",34,[[["mutability",4]]]],[11,"eq","","",23,[[["globaltype",3]]]],[11,"ne","","",23,[[["globaltype",3]]]],[11,"eq","","",26,[[["tabletype",3]]]],[11,"ne","","",26,[[["tabletype",3]]]],[11,"eq","","",25,[[["memorytype",3]]]],[11,"ne","","",25,[[["memorytype",3]]]],[11,"eq","","",24,[[["importtype",3]]]],[11,"ne","","",24,[[["importtype",3]]]],[11,"eq","","",21,[[["exporttype",3]]]],[11,"ne","","",21,[[["exporttype",3]]]],[11,"eq","","",20,[[["pages",3]]]],[11,"ne","","",20,[[["pages",3]]]],[11,"eq","","",19,[[["bytes",3]]]],[11,"ne","","",19,[[["bytes",3]]]],[11,"eq","","",263,[[["pagecountoutofrange",3]]]],[11,"eq","","",31,[[["value",4]]]],[11,"ne","","",31,[[["value",4]]]],[11,"eq","wasmer_types::entity::packed_option","",258,[[["packedoption",3]]]],[11,"ne","","",258,[[["packedoption",3]]]],[11,"eq","wasmer_types::entity","",256,[[["primarymap",3]]]],[11,"ne","","",256,[[["primarymap",3]]]],[11,"eq","","",257,[[]]],[11,"partial_cmp","wasmer_types","",6,[[["localfunctionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["localfunctionindex",3]]]],[11,"le","","",6,[[["localfunctionindex",3]]]],[11,"gt","","",6,[[["localfunctionindex",3]]]],[11,"ge","","",6,[[["localfunctionindex",3]]]],[11,"partial_cmp","","",9,[[["localtableindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["localtableindex",3]]]],[11,"le","","",9,[[["localtableindex",3]]]],[11,"gt","","",9,[[["localtableindex",3]]]],[11,"ge","","",9,[[["localtableindex",3]]]],[11,"partial_cmp","","",8,[[["localmemoryindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["localmemoryindex",3]]]],[11,"le","","",8,[[["localmemoryindex",3]]]],[11,"gt","","",8,[[["localmemoryindex",3]]]],[11,"ge","","",8,[[["localmemoryindex",3]]]],[11,"partial_cmp","","",7,[[["localglobalindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["localglobalindex",3]]]],[11,"le","","",7,[[["localglobalindex",3]]]],[11,"gt","","",7,[[["localglobalindex",3]]]],[11,"ge","","",7,[[["localglobalindex",3]]]],[11,"partial_cmp","","",4,[[["functionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["functionindex",3]]]],[11,"le","","",4,[[["functionindex",3]]]],[11,"gt","","",4,[[["functionindex",3]]]],[11,"ge","","",4,[[["functionindex",3]]]],[11,"partial_cmp","","",12,[[["tableindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["tableindex",3]]]],[11,"le","","",12,[[["tableindex",3]]]],[11,"gt","","",12,[[["tableindex",3]]]],[11,"ge","","",12,[[["tableindex",3]]]],[11,"partial_cmp","","",5,[[["globalindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["globalindex",3]]]],[11,"le","","",5,[[["globalindex",3]]]],[11,"gt","","",5,[[["globalindex",3]]]],[11,"ge","","",5,[[["globalindex",3]]]],[11,"partial_cmp","","",10,[[["memoryindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["memoryindex",3]]]],[11,"le","","",10,[[["memoryindex",3]]]],[11,"gt","","",10,[[["memoryindex",3]]]],[11,"ge","","",10,[[["memoryindex",3]]]],[11,"partial_cmp","","",11,[[["signatureindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["signatureindex",3]]]],[11,"le","","",11,[[["signatureindex",3]]]],[11,"gt","","",11,[[["signatureindex",3]]]],[11,"ge","","",11,[[["signatureindex",3]]]],[11,"partial_cmp","","",2,[[["dataindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["dataindex",3]]]],[11,"le","","",2,[[["dataindex",3]]]],[11,"gt","","",2,[[["dataindex",3]]]],[11,"ge","","",2,[[["dataindex",3]]]],[11,"partial_cmp","","",3,[[["elemindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["elemindex",3]]]],[11,"le","","",3,[[["elemindex",3]]]],[11,"gt","","",3,[[["elemindex",3]]]],[11,"ge","","",3,[[["elemindex",3]]]],[11,"partial_cmp","","",1,[[["customsectionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["customsectionindex",3]]]],[11,"le","","",1,[[["customsectionindex",3]]]],[11,"gt","","",1,[[["customsectionindex",3]]]],[11,"ge","","",1,[[["customsectionindex",3]]]],[11,"partial_cmp","","",28,[[["exportindex",4]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["exportindex",4]]]],[11,"le","","",28,[[["exportindex",4]]]],[11,"gt","","",28,[[["exportindex",4]]]],[11,"ge","","",28,[[["exportindex",4]]]],[11,"partial_cmp","","",29,[[["importindex",4]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["importindex",4]]]],[11,"le","","",29,[[["importindex",4]]]],[11,"gt","","",29,[[["importindex",4]]]],[11,"ge","","",29,[[["importindex",4]]]],[11,"partial_cmp","","",20,[[["pages",3]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["pages",3]]]],[11,"le","","",20,[[["pages",3]]]],[11,"gt","","",20,[[["pages",3]]]],[11,"ge","","",20,[[["pages",3]]]],[11,"partial_cmp","","",19,[[["bytes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["bytes",3]]]],[11,"le","","",19,[[["bytes",3]]]],[11,"gt","","",19,[[["bytes",3]]]],[11,"ge","","",19,[[["bytes",3]]]],[11,"partial_cmp","wasmer_types::entity::packed_option","",258,[[["packedoption",3]],[["ordering",4],["option",4]]]],[11,"lt","","",258,[[["packedoption",3]]]],[11,"le","","",258,[[["packedoption",3]]]],[11,"gt","","",258,[[["packedoption",3]]]],[11,"ge","","",258,[[["packedoption",3]]]],[11,"to_string","wasmer_types","",31,[[],["string",3]]],[11,"deref","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::entity::packed_option","",258,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::entity","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"sub","","",20,[[]]],[11,"sub","","",19,[[]]],[11,"add","","",20,[[]]],[11,"add","","",19,[[]]],[11,"index","wasmer_types::entity","",252,[[]]],[11,"index","","",256,[[]]],[11,"index","","",257,[[]]],[11,"index_mut","","",252,[[]]],[11,"index_mut","","",256,[[]]],[11,"index_mut","","",257,[[]]],[11,"hash","wasmer_types","",6,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",19,[[]]],[11,"hash","wasmer_types::entity::packed_option","",258,[[]]],[11,"hash","wasmer_types::entity","",256,[[]]],[11,"try_from","wasmer_types","",20,[[["bytes",3]],["result",4]]],[11,"from_iter","wasmer_types::entity","",256,[[]]],[11,"size_of_val","wasmer_types","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",6,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",9,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",8,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",7,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",4,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",12,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",5,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",10,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",11,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",28,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",29,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",16,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",14,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",15,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",35,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",27,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",22,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",34,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",23,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",33,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",26,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",25,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",20,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_types::entity","",252,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",256,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",257,[[["memoryusagetracker",8]]]],[11,"deserialize","wasmer_types","",0,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","wasmer_types::entity::packed_option","",258,[[],["result",4]]],[11,"deserialize","wasmer_types::entity","",256,[[],["result",4]]],[11,"deserialize","","",257,[[],["result",4]]],[11,"serialize","wasmer_types","",0,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","wasmer_types::entity::packed_option","",258,[[],["result",4]]],[11,"serialize","wasmer_types::entity","",256,[[],["result",4]]],[11,"serialize","","",257,[[],["result",4]]],[11,"is","wasmer_types::lib::std::any","Returns `true` if the boxed type is the same as `T`.",36,[[]]],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type…",36,[[],["option",4]]],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is…",36,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type `Any`.",36,[[]]],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",36,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",36,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type `Any`.",36,[[]]],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",36,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",36,[[],["option",4]]],[11,"of","","Returns the `TypeId` of the type this generic function has…",37,[[],["typeid",3]]],[11,"is_borrowed","wasmer_types::lib::std::borrow","Returns true if the data is borrowed, i.e. if `to_mut`…",39,[[]]],[11,"is_owned","","Returns true if the data is owned, i.e. if `to_mut` would…",39,[[]]],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",39,[[]]],[11,"into_owned","","Extracts the owned data.",39,[[]]],[11,"new","wasmer_types::lib::std::boxed","Allocates memory on the heap and then places `x` into it.",42,[[],[["global",3],["box",3]]]],[11,"new_uninit","","Constructs a new box with uninitialized contents.",42,[[],[["box",3],["global",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new `Box` with uninitialized contents, with…",42,[[],[["box",3],["global",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new `Pin<Box<T>>`. If `T` does not implement…",42,[[],[["pin",3],["box",3]]]],[11,"new_in","","Allocates memory in the given allocator then places `x`…",42,[[],["box",3]]],[11,"new_uninit_in","","Constructs a new box with uninitialized contents in the…",42,[[],[["box",3],["maybeuninit",19]]]],[11,"new_zeroed_in","","Constructs a new `Box` with uninitialized contents, with…",42,[[],[["box",3],["maybeuninit",19]]]],[11,"pin_in","","Constructs a new `Pin<Box<T, A>>`. If `T` does not…",42,[[],[["box",3],["pin",3]]]],[11,"into_boxed_slice","","Converts a `Box<T>` into a `Box<[T]>`",42,[[["box",3]],["box",3]]],[11,"new_uninit_slice","","Constructs a new boxed slice with uninitialized contents.",42,[[],[["global",3],["box",3]]]],[11,"new_zeroed_slice","","Constructs a new boxed slice with uninitialized contents,…",42,[[],[["global",3],["box",3]]]],[11,"new_uninit_slice_in","","Constructs a new boxed slice with uninitialized contents…",42,[[],["box",3]]],[11,"new_zeroed_slice_in","","Constructs a new boxed slice with uninitialized contents…",42,[[],["box",3]]],[11,"assume_init","","Converts to `Box<T, A>`.",42,[[],["box",3]]],[11,"assume_init","","Converts to `Box<[T], A>`.",42,[[],["box",3]]],[11,"from_raw","","Constructs a box from a raw pointer.",42,[[],[["global",3],["box",3]]]],[11,"from_raw_in","","Constructs a box from a raw pointer in the given allocator.",42,[[],["box",3]]],[11,"into_raw","","Consumes the `Box`, returning a wrapped raw pointer.",42,[[["box",3]]]],[11,"into_raw_with_alloc","","Consumes the `Box`, returning a wrapped raw pointer and…",42,[[["box",3]]]],[11,"alloc_ref","","Returns a reference to the underlying allocator.",42,[[["box",3]]]],[11,"leak","","Consumes and leaks the `Box`, returning a mutable…",42,[[["box",3]]]],[11,"into_pin","","Converts a `Box<T>` into a `Pin<Box<T>>`",42,[[["box",3]],[["box",3],["pin",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",42,[[],[["result",4],["box",3],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",42,[[],[["box",3],["result",4],["box",3]]]],[11,"new","wasmer_types::lib::std::cell","Creates a new `Cell` containing the given value.",43,[[],["cell",3]]],[11,"set","","Sets the contained value.",43,[[]]],[11,"swap","","Swaps the values of two Cells. Difference with…",43,[[["cell",3]]]],[11,"replace","","Replaces the contained value, and returns it.",43,[[]]],[11,"into_inner","","Unwraps the value.",43,[[]]],[11,"get","","Returns a copy of the contained value.",43,[[]]],[11,"update","","Updates the contained value using a function and returns…",43,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this cell.",43,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",43,[[]]],[11,"from_mut","","Returns a `&Cell<T>` from a `&mut T`",43,[[],["cell",3]]],[11,"take","","Takes the value of the cell, leaving `Default::default()`…",43,[[]]],[11,"as_slice_of_cells","","Returns a `&[Cell<T>]` from a `&Cell<[T]>`",43,[[]]],[11,"new","","Creates a new `RefCell` containing `value`.",44,[[],["refcell",3]]],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",44,[[]]],[11,"replace","","Replaces the wrapped value with a new one, returning the…",44,[[]]],[11,"replace_with","","Replaces the wrapped value with a new one computed from…",44,[[]]],[11,"swap","","Swaps the wrapped value of `self` with the wrapped value…",44,[[["refcell",3]]]],[11,"borrow","","Immutably borrows the wrapped value.",44,[[],["ref",3]]],[11,"try_borrow","","Immutably borrows the wrapped value, returning an error if…",44,[[],[["ref",3],["borrowerror",3],["result",4]]]],[11,"borrow_mut","","Mutably borrows the wrapped value.",44,[[],["refmut",3]]],[11,"try_borrow_mut","","Mutably borrows the wrapped value, returning an error if…",44,[[],[["refmut",3],["borrowmuterror",3],["result",4]]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this cell.",44,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",44,[[]]],[11,"undo_leak","","Undo the effect of leaked guards on the borrow state of…",44,[[]]],[11,"try_borrow_unguarded","","Immutably borrows the wrapped value, returning an error if…",44,[[],[["result",4],["borrowerror",3]]]],[11,"take","","Takes the wrapped value, leaving `Default::default()` in…",44,[[]]],[11,"clone","","Copies a `Ref`.",47,[[["ref",3]],["ref",3]]],[11,"map","","Makes a new `Ref` for a component of the borrowed data.",47,[[["ref",3]],["ref",3]]],[11,"map_split","","Splits a `Ref` into multiple `Ref`s for different…",47,[[["ref",3]]]],[11,"leak","","Convert into a reference to the underlying data.",47,[[["ref",3]]]],[11,"map","","Makes a new `RefMut` for a component of the borrowed data,…",48,[[["refmut",3]],["refmut",3]]],[11,"map_split","","Splits a `RefMut` into multiple `RefMut`s for different…",48,[[["refmut",3]]]],[11,"leak","","Convert into a mutable reference to the underlying data.",48,[[["refmut",3]]]],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap…",49,[[],["unsafecell",3]]],[11,"into_inner","","Unwraps the value.",49,[[]]],[11,"get","","Gets a mutable pointer to the wrapped value.",49,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",49,[[]]],[11,"raw_get","","Gets a mutable pointer to the wrapped value. The…",49,[[]]],[11,"reverse","wasmer_types::lib::std::cmp","Reverses the `Ordering`.",51,[[],["ordering",4]]],[11,"then","","Chains two orderings.",51,[[["ordering",4]],["ordering",4]]],[11,"then_with","","Chains the ordering with the given function.",51,[[],["ordering",4]]],[11,"as_str","wasmer_types::lib::std::fmt","Get the formatted string, if it has no arguments to be…",62,[[],["option",4]]],[11,"entry","","Adds a new entry to the list output.",67,[[["debug",8]],["debuglist",3]]],[11,"entries","","Adds the contents of an iterator of entries to the list…",67,[[],["debuglist",3]]],[11,"finish","","Finishes output and returns any error encountered.",67,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the map output.",68,[[["debug",8]],["debugmap",3]]],[11,"key","","Adds the key part of a new entry to the map output.",68,[[["debug",8]],["debugmap",3]]],[11,"value","","Adds the value part of a new entry to the map output.",68,[[["debug",8]],["debugmap",3]]],[11,"entries","","Adds the contents of an iterator of entries to the map…",68,[[],["debugmap",3]]],[11,"finish","","Finishes output and returns any error encountered.",68,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the set output.",69,[[["debug",8]],["debugset",3]]],[11,"entries","","Adds the contents of an iterator of entries to the set…",69,[[],["debugset",3]]],[11,"finish","","Finishes output and returns any error encountered.",69,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated struct output.",70,[[["debug",8]],["debugstruct",3]]],[11,"finish_non_exhaustive","","Marks the struct as non-exhaustive, indicating to the…",70,[[],[["error",3],["result",4]]]],[11,"finish","","Finishes output and returns any error encountered.",70,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated tuple struct output.",71,[[["debug",8]],["debugtuple",3]]],[11,"finish","","Finishes output and returns any error encountered.",71,[[],[["error",3],["result",4]]]],[11,"pad_integral","","Performs the correct padding for an integer which has…",72,[[],[["error",3],["result",4]]]],[11,"pad","","This function takes a string slice and emits it to the…",72,[[],[["error",3],["result",4]]]],[11,"write_str","","Writes some data to the underlying buffer contained within…",72,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Writes some formatted information into this instance.",72,[[["arguments",3]],[["error",3],["result",4]]]],[11,"flags","","Flags for formatting",72,[[]]],[11,"fill","","Character used as \'fill\' whenever there is alignment.",72,[[]]],[11,"align","","Flag indicating what form of alignment was requested.",72,[[],[["alignment",4],["option",4]]]],[11,"width","","Optionally specified integer width that the output should…",72,[[],["option",4]]],[11,"precision","","Optionally specified precision for numeric types.…",72,[[],["option",4]]],[11,"sign_plus","","Determines if the `+` flag was specified.",72,[[]]],[11,"sign_minus","","Determines if the `-` flag was specified.",72,[[]]],[11,"alternate","","Determines if the `#` flag was specified.",72,[[]]],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",72,[[]]],[11,"debug_struct","","Creates a [`DebugStruct`] builder designed to assist with…",72,[[],["debugstruct",3]]],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with…",72,[[],["debugtuple",3]]],[11,"debug_list","","Creates a `DebugList` builder designed to assist with…",72,[[],["debuglist",3]]],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with…",72,[[],["debugset",3]]],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with…",72,[[],["debugmap",3]]],[11,"new","wasmer_types::lib::std::hash","Creates a new `SipHasher` with the two initial keys set to…",83,[[],["siphasher",3]]],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",83,[[],["siphasher",3]]],[11,"peek","wasmer_types::lib::std::iter","Returns a reference to the next() value without advancing…",115,[[],["option",4]]],[11,"next_if","","Consume and return the next value of this iterator if a…",115,[[],["option",4]]],[11,"next_if_eq","","Consume and return the next item if it is equal to…",115,[[],["option",4]]],[11,"new","wasmer_types::lib::std::mem","Wrap a value to be manually dropped.",125,[[],["manuallydrop",3]]],[11,"into_inner","","Extracts the value from the `ManuallyDrop` container.",125,[[["manuallydrop",3]]]],[11,"take","","Takes the value from the `ManuallyDrop<T>` container out.",125,[[["manuallydrop",3]]]],[11,"drop","","Manually drops the contained value. This is exactly…",125,[[["manuallydrop",3]]]],[11,"new","","Creates a new `MaybeUninit<T>` initialized with the given…",126,[[],["maybeuninit",19]]],[11,"uninit","","Creates a new `MaybeUninit<T>` in an uninitialized state.",126,[[],["maybeuninit",19]]],[11,"uninit_array","","Create a new array of `MaybeUninit<T>` items, in an…",126,[[]]],[11,"zeroed","","Creates a new `MaybeUninit<T>` in an uninitialized state,…",126,[[],["maybeuninit",19]]],[11,"write","","Sets the value of the `MaybeUninit<T>`. This overwrites…",126,[[]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this…",126,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading…",126,[[]]],[11,"assume_init","","Extracts the value from the `MaybeUninit<T>` container.…",126,[[]]],[11,"assume_init_read","","Reads the value from the `MaybeUninit<T>` container. The…",126,[[]]],[11,"assume_init_drop","","Drops the contained value in place.",126,[[]]],[11,"assume_init_ref","","Gets a shared reference to the contained value.",126,[[]]],[11,"assume_init_mut","","Gets a mutable (unique) reference to the contained value.",126,[[]]],[11,"slice_assume_init_ref","","Assuming all the elements are initialized, get a slice to…",126,[[]]],[11,"slice_assume_init_mut","","Assuming all the elements are initialized, get a mutable…",126,[[]]],[11,"slice_as_ptr","","Gets a pointer to the first element of the array.",126,[[]]],[11,"slice_as_mut_ptr","","Gets a mutable pointer to the first element of the array.",126,[[]]],[11,"contains","wasmer_types::lib::std::ops","Returns `true` if `item` is contained in the range.",157,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",157,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",158,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",159,[[]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",160,[[],["bound",4]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",162,[[],["rangeinclusive",3]]],[11,"start","","Returns the lower bound of the range (inclusive).",162,[[]]],[11,"end","","Returns the upper bound of the range (inclusive).",162,[[]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",162,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",162,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",162,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",163,[[]]],[11,"is_break","","Returns `true` if this is a `Break` variant.",167,[[]]],[11,"is_continue","","Returns `true` if this is a `Continue` variant.",167,[[]]],[11,"break_value","","Converts the `ControlFlow` into an `Option` which is…",167,[[],["option",4]]],[11,"from_try","","Create a `ControlFlow` from any type implementing `Try`.",167,[[],["controlflow",4]]],[11,"into_try","","Convert a `ControlFlow` into any type implementing `Try`;",167,[[]]],[18,"CONTINUE","","It\'s frequently the case that there\'s no value needed with…",167,null],[18,"BREAK","","APIs like `try_for_each` don\'t need values with `Break`,…",167,null],[11,"dangling","wasmer_types::lib::std::ptr","Creates a new `NonNull` that is dangling, but well-aligned.",168,[[],["nonnull",3]]],[11,"as_uninit_ref","","Returns a shared references to the value. In contrast to…",168,[[],["maybeuninit",19]]],[11,"as_uninit_mut","","Returns a unique references to the value. In contrast to…",168,[[],["maybeuninit",19]]],[11,"new_unchecked","","Creates a new `NonNull`.",168,[[],["nonnull",3]]],[11,"new","","Creates a new `NonNull` if `ptr` is non-null.",168,[[],[["option",4],["nonnull",3]]]],[11,"as_ptr","","Acquires the underlying `*mut` pointer.",168,[[]]],[11,"as_ref","","Returns a shared reference to the value. If the value may…",168,[[]]],[11,"as_mut","","Returns a unique reference to the value. If the value may…",168,[[]]],[11,"cast","","Casts to a pointer of another type.",168,[[],["nonnull",3]]],[11,"slice_from_raw_parts","","Creates a non-null raw slice from a thin pointer and a…",168,[[["nonnull",3]],["nonnull",3]]],[11,"len","","Returns the length of a non-null raw slice.",168,[[]]],[11,"as_non_null_ptr","","Returns a non-null pointer to the slice\'s buffer.",168,[[],["nonnull",3]]],[11,"as_mut_ptr","","Returns a raw pointer to the slice\'s buffer.",168,[[]]],[11,"as_uninit_slice","","Returns a shared reference to a slice of possibly…",168,[[]]],[11,"as_uninit_slice_mut","","Returns a unique reference to a slice of possibly…",168,[[]]],[11,"get_unchecked_mut","","Returns a raw pointer to an element or subslice, without…",168,[[],["nonnull",3]]],[11,"new","wasmer_types::lib::std::rc","Constructs a new `Rc<T>`.",169,[[],["rc",3]]],[11,"new_cyclic","","Constructs a new `Rc<T>` using a weak reference to itself.…",169,[[],["rc",3]]],[11,"new_uninit","","Constructs a new `Rc` with uninitialized contents.",169,[[],[["maybeuninit",19],["rc",3]]]],[11,"new_zeroed","","Constructs a new `Rc` with uninitialized contents, with…",169,[[],[["maybeuninit",19],["rc",3]]]],[11,"pin","","Constructs a new `Pin<Rc<T>>`. If `T` does not implement…",169,[[],[["rc",3],["pin",3]]]],[11,"try_unwrap","","Returns the inner value, if the `Rc` has exactly one…",169,[[["rc",3]],[["result",4],["rc",3]]]],[11,"new_uninit_slice","","Constructs a new reference-counted slice with…",169,[[],["rc",3]]],[11,"new_zeroed_slice","","Constructs a new reference-counted slice with…",169,[[],["rc",3]]],[11,"assume_init","","Converts to `Rc<T>`.",169,[[],["rc",3]]],[11,"assume_init","","Converts to `Rc<[T]>`.",169,[[],["rc",3]]],[11,"into_raw","","Consumes the `Rc`, returning the wrapped pointer.",169,[[["rc",3]]]],[11,"as_ptr","","Provides a raw pointer to the data.",169,[[["rc",3]]]],[11,"from_raw","","Constructs an `Rc<T>` from a raw pointer.",169,[[],["rc",3]]],[11,"downgrade","","Creates a new [`Weak`] pointer to this allocation.",169,[[["rc",3]],["weak",3]]],[11,"weak_count","","Gets the number of [`Weak`] pointers to this allocation.",169,[[["rc",3]]]],[11,"strong_count","","Gets the number of strong (`Rc`) pointers to this…",169,[[["rc",3]]]],[11,"get_mut","","Returns a mutable reference into the given `Rc`, if there…",169,[[["rc",3]],["option",4]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given `Rc`, without…",169,[[["rc",3]]]],[11,"ptr_eq","","Returns `true` if the two `Rc`s point to the same…",169,[[["rc",3]]]],[11,"make_mut","","Makes a mutable reference into the given `Rc`.",169,[[["rc",3]]]],[11,"downcast","","Attempt to downcast the `Rc<dyn Any>` to a concrete type.",169,[[],[["rc",3],["rc",3],["result",4]]]],[11,"new","","Constructs a new `Weak<T>`, without allocating any memory.…",170,[[],["weak",3]]],[11,"as_ptr","","Returns a raw pointer to the object `T` pointed to by this…",170,[[]]],[11,"into_raw","","Consumes the `Weak<T>` and turns it into a raw pointer.",170,[[]]],[11,"from_raw","","Converts a raw pointer previously created by `into_raw`…",170,[[],["weak",3]]],[11,"upgrade","","Attempts to upgrade the `Weak` pointer to an [`Rc`],…",170,[[],[["option",4],["rc",3]]]],[11,"strong_count","","Gets the number of strong (`Rc`) pointers pointing to this…",170,[[]]],[11,"weak_count","","Gets the number of `Weak` pointers pointing to this…",170,[[]]],[11,"ptr_eq","","Returns `true` if the two `Weak`s point to the same…",170,[[["weak",3]]]],[11,"remainder","wasmer_types::lib::std::slice","Returns the remainder of the original slice that is not…",173,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",174,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not…",179,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",180,[[]]],[11,"as_slice","","Views the underlying data as a subslice of the original…",184,[[]]],[11,"into_slice","","Views the underlying data as a subslice of the original…",185,[[]]],[11,"as_slice","","Views the underlying data as a subslice of the original…",185,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not…",187,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not…",188,[[]]],[11,"new","wasmer_types::lib::std::string","Creates a new empty `String`.",196,[[],["string",3]]],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",196,[[],["string",3]]],[11,"from_utf8","","Converts a vector of bytes to a `String`.",196,[[["vec",3]],[["string",3],["result",4],["fromutf8error",3]]]],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid…",196,[[],["cow",4]]],[11,"from_utf16","","Decode a UTF-16–encoded vector `v` into a `String`,…",196,[[],[["string",3],["result",4],["fromutf16error",3]]]],[11,"from_utf16_lossy","","Decode a UTF-16–encoded slice `v` into a `String`,…",196,[[],["string",3]]],[11,"into_raw_parts","","Decomposes a `String` into its raw components.",196,[[]]],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",196,[[],["string",3]]],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking…",196,[[["vec",3]],["string",3]]],[11,"into_bytes","","Converts a `String` into a byte vector.",196,[[],["vec",3]]],[11,"as_str","","Extracts a string slice containing the entire `String`.",196,[[]]],[11,"as_mut_str","","Converts a `String` into a mutable string slice.",196,[[]]],[11,"push_str","","Appends a given string slice onto the end of this `String`.",196,[[]]],[11,"capacity","","Returns this `String`\'s capacity, in bytes.",196,[[]]],[11,"reserve","","Ensures that this `String`\'s capacity is at least…",196,[[]]],[11,"reserve_exact","","Ensures that this `String`\'s capacity is `additional`…",196,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",196,[[],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserves the minimum capacity for exactly…",196,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",196,[[]]],[11,"shrink_to","","Shrinks the capacity of this `String` with a lower bound.",196,[[]]],[11,"push","","Appends the given [`char`] to the end of this `String`.",196,[[]]],[11,"as_bytes","","Returns a byte slice of this `String`\'s contents.",196,[[]]],[11,"truncate","","Shortens this `String` to the specified length.",196,[[]]],[11,"pop","","Removes the last character from the string buffer and…",196,[[],["option",4]]],[11,"remove","","Removes a [`char`] from this `String` at a byte position…",196,[[]]],[11,"retain","","Retains only the characters specified by the predicate.",196,[[]]],[11,"insert","","Inserts a character into this `String` at a byte position.",196,[[]]],[11,"insert_str","","Inserts a string slice into this `String` at a byte…",196,[[]]],[11,"as_mut_vec","","Returns a mutable reference to the contents of this…",196,[[],["vec",3]]],[11,"len","","Returns the length of this `String`, in bytes, not…",196,[[]]],[11,"is_empty","","Returns `true` if this `String` has a length of zero, and…",196,[[]]],[11,"split_off","","Splits the string into two at the given index.",196,[[],["string",3]]],[11,"clear","","Truncates this `String`, removing all contents.",196,[[]]],[11,"drain","","Creates a draining iterator that removes the specified…",196,[[],["drain",3]]],[11,"replace_range","","Removes the specified range in the string, and replaces it…",196,[[]]],[11,"into_boxed_str","","Converts this `String` into a [`Box`]`<``str``>`.",196,[[],[["global",3],["box",3]]]],[11,"as_bytes","","Returns a slice of [`u8`]s bytes that were attempted to…",197,[[]]],[11,"into_bytes","","Returns the bytes that were attempted to convert to a…",197,[[],["vec",3]]],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the…",197,[[],["utf8error",3]]],[11,"as_str","","Returns the remaining (sub)string of this iterator as a…",200,[[]]],[11,"try_recv","wasmer_types::lib::std::sync::mpsc","Attempts to return a pending value on this receiver…",201,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Attempts to wait for a value on this receiver, returning…",201,[[],[["recverror",3],["result",4]]]],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning…",201,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_deadline","","Attempts to wait for a value on this receiver, returning…",201,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"iter","","Returns an iterator that will block waiting for messages,…",201,[[],["iter",3]]],[11,"try_iter","","Returns an iterator that will attempt to yield all pending…",201,[[],["tryiter",3]]],[11,"send","","Attempts to send a value on this channel, returning it…",205,[[],[["result",4],["senderror",3]]]],[11,"send","","Sends a value on this synchronous channel.",206,[[],[["result",4],["senderror",3]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",206,[[],[["result",4],["trysenderror",4]]]],[11,"new","wasmer_types::lib::std::sync","Constructs a new `Arc<T>`.",211,[[],["arc",3]]],[11,"new_cyclic","","Constructs a new `Arc<T>` using a weak reference to…",211,[[],["arc",3]]],[11,"new_uninit","","Constructs a new `Arc` with uninitialized contents.",211,[[],[["arc",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new `Arc` with uninitialized contents, with…",211,[[],[["arc",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new `Pin<Arc<T>>`. If `T` does not implement…",211,[[],[["arc",3],["pin",3]]]],[11,"try_unwrap","","Returns the inner value, if the `Arc` has exactly one…",211,[[["arc",3]],[["arc",3],["result",4]]]],[11,"new_uninit_slice","","Constructs a new atomically reference-counted slice with…",211,[[],["arc",3]]],[11,"new_zeroed_slice","","Constructs a new atomically reference-counted slice with…",211,[[],["arc",3]]],[11,"assume_init","","Converts to `Arc<T>`.",211,[[],["arc",3]]],[11,"assume_init","","Converts to `Arc<[T]>`.",211,[[],["arc",3]]],[11,"into_raw","","Consumes the `Arc`, returning the wrapped pointer.",211,[[["arc",3]]]],[11,"as_ptr","","Provides a raw pointer to the data.",211,[[["arc",3]]]],[11,"from_raw","","Constructs an `Arc<T>` from a raw pointer.",211,[[],["arc",3]]],[11,"downgrade","","Creates a new [`Weak`] pointer to this allocation.",211,[[["arc",3]],["weak",3]]],[11,"weak_count","","Gets the number of [`Weak`] pointers to this allocation.",211,[[["arc",3]]]],[11,"strong_count","","Gets the number of strong (`Arc`) pointers to this…",211,[[["arc",3]]]],[11,"incr_strong_count","","Increments the strong reference count on the `Arc<T>`…",211,[[]]],[11,"decr_strong_count","","Decrements the strong reference count on the `Arc<T>`…",211,[[]]],[11,"ptr_eq","","Returns `true` if the two `Arc`s point to the same…",211,[[["arc",3]]]],[11,"make_mut","","Makes a mutable reference into the given `Arc`.",211,[[["arc",3]]]],[11,"get_mut","","Returns a mutable reference into the given `Arc`, if there…",211,[[["arc",3]],["option",4]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given `Arc`, without…",211,[[["arc",3]]]],[11,"downcast","","Attempt to downcast the `Arc<dyn Any + Send + Sync>` to a…",211,[[],[["arc",3],["result",4],["arc",3]]]],[11,"new","","Constructs a new `Weak<T>`, without allocating any memory.…",212,[[],["weak",3]]],[11,"as_ptr","","Returns a raw pointer to the object `T` pointed to by this…",212,[[]]],[11,"into_raw","","Consumes the `Weak<T>` and turns it into a raw pointer.",212,[[]]],[11,"from_raw","","Converts a raw pointer previously created by `into_raw`…",212,[[],["weak",3]]],[11,"upgrade","","Attempts to upgrade the `Weak` pointer to an [`Arc`],…",212,[[],[["arc",3],["option",4]]]],[11,"strong_count","","Gets the number of strong (`Arc`) pointers pointing to…",212,[[]]],[11,"weak_count","","Gets an approximation of the number of `Weak` pointers…",212,[[]]],[11,"ptr_eq","","Returns `true` if the two `Weak`s point to the same…",212,[[["weak",3]]]],[11,"new","wasmer_types::lib::std::sync::atomic","Creates a new `AtomicBool`.",213,[[],["atomicbool",3]]],[11,"get_mut","","Returns a mutable reference to the underlying [`bool`].",213,[[]]],[11,"from_mut","","Get atomic access to a `&mut bool`.",213,[[],["atomicbool",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",213,[[]]],[11,"load","","Loads a value from the bool.",213,[[["ordering",4]]]],[11,"store","","Stores a value into the bool.",213,[[["ordering",4]]]],[11,"swap","","Stores a value into the bool, returning the previous value.",213,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the [`bool`] if the current value is…",213,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the [`bool`] if the current value is…",213,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the [`bool`] if the current value is…",213,[[["ordering",4]],["result",4]]],[11,"fetch_and","","Logical \\\"and\\\" with a boolean value.",213,[[["ordering",4]]]],[11,"fetch_nand","","Logical \\\"nand\\\" with a boolean value.",213,[[["ordering",4]]]],[11,"fetch_or","","Logical \\\"or\\\" with a boolean value.",213,[[["ordering",4]]]],[11,"fetch_xor","","Logical \\\"xor\\\" with a boolean value.",213,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying [`bool`].",213,[[]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",213,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new `AtomicPtr`.",214,[[],["atomicptr",3]]],[11,"get_mut","","Returns a mutable reference to the underlying pointer.",214,[[]]],[11,"from_mut","","Get atomic access to a pointer.",214,[[],["atomicptr",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",214,[[]]],[11,"load","","Loads a value from the pointer.",214,[[["ordering",4]]]],[11,"store","","Stores a value into the pointer.",214,[[["ordering",4]]]],[11,"swap","","Stores a value into the pointer, returning the previous…",214,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the pointer if the current value is…",214,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the pointer if the current value is…",214,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is…",214,[[["ordering",4]],["result",4]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",214,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new atomic integer.",216,[[],["atomici8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",216,[[]]],[11,"from_mut","","Get atomic access to a `&mut i8`.",216,[[],["atomici8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",216,[[]]],[11,"load","","Loads a value from the atomic integer.",216,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",216,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",216,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",216,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",216,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",216,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",216,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",216,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",216,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",216,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",216,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",216,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",216,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",216,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",216,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",216,[[]]],[11,"new","","Creates a new atomic integer.",217,[[],["atomicu8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",217,[[]]],[11,"from_mut","","Get atomic access to a `&mut u8`.",217,[[],["atomicu8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",217,[[]]],[11,"load","","Loads a value from the atomic integer.",217,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",217,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",217,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",217,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",217,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",217,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",217,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",217,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",217,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",217,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",217,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",217,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",217,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",217,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",217,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",217,[[]]],[11,"new","","Creates a new atomic integer.",218,[[],["atomici16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",218,[[]]],[11,"from_mut","","Get atomic access to a `&mut i16`.",218,[[],["atomici16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",218,[[]]],[11,"load","","Loads a value from the atomic integer.",218,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",218,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",218,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",218,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",218,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",218,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",218,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",218,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",218,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",218,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",218,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",218,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",218,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",218,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",218,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",218,[[]]],[11,"new","","Creates a new atomic integer.",219,[[],["atomicu16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",219,[[]]],[11,"from_mut","","Get atomic access to a `&mut u16`.",219,[[],["atomicu16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",219,[[]]],[11,"load","","Loads a value from the atomic integer.",219,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",219,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",219,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",219,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",219,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",219,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",219,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",219,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",219,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",219,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",219,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",219,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",219,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",219,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",219,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",219,[[]]],[11,"new","","Creates a new atomic integer.",220,[[],["atomici32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",220,[[]]],[11,"from_mut","","Get atomic access to a `&mut i32`.",220,[[],["atomici32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",220,[[]]],[11,"load","","Loads a value from the atomic integer.",220,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",220,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",220,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",220,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",220,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",220,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",220,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",220,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",220,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",220,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",220,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",220,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",220,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",220,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",220,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",220,[[]]],[11,"new","","Creates a new atomic integer.",221,[[],["atomicu32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",221,[[]]],[11,"from_mut","","Get atomic access to a `&mut u32`.",221,[[],["atomicu32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",221,[[]]],[11,"load","","Loads a value from the atomic integer.",221,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",221,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",221,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",221,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",221,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",221,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",221,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",221,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",221,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",221,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",221,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",221,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",221,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",221,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",221,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",221,[[]]],[11,"new","","Creates a new atomic integer.",222,[[],["atomici64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",222,[[]]],[11,"from_mut","","Get atomic access to a `&mut i64`.",222,[[],["atomici64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",222,[[]]],[11,"load","","Loads a value from the atomic integer.",222,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",222,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",222,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",222,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",222,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",222,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",222,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",222,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",222,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",222,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",222,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",222,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",222,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",222,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",222,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",222,[[]]],[11,"new","","Creates a new atomic integer.",223,[[],["atomicu64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",223,[[]]],[11,"from_mut","","Get atomic access to a `&mut u64`.",223,[[],["atomicu64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",223,[[]]],[11,"load","","Loads a value from the atomic integer.",223,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",223,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",223,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",223,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",223,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",223,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",223,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",223,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",223,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",223,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",223,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",223,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",223,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",223,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",223,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",223,[[]]],[11,"new","","Creates a new atomic integer.",224,[[],["atomicisize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",224,[[]]],[11,"from_mut","","Get atomic access to a `&mut isize`.",224,[[],["atomicisize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",224,[[]]],[11,"load","","Loads a value from the atomic integer.",224,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",224,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",224,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",224,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",224,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",224,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",224,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",224,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",224,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",224,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",224,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",224,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",224,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",224,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",224,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",224,[[]]],[11,"new","","Creates a new atomic integer.",225,[[],["atomicusize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",225,[[]]],[11,"from_mut","","Get atomic access to a `&mut usize`.",225,[[],["atomicusize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",225,[[]]],[11,"load","","Loads a value from the atomic integer.",225,[[["ordering",4]]]],[11,"store","","Stores a value into the atomic integer.",225,[[["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the…",225,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current…",225,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current…",225,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current…",225,[[["ordering",4]],["result",4]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",225,[[["ordering",4]]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous…",225,[[["ordering",4]]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",225,[[["ordering",4]]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",225,[[["ordering",4]]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",225,[[["ordering",4]]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",225,[[["ordering",4]]]],[11,"fetch_update","","Fetches the value, and applies a function to it that…",225,[[["ordering",4]],["result",4]]],[11,"fetch_max","","Maximum with the current value.",225,[[["ordering",4]]]],[11,"fetch_min","","Minimum with the current value.",225,[[["ordering",4]]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",225,[[]]],[11,"new","wasmer_types::lib::std::sync","Creates a new barrier that can block a given number of…",226,[[],["barrier",3]]],[11,"wait","","Blocks the current thread until all threads have…",226,[[],["barrierwaitresult",3]]],[11,"is_leader","","Returns `true` if this thread is the \\\"leader thread\\\" for…",227,[[]]],[11,"new","","Creates a new condition variable which is ready to be…",228,[[],["condvar",3]]],[11,"wait","","Blocks the current thread until this condition variable…",228,[[["mutexguard",3]],[["result",4],["poisonerror",3],["mutexguard",3]]]],[11,"wait_while","","Blocks the current thread until this condition variable…",228,[[["mutexguard",3]],[["result",4],["poisonerror",3],["mutexguard",3]]]],[11,"wait_timeout_ms","","Waits on this condition variable for a notification,…",228,[[["mutexguard",3]],[["result",4],["poisonerror",3]]]],[11,"wait_timeout","","Waits on this condition variable for a notification,…",228,[[["duration",3],["mutexguard",3]],[["poisonerror",3],["result",4]]]],[11,"wait_timeout_while","","Waits on this condition variable for a notification,…",228,[[["duration",3],["mutexguard",3]],[["poisonerror",3],["result",4]]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",228,[[]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",228,[[]]],[11,"timed_out","","Returns `true` if the wait was known to have timed out.",229,[[]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",230,[[],["mutex",3]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",230,[[],[["result",4],["mutexguard",3],["poisonerror",3]]]],[11,"try_lock","","Attempts to acquire this lock.",230,[[],[["result",4],["mutexguard",3],["trylockerror",4]]]],[11,"is_poisoned","","Determines whether the mutex is poisoned.",230,[[]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",230,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",230,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a new `Once` value.",232,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. The…",232,[[]]],[11,"call_once_force","","Performs the same function as `call_once()` except ignores…",232,[[]]],[11,"is_completed","","Returns `true` if some `call_once()` call has completed…",232,[[]]],[11,"poisoned","","Returns `true` if the associated [`Once`] was poisoned…",233,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",234,[[],["rwlock",3]]],[11,"read","","Locks this rwlock with shared read access, blocking the…",234,[[],[["result",4],["rwlockreadguard",3],["poisonerror",3]]]],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",234,[[],[["result",4],["rwlockreadguard",3],["trylockerror",4]]]],[11,"write","","Locks this rwlock with exclusive write access, blocking…",234,[[],[["result",4],["rwlockwriteguard",3],["poisonerror",3]]]],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",234,[[],[["trylockerror",4],["rwlockwriteguard",3],["result",4]]]],[11,"is_poisoned","","Determines whether the lock is poisoned.",234,[[]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",234,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",234,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a `PoisonError`.",237,[[],["poisonerror",3]]],[11,"into_inner","","Consumes this error indicating that a lock is poisoned,…",237,[[]]],[11,"get_ref","","Reaches into this error indicating that a lock is…",237,[[]]],[11,"get_mut","","Reaches into this error indicating that a lock is…",237,[[]]],[11,"new","wasmer_types::lib::std::vec","Constructs a new, empty `Vec<T>`.",239,[[],["vec",3]]],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified…",239,[[],["vec",3]]],[11,"into_raw_parts","","Decomposes a `Vec<T>` into its raw components.",239,[[]]],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of…",239,[[],["vec",3]]],[11,"capacity","","Returns the number of elements the vector can hold without…",239,[[]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",239,[[]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",239,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",239,[[],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly…",239,[[],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",239,[[]]],[11,"shrink_to","","Shrinks the capacity of the vector with a lower bound.",239,[[]]],[11,"into_boxed_slice","","Converts the vector into `Box<[T]>`.",239,[[],[["global",3],["box",3]]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",239,[[]]],[11,"as_slice","","Extracts a slice containing the entire vector.",239,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",239,[[]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",239,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the vector\'s buffer.",239,[[]]],[11,"set_len","","Forces the length of the vector to `new_len`.",239,[[]]],[11,"swap_remove","","Removes an element from the vector and returns it.",239,[[]]],[11,"insert","","Inserts an element at position `index` within the vector,…",239,[[]]],[11,"remove","","Removes and returns the element at position `index` within…",239,[[]]],[11,"retain","","Retains only the elements specified by the predicate.",239,[[]]],[11,"dedup_by_key","","Removes all but the first of consecutive elements in the…",239,[[]]],[11,"dedup_by","","Removes all but the first of consecutive elements in the…",239,[[]]],[11,"push","","Appends an element to the back of a collection.",239,[[]]],[11,"pop","","Removes the last element from a vector and returns it, or…",239,[[],["option",4]]],[11,"append","","Moves all the elements of `other` into `Self`, leaving…",239,[[["vec",3]]]],[11,"drain","","Creates a draining iterator that removes the specified…",239,[[],["drain",3]]],[11,"clear","","Clears the vector, removing all values.",239,[[]]],[11,"len","","Returns the number of elements in the vector, also…",239,[[]]],[11,"is_empty","","Returns `true` if the vector contains no elements.",239,[[]]],[11,"split_off","","Splits the collection into two at the given index.",239,[[],["vec",3]]],[11,"resize_with","","Resizes the `Vec` in-place so that `len` is equal to…",239,[[]]],[11,"leak","","Consumes and leaks the `Vec`, returning a mutable…",239,[[]]],[11,"spare_capacity_mut","","Returns the remaining spare capacity of the vector as a…",239,[[]]],[11,"resize","","Resizes the `Vec` in-place so that `len` is equal to…",239,[[]]],[11,"extend_from_slice","","Clones and appends all elements in a slice to the `Vec`.",239,[[]]],[11,"dedup","","Removes consecutive repeated elements in the vector…",239,[[]]],[11,"remove_item","","Removes the first instance of `item` from the vector if…",239,[[],["option",4]]],[11,"splice","","Creates a splicing iterator that replaces the specified…",239,[[],["splice",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if…",239,[[],["drainfilter",3]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",240,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",240,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",241,[[]]]],"p":[[3,"Features"],[3,"CustomSectionIndex"],[3,"DataIndex"],[3,"ElemIndex"],[3,"FunctionIndex"],[3,"GlobalIndex"],[3,"LocalFunctionIndex"],[3,"LocalGlobalIndex"],[3,"LocalMemoryIndex"],[3,"LocalTableIndex"],[3,"MemoryIndex"],[3,"SignatureIndex"],[3,"TableIndex"],[3,"DataInitializer"],[3,"DataInitializerLocation"],[3,"OwnedDataInitializer"],[3,"TableInitializer"],[3,"MemoryView"],[3,"HostRef"],[3,"Bytes"],[3,"Pages"],[3,"ExportType"],[3,"FunctionType"],[3,"GlobalType"],[3,"ImportType"],[3,"MemoryType"],[3,"TableType"],[3,"V128"],[4,"ExportIndex"],[4,"ImportIndex"],[4,"ExternRef"],[4,"Value"],[4,"ExternType"],[4,"GlobalInit"],[4,"Mutability"],[4,"Type"],[8,"Any"],[3,"TypeId"],[8,"ToOwned"],[4,"Cow"],[8,"Borrow"],[8,"BorrowMut"],[3,"Box"],[3,"Cell"],[3,"RefCell"],[3,"BorrowError"],[3,"BorrowMutError"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[8,"PartialEq"],[4,"Ordering"],[3,"Reverse"],[8,"Ord"],[8,"PartialOrd"],[8,"AsRef"],[8,"AsMut"],[8,"Into"],[8,"From"],[8,"TryInto"],[8,"TryFrom"],[4,"Alignment"],[3,"Arguments"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Formatter"],[8,"Write"],[8,"LowerExp"],[8,"UpperExp"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"Hash"],[8,"Hasher"],[8,"BuildHasher"],[3,"BuildHasherDefault"],[3,"SipHasher"],[8,"Iterator"],[8,"Step"],[3,"Empty"],[3,"FromFn"],[3,"Once"],[3,"OnceWith"],[3,"Repeat"],[3,"RepeatWith"],[3,"Successors"],[8,"DoubleEndedIterator"],[8,"Extend"],[8,"FromIterator"],[8,"IntoIterator"],[8,"ExactSizeIterator"],[8,"Product"],[8,"Sum"],[3,"Cloned"],[3,"Copied"],[3,"Flatten"],[3,"MapWhile"],[8,"SourceIter"],[3,"StepBy"],[3,"Chain"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Map"],[3,"Rev"],[3,"Zip"],[3,"FlatMap"],[3,"Peekable"],[3,"Scan"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Fuse"],[3,"Inspect"],[8,"DiscriminantKind"],[3,"Discriminant"],[3,"ManuallyDrop"],[19,"MaybeUninit"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeInclusive"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[4,"ControlFlow"],[3,"NonNull"],[3,"Rc"],[3,"Weak"],[8,"Concat"],[8,"Join"],[3,"ArrayChunks"],[3,"ArrayChunksMut"],[3,"ArrayWindows"],[8,"SliceIndex"],[3,"Chunks"],[3,"Windows"],[3,"ChunksExact"],[3,"ChunksExactMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Iter"],[3,"IterMut"],[3,"RChunks"],[3,"RChunksExact"],[3,"RChunksExactMut"],[3,"RChunksMut"],[3,"RSplit"],[3,"RSplitMut"],[3,"RSplitN"],[3,"RSplitNMut"],[3,"SplitN"],[3,"SplitNMut"],[3,"String"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"ToString"],[3,"Drain"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Sender"],[3,"SyncSender"],[3,"SendError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Arc"],[3,"Weak"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"WaitTimeoutResult"],[3,"Mutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"PoisonError"],[4,"TryLockError"],[3,"Vec"],[3,"IntoIter"],[3,"Drain"],[3,"Splice"],[3,"DrainFilter"],[8,"Atomic"],[8,"NativeWasmType"],[3,"InternalRef"],[3,"AnyAndHostInfo"],[3,"OtherRef"],[3,"ContentBox"],[8,"HostInfo"],[8,"InternalRefBase"],[3,"BoxedSlice"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"PrimaryMap"],[3,"SecondaryMap"],[3,"PackedOption"],[8,"ReservedValue"],[3,"IntoIter"],[8,"EntityRef"],[3,"Atomically"],[3,"PageCountOutOfRange"],[4,"Infallible"],[3,"Error"],[3,"PhantomData"],[3,"PhantomPinned"],[3,"RangeFull"],[3,"RecvError"],[3,"NonAtomically"]],"a":{"!=":[176,179],"%":[568,580],"%=":[580],"&":[584],"&*":[612],"&=":[602],"*":[562,578,612,615],"*=":[578],"+":[556,574],"+=":[574],"-":[565,571,582],"-=":[582],"..":[631,634,636,637],"..=":[648,652],"/":[559,576],"/=":[576],"<":[186,191],"<<":[596],"<<=":[608],"<=":[186,191],"==":[176,179],">":[186,191],">=":[186,191],">>":[599],">>=":[610],"?":[654],"[":[626,629],"[]":[626,629],"]":[626,629],"^":[590],"^=":[606],"inject":[350],"memcpy":[689],"memmove":[690],"reduce":[350],"{:?}":[241],"{}":[244],"|":[587],"|=":[604]}},\
"wasmer_vm":{"doc":"Runtime library support for Wasmer.","i":[[3,"VMExportFunction","wasmer_vm","A function export value.",null,null],[12,"address","","The address of the native-code function.",0,null],[12,"vmctx","","Pointer to the containing `VMContext`.",0,null],[12,"signature","","The function type, used for compatibility checking.",0,null],[12,"kind","","The function kind (specifies the calling convention for…",0,null],[12,"call_trampoline","","Address of the function call trampoline owned by the same…",0,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",0,null],[3,"VMExportTable","","A table export value.",null,null],[12,"from","","Pointer to the containing `Table`.",1,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",1,null],[3,"VMExportMemory","","A memory export value.",null,null],[12,"from","","Pointer to the containing `Memory`.",2,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",2,null],[3,"VMExportGlobal","","A global export value.",null,null],[12,"from","","The global declaration, used for compatibility checking.",3,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",3,null],[3,"Global","","A Global instance",null,null],[12,"ty","","",4,null],[12,"vm_global_definition","","",4,null],[12,"lock","","",4,null],[3,"Imports","","Resolved import pointers.",null,null],[12,"functions","","Resolved addresses for imported functions.",5,null],[12,"host_function_env_initializers","","Initializers for host function environments. This is split…",5,null],[12,"tables","","Resolved addresses for imported tables.",5,null],[12,"memories","","Resolved addresses for imported memories.",5,null],[12,"globals","","Resolved addresses for imported globals.",5,null],[3,"InstanceAllocator","","This is an intermediate type that manages the raw…",null,null],[12,"instance_ptr","","The buffer that will contain the [`Instance`] and dynamic…",6,null],[12,"instance_layout","","The layout of the `instance_ptr` buffer.",6,null],[12,"offsets","","Information about the offsets into the `instance_ptr`…",6,null],[12,"consumed","","Whether or not this type has transferred ownership of the…",6,null],[3,"InstanceHandle","","A handle holding an `InstanceRef`, which holds an…",null,null],[12,"instance","","The [`InstanceRef`]. See its documentation to learn more.",7,null],[3,"LinearMemory","","A linear memory instance.",null,null],[12,"mmap","","",8,null],[12,"maximum","","",8,null],[12,"memory","","The WebAssembly linear memory description.",8,null],[12,"style","","Our chosen implementation style.",8,null],[12,"offset_guard_size","","",8,null],[12,"vm_memory_definition","","The owned memory definition used by the generated code",8,null],[12,"needs_signal_handlers","","",8,null],[3,"Mmap","","A simple struct consisting of a page-aligned pointer to…",null,null],[12,"ptr","","",9,null],[12,"len","","",9,null],[3,"ExportsIterator","","This iterator allows us to iterate over the exports and…",null,null],[12,"iter","","",10,null],[12,"size","","",10,null],[3,"ImportsIterator","","This iterator allows us to iterate over the imports and…",null,null],[12,"iter","","",11,null],[12,"size","","",11,null],[3,"ModuleInfo","","A translated WebAssembly module, excluding the function…",null,null],[12,"id","","A unique identifier (within this process) for this module.",12,null],[12,"name","","The name of this wasm module, often found in the wasm file.",12,null],[12,"imports","","Imported entities with the (module, field,…",12,null],[12,"exports","","Exported entities.",12,null],[12,"start_function","","The module \\\"start\\\" function, if present.",12,null],[12,"table_initializers","","WebAssembly table initializers.",12,null],[12,"passive_elements","","WebAssembly passive elements.",12,null],[12,"passive_data","","WebAssembly passive data segments.",12,null],[12,"global_initializers","","WebAssembly global initializers.",12,null],[12,"function_names","","WebAssembly function names.",12,null],[12,"signatures","","WebAssembly function signatures.",12,null],[12,"functions","","WebAssembly functions (imported and local).",12,null],[12,"tables","","WebAssembly tables (imported and local).",12,null],[12,"memories","","WebAssembly linear memories (imported and local).",12,null],[12,"globals","","WebAssembly global variables (imported and local).",12,null],[12,"custom_sections","","Custom sections in the module.",12,null],[12,"custom_sections_data","","The data for each CustomSection in the module.",12,null],[12,"num_imported_functions","","Number of imported functions in the module.",12,null],[12,"num_imported_tables","","Number of imported tables in the module.",12,null],[12,"num_imported_memories","","Number of imported memories in the module.",12,null],[12,"num_imported_globals","","Number of imported globals in the module.",12,null],[3,"SignatureRegistry","","WebAssembly requires that the caller and callee signatures…",null,null],[12,"inner","","",13,null],[3,"LinearTable","","A table instance.",null,null],[12,"vec","","",14,null],[12,"maximum","","",14,null],[12,"table","","The WebAssembly table description.",14,null],[12,"style","","Our chosen implementation style.",14,null],[12,"vm_table_definition","","",14,null],[3,"VMBuiltinFunctionIndex","","An index type for builtin functions.",null,null],[12,"0","","",15,null],[3,"VMCallerCheckedAnyfunc","","The VM caller-checked \\\"anyfunc\\\" record, for caller-side…",null,null],[12,"func_ptr","","Function body.",16,null],[12,"type_index","","Function signature id.",16,null],[12,"vmctx","","Function `VMContext` or host env.",16,null],[3,"VMContext","","The VM \\\"context\\\", which is pointed to by the `vmctx` arg…",null,null],[3,"VMDynamicFunctionContext","","The `VMDynamicFunctionContext` is the context that dynamic…",null,null],[12,"address","","The address of the inner dynamic function.",17,null],[12,"ctx","","The context that the inner dynamic function will receive.",17,null],[3,"VMFunctionBody","","A placeholder byte-sized type which is just used to…",null,null],[12,"0","","",18,null],[3,"VMFunctionImport","","An imported function.",null,null],[12,"body","","A pointer to the imported function body.",19,null],[12,"environment","","A pointer to the `VMContext` that owns the function or…",19,null],[3,"VMGlobalDefinition","","The storage for a WebAssembly global defined within the…",null,null],[12,"storage","","",20,null],[3,"VMGlobalImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"definition","","A pointer to the imported global variable description.",21,null],[12,"from","","A pointer to the `Global` that owns the global description.",21,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","The start address which is always valid, even if the…",22,null],[12,"current_length","","The current logical size of this linear memory in bytes.",22,null],[3,"VMMemoryImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"definition","","A pointer to the imported memory description.",23,null],[12,"from","","A pointer to the `Memory` that owns the memory description.",23,null],[3,"VMSharedSignatureIndex","","An index into the shared signature registry, usable for…",null,null],[12,"0","","",24,null],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","Pointer to the table data.",25,null],[12,"current_elements","","The current number of elements in the table.",25,null],[3,"VMTableImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"definition","","A pointer to the imported table description.",26,null],[12,"from","","A pointer to the `Table` that owns the table description.",26,null],[3,"TargetSharedSignatureIndex","","Target specific type for shared signature index.",null,null],[12,"0","","",27,null],[3,"VMOffsets","","This class computes offsets to fields within `VMContext`…",null,null],[12,"pointer_size","","The size in bytes of a pointer on the target.",28,null],[12,"num_signature_ids","","The number of signature declarations in the module.",28,null],[12,"num_imported_functions","","The number of imported functions in the module.",28,null],[12,"num_imported_tables","","The number of imported tables in the module.",28,null],[12,"num_imported_memories","","The number of imported memories in the module.",28,null],[12,"num_imported_globals","","The number of imported globals in the module.",28,null],[12,"num_local_tables","","The number of defined tables in the module.",28,null],[12,"num_local_memories","","The number of defined memories in the module.",28,null],[12,"num_local_globals","","The number of defined globals in the module.",28,null],[3,"FunctionBodyPtr","","A safe wrapper around `VMFunctionBody`.",null,null],[12,"0","","",29,null],[3,"SectionBodyPtr","","Pointers to section data.",null,null],[12,"0","","",30,null],[19,"VMFunctionEnvironment","","Union representing the first parameter passed when calling…",null,null],[12,"vmctx","","Wasm functions take a pointer to [`VMContext`].",31,null],[12,"host_env","","Host functions can have custom environments.",31,null],[4,"VMExport","","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",32,null],[13,"Table","","A table export value.",32,null],[13,"Memory","","A memory export value.",32,null],[13,"Global","","A global export value.",32,null],[4,"GlobalError","","Error type describing things that can go wrong when…",null,null],[13,"ImmutableGlobalCannotBeSet","","The error returned when attempting to set an immutable…",33,null],[13,"IncorrectType","","The error returned when attempting to operate on a global…",33,null],[12,"expected","wasmer_vm::GlobalError","The type that the global is.",34,null],[12,"found","","The type that we were asked to use it as.",34,null],[4,"ImportFunctionEnv","wasmer_vm","A collection of data about host envs used by imported…",null,null],[13,"NoEnv","","The `vmctx` pointer does not refer to a host env, there is…",35,null],[13,"Env","","We\'re dealing with a user-defined host env.",35,null],[12,"env","wasmer_vm::ImportFunctionEnv","The function environment. This is not always the…",36,null],[12,"clone","","A clone function for duplicating the env.",36,null],[12,"initializer","","This field is not always present. When it is present, it…",36,null],[12,"destructor","","The destructor to clean up the type in `env`.",36,null],[4,"MemoryError","wasmer_vm","Error type describing things that can go wrong when…",null,null],[13,"Region","","Low level error with mmap.",37,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to exceed…",37,null],[12,"current","wasmer_vm::MemoryError","The current size in pages.",38,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",38,null],[13,"InvalidMemory","wasmer_vm","The operation would cause the size of the memory size…",37,null],[12,"reason","wasmer_vm::MemoryError","The reason why the provided memory is invalid.",39,null],[13,"MinimumMemoryTooLarge","wasmer_vm","Caller asked for more minimum memory than we can give them.",37,null],[12,"min_requested","wasmer_vm::MemoryError","The number of pages requested as the minimum amount of…",40,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",40,null],[13,"MaximumMemoryTooLarge","wasmer_vm","Caller asked for a maximum memory greater than we can give…",37,null],[12,"max_requested","wasmer_vm::MemoryError","The number of pages requested as the maximum amount of…",41,null],[12,"max_allowed","","The number of pages requested as the maximum amount of…",41,null],[13,"Generic","wasmer_vm","A user defined error value, used for error cases not…",37,null],[4,"MemoryStyle","","Implementation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",42,null],[12,"offset_guard_size","wasmer_vm::MemoryStyle","Our chosen offset-guard size.",43,null],[13,"Static","wasmer_vm","Address space is allocated up front.",42,null],[12,"bound","wasmer_vm::MemoryStyle","The number of mapped and unmapped pages.",44,null],[12,"offset_guard_size","","Our chosen offset-guard size.",44,null],[4,"TableStyle","wasmer_vm","Implementation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the…",45,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",46,null],[13,"HeapSetterOutOfBounds","","Memory data doesn\'t fit the memory size.",46,null],[13,"HeapAccessOutOfBounds","","A `heap_addr` instruction detected an out-of-bounds error.",46,null],[13,"HeapMisaligned","","A `heap_addr` instruction was misaligned.",46,null],[13,"TableSetterOutOfBounds","","Table Elements doesn\'t fit the table size.",46,null],[13,"TableAccessOutOfBounds","","A `table_addr` instruction detected an out-of-bounds error.",46,null],[13,"OutOfBounds","","Other bounds checking error.",46,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",46,null],[13,"BadSignature","","Signature mismatch on indirect call.",46,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",46,null],[13,"IntegerDivisionByZero","","An integer division by zero.",46,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",46,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",46,null],[13,"Interrupt","","Execution has potentially run too long and may be…",46,null],[13,"UnalignedAtomic","","An atomic memory access was attempted with an unaligned…",46,null],[13,"VMOutOfMemory","","A trap indicating that the runtime was unable to allocate…",46,null],[4,"Trap","","Stores trace message with backtrace.",null,null],[13,"User","","A user-raised trap through `raise_user_trap`.",47,null],[13,"Wasm","","A trap raised from machine code generated from Wasm",47,null],[12,"pc","wasmer_vm::Trap","The program counter in generated code where this trap…",48,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",48,null],[12,"signal_trap","","Optional trapcode associated to the signal that caused the…",48,null],[13,"Runtime","wasmer_vm","A trap raised manually from the Wasmer VM",47,null],[12,"trap_code","wasmer_vm::Trap","Code of the trap.",49,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",49,null],[4,"VMFunctionKind","wasmer_vm","A function kind is a calling convention into and out of…",null,null],[13,"Static","","A static function has the native signature: `extern \\\"C\\\"…",50,null],[13,"Dynamic","","A dynamic function has the native signature: `extern \\\"C\\\"…",50,null],[5,"catch_traps","","Catches any wasm traps that happen within the execution of…",null,[[["vmfunctionenvironment",19]],[["trap",4],["result",4]]]],[5,"catch_traps_with_result","","Catches any wasm traps that happen within the execution of…",null,[[["vmfunctionenvironment",19]],[["result",4],["trap",4]]]],[5,"raise_lib_trap","","Raises a trap from inside library code immediately.",null,[[["trap",4]]]],[5,"raise_user_trap","","Raises a user-defined trap immediately.",null,[[["box",3],["error",8]]]],[5,"wasmer_call_trampoline","","Call the wasm function pointed to by `callee`.",null,[[["vmfunctionenvironment",19],["vmtrampoline",6]],[["trap",4],["result",4]]]],[5,"init_traps","","This function performs the low-overhead signal handler…",null,[[]]],[5,"resume_panic","","Carries a Rust panic across wasm code and resumes the…",null,[[["box",3],["any",8]]]],[0,"export","","",null,null],[3,"VMExportFunction","wasmer_vm::export","A function export value.",null,null],[12,"address","","The address of the native-code function.",0,null],[12,"vmctx","","Pointer to the containing `VMContext`.",0,null],[12,"signature","","The function type, used for compatibility checking.",0,null],[12,"kind","","The function kind (specifies the calling convention for…",0,null],[12,"call_trampoline","","Address of the function call trampoline owned by the same…",0,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",0,null],[3,"VMExportTable","","A table export value.",null,null],[12,"from","","Pointer to the containing `Table`.",1,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",1,null],[3,"VMExportMemory","","A memory export value.",null,null],[12,"from","","Pointer to the containing `Memory`.",2,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",2,null],[3,"VMExportGlobal","","A global export value.",null,null],[12,"from","","The global declaration, used for compatibility checking.",3,null],[12,"instance_ref","","A “reference” to the instance through the `InstanceRef`.…",3,null],[4,"VMExport","","The value of an export passed from one instance to another.",null,null],[13,"Function","","A function export value.",32,null],[13,"Table","","A table export value.",32,null],[13,"Memory","","A memory export value.",32,null],[13,"Global","","A global export value.",32,null],[11,"ty","wasmer_vm","Get the table type for this exported table",1,[[],["tabletype",3]]],[11,"style","","Get the style for this exported table",1,[[],["tablestyle",4]]],[11,"same","","Returns whether or not the two `VMExportTable`s refer to…",1,[[]]],[11,"ty","","Get the type for this exported memory",2,[[],["memorytype",3]]],[11,"style","","Get the style for this exported memory",2,[[],["memorystyle",4]]],[11,"same","","Returns whether or not the two `VMExportMemory`s refer to…",2,[[]]],[11,"same","","Returns whether or not the two `VMExportGlobal`s refer to…",3,[[]]],[0,"global","","",null,null],[3,"Global","wasmer_vm::global","A Global instance",null,null],[12,"ty","","",4,null],[12,"vm_global_definition","","",4,null],[12,"lock","","",4,null],[4,"GlobalError","","Error type describing things that can go wrong when…",null,null],[13,"ImmutableGlobalCannotBeSet","","The error returned when attempting to set an immutable…",33,null],[13,"IncorrectType","","The error returned when attempting to operate on a global…",33,null],[12,"expected","wasmer_vm::global::GlobalError","The type that the global is.",34,null],[12,"found","","The type that we were asked to use it as.",34,null],[11,"new","wasmer_vm","Create a new, zero bit-pattern initialized global from a…",4,[[["globaltype",3]]]],[11,"ty","","Get the type of the global.",4,[[],["globaltype",3]]],[11,"vmglobal","","Get a pointer to the underlying definition used by the…",4,[[],[["vmglobaldefinition",3],["nonnull",3]]]],[11,"get","","Get a value from the global.",4,[[],["value",4]]],[11,"set","","Set a value for the global.",4,[[["value",4]],[["result",4],["globalerror",4]]]],[11,"set_unchecked","","Set a value from the global (unchecked)",4,[[["value",4]],[["result",4],["globalerror",4]]]],[0,"imports","","",null,null],[3,"Imports","wasmer_vm::imports","Resolved import pointers.",null,null],[12,"functions","","Resolved addresses for imported functions.",5,null],[12,"host_function_env_initializers","","Initializers for host function environments. This is split…",5,null],[12,"tables","","Resolved addresses for imported tables.",5,null],[12,"memories","","Resolved addresses for imported memories.",5,null],[12,"globals","","Resolved addresses for imported globals.",5,null],[11,"new","wasmer_vm","Construct a new `Imports` instance.",5,[[["vmmemoryimport",3],["globalindex",3],["primarymap",3],["primarymap",3],["functionindex",3],["importfunctionenv",4],["primarymap",3],["vmtableimport",3],["memoryindex",3],["primarymap",3],["vmfunctionimport",3],["tableindex",3],["vmglobalimport",3],["primarymap",3]]]],[11,"none","","Construct a new `Imports` instance with no imports.",5,[[]]],[11,"get_imported_function_envs","","Get the `WasmerEnv::init_with_instance` function pointers…",5,[[],[["functionindex",3],["boxedslice",3],["importfunctionenv",4]]]],[0,"instance","","An `Instance` contains all the runtime state used by…",null,null],[3,"Instance","wasmer_vm::instance","A WebAssembly instance.",null,null],[12,"module","","The `ModuleInfo` this `Instance` was instantiated from.",51,null],[12,"offsets","","Offsets in the `vmctx` region.",51,null],[12,"memories","","WebAssembly linear memory data.",51,null],[12,"tables","","WebAssembly table data.",51,null],[12,"globals","","WebAssembly global data.",51,null],[12,"functions","","Pointers to functions in executable memory.",51,null],[12,"function_call_trampolines","","Pointers to function call trampolines in executable memory.",51,null],[12,"passive_elements","","Passive elements in this instantiation. As `elem.drop`s…",51,null],[12,"passive_data","","Passive data segments from our module. As `data.drop`s…",51,null],[12,"host_state","","Hosts can store arbitrary per-instance information here.",51,null],[12,"signal_handler","","Handler run when `SIGBUS`, `SIGFPE`, `SIGILL`, or…",51,null],[12,"imported_function_envs","","Functions to operate on host environments in the imports…",51,null],[12,"vmctx","","Additional context used by compiled WebAssembly code. This…",51,null],[3,"InstanceHandle","","A handle holding an `InstanceRef`, which holds an…",null,null],[12,"instance","","The [`InstanceRef`]. See its documentation to learn more.",7,null],[4,"ImportFunctionEnv","","A collection of data about host envs used by imported…",null,null],[13,"NoEnv","","The `vmctx` pointer does not refer to a host env, there is…",35,null],[13,"Env","","We\'re dealing with a user-defined host env.",35,null],[12,"env","wasmer_vm::instance::ImportFunctionEnv","The function environment. This is not always the…",36,null],[12,"clone","","A clone function for duplicating the env.",36,null],[12,"initializer","","This field is not always present. When it is present, it…",36,null],[12,"destructor","","The destructor to clean up the type in `env`.",36,null],[5,"check_table_init_bounds","wasmer_vm::instance","",null,[[["instance",3]],[["trap",4],["result",4]]]],[5,"get_memory_init_start","","Compute the offset for a memory data initializer.",null,[[["datainitializer",3],["instance",3]]]],[5,"get_memory_slice","","Return a byte-slice view of a memory\'s data.",null,[[["datainitializer",3],["instance",3]]]],[5,"check_memory_init_bounds","","",null,[[["instance",3]],[["trap",4],["result",4]]]],[5,"get_table_init_start","","Compute the offset for a table element initializer.",null,[[["tableinitializer",3],["instance",3]]]],[5,"initialize_tables","","Initialize the table memory from the provided initializers.",null,[[["instance",3]],[["trap",4],["result",4]]]],[5,"initialize_passive_elements","","Initialize the `Instance::passive_elements` map by…",null,[[["instance",3]]]],[5,"initialize_memories","","Initialize the table memory from the provided initializers.",null,[[["instance",3]],[["trap",4],["result",4]]]],[5,"initialize_globals","","",null,[[["instance",3]]]],[0,"allocator","","",null,null],[3,"InstanceAllocator","wasmer_vm::instance::allocator","This is an intermediate type that manages the raw…",null,null],[12,"instance_ptr","","The buffer that will contain the [`Instance`] and dynamic…",6,null],[12,"instance_layout","","The layout of the `instance_ptr` buffer.",6,null],[12,"offsets","","Information about the offsets into the `instance_ptr`…",6,null],[12,"consumed","","Whether or not this type has transferred ownership of the…",6,null],[11,"new","wasmer_vm","Allocates instance data for use with `InstanceHandle::new`.",6,[[["moduleinfo",3]]]],[11,"instance_layout","","Calculate the appropriate layout for the [`Instance`].",6,[[["vmoffsets",3]],["layout",3]]],[11,"memory_definition_locations","","Get the locations of where the local…",6,[[],[["vec",3],["nonnull",3]]]],[11,"table_definition_locations","","Get the locations of where the [`VMTableDefinition`]s…",6,[[],[["nonnull",3],["vec",3]]]],[11,"write_instance","","Finish preparing by writing the [`Instance`] into memory,…",6,[[["instance",3]],["instanceref",3]]],[11,"offsets","","Get the [`VMOffsets`] for the allocated buffer.",6,[[],["vmoffsets",3]]],[0,"ref","wasmer_vm::instance","",null,null],[3,"InstanceRef","wasmer_vm::instance::ref","An `InstanceRef` is responsible to properly deallocate,…",null,null],[12,"strong","","Number of `Self` in the nature. It increases when `Self`…",52,null],[12,"instance_layout","","The layout of `Instance` (which can vary).",52,null],[12,"instance","","The `Instance` itself. It must be the last field of…",52,null],[11,"new","","Create a new `InstanceRef`. It allocates nothing. It fills…",52,[[["nonnull",3],["layout",3],["instance",3]]]],[18,"MAX_REFCOUNT","","A soft limit on the amount of references that may be made…",52,null],[11,"deallocate_instance","","Deallocate `Instance`.",52,[[]]],[11,"strong_count","","Get the number of strong references pointing to this…",52,[[]]],[11,"as_ref","","Get a reference to the `Instance`.",52,[[],["instance",3]]],[11,"as_mut","","",52,[[],["instance",3]]],[6,"ImportInitializerFuncPtr","wasmer_vm::instance","The function pointer to call with data and an [`Instance`]…",null,null],[6,"SignalHandler","","",null,null],[11,"initializer","wasmer_vm","Get the `initializer` function pointer if it exists.",35,[[],[["option",4],["importinitializerfuncptr",6]]]],[11,"vmctx_plus_offset","wasmer_vm::instance","Helper function to access various locations offset from…",51,[[]]],[11,"signature_id","","Return the indexed `VMSharedSignatureIndex`.",51,[[["signatureindex",3]],["vmsharedsignatureindex",3]]],[11,"module","","",51,[[],["arc",3]]],[11,"module_ref","","",51,[[],["moduleinfo",3]]],[11,"offsets","","Offsets in the `vmctx` region.",51,[[],["vmoffsets",3]]],[11,"signature_ids_ptr","","Return a pointer to the `VMSharedSignatureIndex`s.",51,[[]]],[11,"imported_function","","Return the indexed `VMFunctionImport`.",51,[[["functionindex",3]],["vmfunctionimport",3]]],[11,"imported_function_env_initializer","","Get the import initializer func at the given index if it…",51,[[["functionindex",3]],[["option",4],["importinitializerfuncptr",6]]]],[11,"imported_functions_ptr","","Return a pointer to the `VMFunctionImport`s.",51,[[]]],[11,"imported_table","","Return the index `VMTableImport`.",51,[[["tableindex",3]],["vmtableimport",3]]],[11,"imported_tables_ptr","","Return a pointer to the `VMTableImports`s.",51,[[]]],[11,"imported_memory","","Return the indexed `VMMemoryImport`.",51,[[["memoryindex",3]],["vmmemoryimport",3]]],[11,"imported_memories_ptr","","Return a pointer to the `VMMemoryImport`s.",51,[[]]],[11,"imported_global","","Return the indexed `VMGlobalImport`.",51,[[["globalindex",3]],["vmglobalimport",3]]],[11,"imported_globals_ptr","","Return a pointer to the `VMGlobalImport`s.",51,[[]]],[11,"table","","Return the indexed `VMTableDefinition`.",51,[[["localtableindex",3]],["vmtabledefinition",3]]],[11,"set_table","","Updates the value for a defined table to…",51,[[["localtableindex",3],["vmtabledefinition",3]]]],[11,"table_ptr","","Return the indexed `VMTableDefinition`.",51,[[["localtableindex",3]],[["vmtabledefinition",3],["nonnull",3]]]],[11,"tables_ptr","","Return a pointer to the `VMTableDefinition`s.",51,[[]]],[11,"get_memory","","Get a locally defined or imported memory.",51,[[["memoryindex",3]],["vmmemorydefinition",3]]],[11,"memory","","Return the indexed `VMMemoryDefinition`.",51,[[["localmemoryindex",3]],["vmmemorydefinition",3]]],[11,"set_memory","","Set the indexed memory to `VMMemoryDefinition`.",51,[[["localmemoryindex",3],["vmmemorydefinition",3]]]],[11,"memory_ptr","","Return the indexed `VMMemoryDefinition`.",51,[[["localmemoryindex",3]],[["vmmemorydefinition",3],["nonnull",3]]]],[11,"memories_ptr","","Return a pointer to the `VMMemoryDefinition`s.",51,[[]]],[11,"global","","Return the indexed `VMGlobalDefinition`.",51,[[["localglobalindex",3]],["vmglobaldefinition",3]]],[11,"set_global","","Set the indexed global to `VMGlobalDefinition`.",51,[[["localglobalindex",3],["vmglobaldefinition",3]]]],[11,"global_ptr","","Return the indexed `VMGlobalDefinition`.",51,[[["localglobalindex",3]],[["vmglobaldefinition",3],["nonnull",3]]]],[11,"globals_ptr","","Return a pointer to the `VMGlobalDefinition`s.",51,[[]]],[11,"builtin_functions_ptr","","Return a pointer to the `VMBuiltinFunctionsArray`.",51,[[]]],[11,"vmctx","","Return a reference to the vmctx used by compiled wasm code.",51,[[],["vmcontext",3]]],[11,"vmctx_ptr","","Return a raw pointer to the vmctx used by compiled wasm…",51,[[]]],[11,"host_state","","Return a reference to the custom state attached to this…",51,[[],["any",8]]],[11,"invoke_start_function","","Invoke the WebAssembly start function of the instance, if…",51,[[],[["trap",4],["result",4]]]],[11,"vmctx_offset","","Return the offset from the vmctx pointer to its containing…",51,[[]]],[11,"table_index","","Return the table index for the given `VMTableDefinition`.",51,[[["vmtabledefinition",3]],["localtableindex",3]]],[11,"memory_index","","Return the memory index for the given `VMMemoryDefinition`.",51,[[["vmmemorydefinition",3]],["localmemoryindex",3]]],[11,"memory_grow","","Grow memory by the specified amount of pages.",51,[[["localmemoryindex",3]],[["memoryerror",4],["result",4],["pages",3]]]],[11,"imported_memory_grow","","Grow imported memory by the specified amount of pages.",51,[[["memoryindex",3]],[["memoryerror",4],["result",4],["pages",3]]]],[11,"memory_size","","Returns the number of allocated wasm pages.",51,[[["localmemoryindex",3]],["pages",3]]],[11,"imported_memory_size","","Returns the number of allocated wasm pages in an imported…",51,[[["memoryindex",3]],["pages",3]]],[11,"table_grow","","Grow table by the specified amount of elements.",51,[[["localtableindex",3]],["option",4]]],[11,"table_get","","Get table element by index.",51,[[["localtableindex",3]],[["option",4],["vmcallercheckedanyfunc",3]]]],[11,"table_set","","Set table element by index.",51,[[["localtableindex",3],["vmcallercheckedanyfunc",3]],[["trap",4],["result",4]]]],[11,"get_caller_checked_anyfunc","","Get a `VMCallerCheckedAnyfunc` for the given…",51,[[["functionindex",3]],["vmcallercheckedanyfunc",3]]],[11,"table_init","","The `table.init` operation: initializes a portion of a…",51,[[["tableindex",3],["elemindex",3]],[["trap",4],["result",4]]]],[11,"elem_drop","","Drop an element.",51,[[["elemindex",3]]]],[11,"local_memory_copy","","Do a `memory.copy` for a locally defined memory.",51,[[["localmemoryindex",3]],[["trap",4],["result",4]]]],[11,"imported_memory_copy","","Perform a `memory.copy` on an imported memory.",51,[[["memoryindex",3]],[["trap",4],["result",4]]]],[11,"local_memory_fill","","Perform the `memory.fill` operation on a locally defined…",51,[[["localmemoryindex",3]],[["trap",4],["result",4]]]],[11,"imported_memory_fill","","Perform the `memory.fill` operation on an imported memory.",51,[[["memoryindex",3]],[["trap",4],["result",4]]]],[11,"memory_init","","Performs the `memory.init` operation.",51,[[["dataindex",3],["memoryindex",3]],[["trap",4],["result",4]]]],[11,"data_drop","","Drop the given data segment, truncating its length to zero.",51,[[["dataindex",3]]]],[11,"get_table","","Get a table by index regardless of whether it is…",51,[[["tableindex",3]],["table",8]]],[11,"get_local_table","","Get a locally-defined table.",51,[[["localtableindex",3]],["table",8]]],[11,"get_foreign_table","","Get an imported, foreign table.",51,[[["tableindex",3]],["table",8]]],[11,"new","wasmer_vm","Create a new `InstanceHandle` pointing at a new…",7,[[["box",3],["functionbodyptr",3],["boxedslice",3],["arc",3],["arc",3],["localtableindex",3],["imports",3],["vmsharedsignatureindex",3],["moduleinfo",3],["instanceallocator",3],["any",8],["functionindex",3],["importfunctionenv",4],["localglobalindex",3],["boxedslice",3],["arc",3],["localfunctionindex",3],["vmtrampoline",6],["localmemoryindex",3],["boxedslice",3],["boxedslice",3],["boxedslice",3],["boxedslice",3],["boxedslice",3],["arc",3],["signatureindex",3]],[["result",4],["trap",4]]]],[11,"instance","","Return a reference to the contained `Instance`.",7,[[],["instanceref",3]]],[11,"finish_instantiation","","Finishes the instantiation process started by…",7,[[],[["trap",4],["result",4]]]],[11,"vmctx","","Return a reference to the vmctx used by compiled wasm code.",7,[[],["vmcontext",3]]],[11,"vmctx_ptr","","Return a raw pointer to the vmctx used by compiled wasm…",7,[[]]],[11,"vmoffsets","","Return a reference to the `VMOffsets` to get offsets in…",7,[[],["vmoffsets",3]]],[11,"module","","Return a reference-counting pointer to a module.",7,[[],["arc",3]]],[11,"module_ref","","Return a reference to a module.",7,[[],["moduleinfo",3]]],[11,"lookup","","Lookup an export with the given name.",7,[[],[["option",4],["vmexport",4]]]],[11,"lookup_by_declaration","","Lookup an export with the given export declaration.",7,[[["exportindex",4]],["vmexport",4]]],[11,"exports","","Return an iterator over the exports of this instance.",7,[[],[["string",3],["exportindex",4],["iter",3]]]],[11,"host_state","","Return a reference to the custom state attached to this…",7,[[],["any",8]]],[11,"memory_index","","Return the memory index for the given `VMMemoryDefinition`…",7,[[["vmmemorydefinition",3]],["localmemoryindex",3]]],[11,"memory_grow","","Grow memory in this instance by the specified amount of…",7,[[["localmemoryindex",3]],[["memoryerror",4],["result",4],["pages",3]]]],[11,"table_index","","Return the table index for the given `VMTableDefinition`…",7,[[["vmtabledefinition",3]],["localtableindex",3]]],[11,"table_grow","","Grow table in this instance by the specified amount of…",7,[[["localtableindex",3]],["option",4]]],[11,"table_get","","Get table element reference.",7,[[["localtableindex",3]],[["option",4],["vmcallercheckedanyfunc",3]]]],[11,"table_set","","Set table element reference.",7,[[["localtableindex",3],["vmcallercheckedanyfunc",3]],[["trap",4],["result",4]]]],[11,"get_local_table","","Get a table defined locally within this module.",7,[[["localtableindex",3]],["table",8]]],[11,"initialize_host_envs","","Initializes the host environments.",7,[[],[["sized",8],["result",4]]]],[11,"set_signal_handler","","Set a custom signal handler",7,[[]]],[0,"memory","","Memory management for linear memories.",null,null],[3,"LinearMemory","wasmer_vm::memory","A linear memory instance.",null,null],[12,"mmap","","",8,null],[12,"maximum","","",8,null],[12,"memory","","The WebAssembly linear memory description.",8,null],[12,"style","","Our chosen implementation style.",8,null],[12,"offset_guard_size","","",8,null],[12,"vm_memory_definition","","The owned memory definition used by the generated code",8,null],[12,"needs_signal_handlers","","",8,null],[3,"WasmMmap","","",null,null],[12,"alloc","","",53,null],[12,"size","","",53,null],[4,"MemoryError","","Error type describing things that can go wrong when…",null,null],[13,"Region","","Low level error with mmap.",37,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to exceed…",37,null],[12,"current","wasmer_vm::memory::MemoryError","The current size in pages.",38,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",38,null],[13,"InvalidMemory","wasmer_vm::memory","The operation would cause the size of the memory size…",37,null],[12,"reason","wasmer_vm::memory::MemoryError","The reason why the provided memory is invalid.",39,null],[13,"MinimumMemoryTooLarge","wasmer_vm::memory","Caller asked for more minimum memory than we can give them.",37,null],[12,"min_requested","wasmer_vm::memory::MemoryError","The number of pages requested as the minimum amount of…",40,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",40,null],[13,"MaximumMemoryTooLarge","wasmer_vm::memory","Caller asked for a maximum memory greater than we can give…",37,null],[12,"max_requested","wasmer_vm::memory::MemoryError","The number of pages requested as the maximum amount of…",41,null],[12,"max_allowed","","The number of pages requested as the maximum amount of…",41,null],[13,"Generic","wasmer_vm::memory","A user defined error value, used for error cases not…",37,null],[4,"MemoryStyle","","Implementation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",42,null],[12,"offset_guard_size","wasmer_vm::memory::MemoryStyle","Our chosen offset-guard size.",43,null],[13,"Static","wasmer_vm::memory","Address space is allocated up front.",42,null],[12,"bound","wasmer_vm::memory::MemoryStyle","The number of mapped and unmapped pages.",44,null],[12,"offset_guard_size","","Our chosen offset-guard size.",44,null],[4,"VMMemoryDefinitionOwnership","wasmer_vm::memory","A type to help manage who is responsible for the backing…",null,null],[13,"VMOwned","","The `VMMemoryDefinition` is owned by the `Instance` and we…",54,null],[13,"HostOwned","","The `VMMemoryDefinition` is owned by the host and we…",54,null],[8,"Memory","","Trait for implementing Wasm Memory used by Wasmer.",null,null],[10,"ty","","Returns the memory type for this memory.",55,[[],["memorytype",3]]],[10,"style","","Returns the memory style for this memory.",55,[[],["memorystyle",4]]],[10,"size","","Returns the number of allocated wasm pages.",55,[[],["pages",3]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",55,[[["pages",3]],[["memoryerror",4],["result",4],["pages",3]]]],[10,"vmmemory","","Return a [`VMMemoryDefinition`] for exposing the memory to…",55,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[11,"offset_guard_size","wasmer_vm","Returns the offset-guard size",42,[[]]],[11,"new","","Create a new linear memory instance with specified minimum…",8,[[["memorytype",3],["memorystyle",4]],[["result",4],["memoryerror",4]]]],[11,"from_definition","","Create a new linear memory instance with specified minimum…",8,[[["nonnull",3],["memorytype",3],["memorystyle",4],["vmmemorydefinition",3]],[["result",4],["memoryerror",4]]]],[11,"new_internal","","Build a `LinearMemory` with either self-owned or VM owned…",8,[[["nonnull",3],["memorytype",3],["option",4],["memorystyle",4]],[["result",4],["memoryerror",4]]]],[11,"get_vm_memory_definition","","Get the `VMMemoryDefinition`.",8,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[0,"mmap","","Low-level abstraction for allocating and managing…",null,null],[3,"Mmap","wasmer_vm::mmap","A simple struct consisting of a page-aligned pointer to…",null,null],[12,"ptr","","",9,null],[12,"len","","",9,null],[5,"round_up_to_page_size","","Round `size` up to the nearest multiple of `page_size`.",null,[[]]],[5,"_assert","","",null,[[]]],[11,"new","wasmer_vm","Construct a new empty instance of `Mmap`.",9,[[]]],[11,"with_at_least","","Create a new `Mmap` pointing to at least `size` bytes of…",9,[[],[["string",3],["result",4]]]],[11,"accessible_reserved","","Create a new `Mmap` pointing to `accessible_size` bytes of…",9,[[],[["string",3],["result",4]]]],[11,"make_accessible","","Make the memory starting at `start` and extending for…",9,[[],[["result",4],["string",3]]]],[11,"as_slice","","Return the allocated memory as a slice of u8.",9,[[]]],[11,"as_mut_slice","","Return the allocated memory as a mutable slice of u8.",9,[[]]],[11,"as_ptr","","Return the allocated memory as a pointer to u8.",9,[[]]],[11,"as_mut_ptr","","Return the allocated memory as a mutable pointer to u8.",9,[[]]],[11,"len","","Return the length of the allocated memory.",9,[[]]],[11,"is_empty","","Return whether any memory has been allocated.",9,[[]]],[0,"module","","Data structure for representing WebAssembly modules in a…",null,null],[3,"ModuleId","wasmer_vm::module","",null,null],[12,"id","","",56,null],[3,"ModuleInfo","","A translated WebAssembly module, excluding the function…",null,null],[12,"id","","A unique identifier (within this process) for this module.",12,null],[12,"name","","The name of this wasm module, often found in the wasm file.",12,null],[12,"imports","","Imported entities with the (module, field,…",12,null],[12,"exports","","Exported entities.",12,null],[12,"start_function","","The module \\\"start\\\" function, if present.",12,null],[12,"table_initializers","","WebAssembly table initializers.",12,null],[12,"passive_elements","","WebAssembly passive elements.",12,null],[12,"passive_data","","WebAssembly passive data segments.",12,null],[12,"global_initializers","","WebAssembly global initializers.",12,null],[12,"function_names","","WebAssembly function names.",12,null],[12,"signatures","","WebAssembly function signatures.",12,null],[12,"functions","","WebAssembly functions (imported and local).",12,null],[12,"tables","","WebAssembly tables (imported and local).",12,null],[12,"memories","","WebAssembly linear memories (imported and local).",12,null],[12,"globals","","WebAssembly global variables (imported and local).",12,null],[12,"custom_sections","","Custom sections in the module.",12,null],[12,"custom_sections_data","","The data for each CustomSection in the module.",12,null],[12,"num_imported_functions","","Number of imported functions in the module.",12,null],[12,"num_imported_tables","","Number of imported tables in the module.",12,null],[12,"num_imported_memories","","Number of imported memories in the module.",12,null],[12,"num_imported_globals","","Number of imported globals in the module.",12,null],[3,"ExportsIterator","","This iterator allows us to iterate over the exports and…",null,null],[12,"iter","","",10,null],[12,"size","","",10,null],[3,"ImportsIterator","","This iterator allows us to iterate over the imports and…",null,null],[12,"iter","","",11,null],[12,"size","","",11,null],[11,"id","","",56,[[],["string",3]]],[11,"new","wasmer_vm","Allocates the module data structures.",12,[[]]],[11,"get_passive_element","","Get the given passive element, if it exists.",12,[[["elemindex",3]],["option",4]]],[11,"exported_signatures","","Get the exported signatures of the module",12,[[],[["vec",3],["functiontype",3]]]],[11,"exports","","Get the export types of the module",12,[[],["exportsiterator",3]]],[11,"imports","","Get the export types of the module",12,[[],["importsiterator",3]]],[11,"custom_sections","","Get the custom sections of the module given a `name`.",12,[[]]],[11,"func_index","","Convert a `LocalFunctionIndex` into a `FunctionIndex`.",12,[[["localfunctionindex",3]],["functionindex",3]]],[11,"local_func_index","","Convert a `FunctionIndex` into a `LocalFunctionIndex`.…",12,[[["functionindex",3]],[["localfunctionindex",3],["option",4]]]],[11,"is_imported_function","","Test whether the given function index is for an imported…",12,[[["functionindex",3]]]],[11,"table_index","","Convert a `LocalTableIndex` into a `TableIndex`.",12,[[["localtableindex",3]],["tableindex",3]]],[11,"local_table_index","","Convert a `TableIndex` into a `LocalTableIndex`. Returns…",12,[[["tableindex",3]],[["localtableindex",3],["option",4]]]],[11,"is_imported_table","","Test whether the given table index is for an imported table.",12,[[["tableindex",3]]]],[11,"memory_index","","Convert a `LocalMemoryIndex` into a `MemoryIndex`.",12,[[["localmemoryindex",3]],["memoryindex",3]]],[11,"local_memory_index","","Convert a `MemoryIndex` into a `LocalMemoryIndex`. Returns…",12,[[["memoryindex",3]],[["localmemoryindex",3],["option",4]]]],[11,"is_imported_memory","","Test whether the given memory index is for an imported…",12,[[["memoryindex",3]]]],[11,"global_index","","Convert a `LocalGlobalIndex` into a `GlobalIndex`.",12,[[["localglobalindex",3]],["globalindex",3]]],[11,"local_global_index","","Convert a `GlobalIndex` into a `LocalGlobalIndex`. Returns…",12,[[["globalindex",3]],[["option",4],["localglobalindex",3]]]],[11,"is_imported_global","","Test whether the given global index is for an imported…",12,[[["globalindex",3]]]],[11,"name","","Get the Module name",12,[[],["string",3]]],[11,"imported_function_types","","Get the imported function types of the module.",12,[[]]],[11,"functions","","Get only the functions",10,[[]]],[11,"memories","","Get only the memories",10,[[]]],[11,"tables","","Get only the tables",10,[[]]],[11,"globals","","Get only the globals",10,[[]]],[11,"functions","","Get only the functions",11,[[]]],[11,"memories","","Get only the memories",11,[[]]],[11,"tables","","Get only the tables",11,[[]]],[11,"globals","","Get only the globals",11,[[]]],[0,"probestack","","This section defines the `PROBESTACK` intrinsic which is…",null,null],[5,"__rust_probestack","wasmer_vm::probestack","",null,null],[7,"PROBESTACK","","The probestack based on the Rust probestack",null,null],[0,"sig_registry","wasmer_vm","Implement a registry of function signatures, for fast…",null,null],[3,"SignatureRegistry","wasmer_vm::sig_registry","WebAssembly requires that the caller and callee signatures…",null,null],[12,"inner","","",13,null],[3,"Inner","","",null,null],[12,"signature2index","","",57,null],[12,"index2signature","","",57,null],[11,"new","wasmer_vm","Create a new `SignatureRegistry`.",13,[[]]],[11,"register","","Register a signature and return its unique index.",13,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"lookup","","Looks up a shared signature index within this registry.",13,[[["vmsharedsignatureindex",3]],[["option",4],["functiontype",3]]]],[0,"table","","Memory management for tables.",null,null],[3,"LinearTable","wasmer_vm::table","A table instance.",null,null],[12,"vec","","",14,null],[12,"maximum","","",14,null],[12,"table","","The WebAssembly table description.",14,null],[12,"style","","Our chosen implementation style.",14,null],[12,"vm_table_definition","","",14,null],[4,"TableStyle","","Implementation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the…",45,null],[4,"VMTableDefinitionOwnership","","A type to help manage who is responsible for the backing…",null,null],[13,"VMOwned","","The `VMTableDefinition` is owned by the `Instance` and we…",58,null],[13,"HostOwned","","The `VMTableDefinition` is owned by the host and we should…",58,null],[8,"Table","","Trait for implementing the interface of a Wasm table.",null,null],[10,"style","","Returns the style for this Table.",59,[[],["tablestyle",4]]],[10,"ty","","Returns the type for this Table.",59,[[],["tabletype",3]]],[10,"size","","Returns the number of allocated elements.",59,[[]]],[10,"grow","","Grow table by the specified amount of elements.",59,[[],["option",4]]],[10,"get","","Get reference to the specified element.",59,[[],[["option",4],["vmcallercheckedanyfunc",3]]]],[10,"set","","Set reference to the specified element.",59,[[["vmcallercheckedanyfunc",3]],[["trap",4],["result",4]]]],[10,"vmtable","","Return a `VMTableDefinition` for exposing the table to…",59,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"copy","","Copy `len` elements from `src_table[src_index..]` into…",59,[[["table",8]],[["trap",4],["result",4]]]],[11,"new","wasmer_vm","Create a new linear table instance with specified minimum…",14,[[["tabletype",3],["tablestyle",4]],[["string",3],["result",4]]]],[11,"from_definition","","Create a new linear table instance with specified minimum…",14,[[["vmtabledefinition",3],["nonnull",3],["tabletype",3],["tablestyle",4]],[["string",3],["result",4]]]],[11,"new_inner","","Create a new `LinearTable` with either self-owned or VM…",14,[[["option",4],["nonnull",3],["tabletype",3],["tablestyle",4]],[["string",3],["result",4]]]],[11,"get_vm_table_definition","","Get the `VMTableDefinition`.",14,[[],[["vmtabledefinition",3],["nonnull",3]]]],[0,"trap","","This is the module that facilitates the usage of Traps in…",null,null],[0,"trapcode","wasmer_vm::trap","Trap codes describing the reason for a trap.",null,null],[4,"TrapCode","wasmer_vm::trap::trapcode","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",46,null],[13,"HeapSetterOutOfBounds","","Memory data doesn\'t fit the memory size.",46,null],[13,"HeapAccessOutOfBounds","","A `heap_addr` instruction detected an out-of-bounds error.",46,null],[13,"HeapMisaligned","","A `heap_addr` instruction was misaligned.",46,null],[13,"TableSetterOutOfBounds","","Table Elements doesn\'t fit the table size.",46,null],[13,"TableAccessOutOfBounds","","A `table_addr` instruction detected an out-of-bounds error.",46,null],[13,"OutOfBounds","","Other bounds checking error.",46,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",46,null],[13,"BadSignature","","Signature mismatch on indirect call.",46,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",46,null],[13,"IntegerDivisionByZero","","An integer division by zero.",46,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",46,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",46,null],[13,"Interrupt","","Execution has potentially run too long and may be…",46,null],[13,"UnalignedAtomic","","An atomic memory access was attempted with an unaligned…",46,null],[13,"VMOutOfMemory","","A trap indicating that the runtime was unable to allocate…",46,null],[11,"message","wasmer_vm","Gets the message for this trap code",46,[[]]],[0,"traphandlers","wasmer_vm::trap","WebAssembly trap handling, which is built on top of the…",null,null],[3,"CallThreadState","wasmer_vm::trap::traphandlers","Temporary state stored on the stack which is registered in…",null,null],[12,"unwind","","",60,null],[12,"jmp_buf","","",60,null],[12,"reset_guard_page","","",60,null],[12,"prev","","",60,null],[12,"vmctx","","",60,null],[12,"handling_trap","","",60,null],[4,"Trap","","Stores trace message with backtrace.",null,null],[13,"User","","A user-raised trap through `raise_user_trap`.",47,null],[13,"Wasm","","A trap raised from machine code generated from Wasm",47,null],[12,"pc","wasmer_vm::trap::traphandlers::Trap","The program counter in generated code where this trap…",48,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",48,null],[12,"signal_trap","","Optional trapcode associated to the signal that caused the…",48,null],[13,"Runtime","wasmer_vm::trap::traphandlers","A trap raised manually from the Wasmer VM",47,null],[12,"trap_code","wasmer_vm::trap::traphandlers::Trap","Code of the trap.",49,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",49,null],[4,"UnwindReason","wasmer_vm::trap::traphandlers","",null,null],[13,"None","","",61,null],[13,"Panic","","",61,null],[13,"UserTrap","","",61,null],[13,"LibTrap","","",61,null],[13,"RuntimeTrap","","",61,null],[12,"backtrace","wasmer_vm::trap::traphandlers::UnwindReason","",62,null],[12,"pc","","",62,null],[12,"signal_trap","","",62,null],[5,"platform_init","wasmer_vm::trap::traphandlers","",null,[[]]],[5,"thread_stack","","",null,[[]]],[5,"trap_handler","","",null,[[["c_int",6]]]],[5,"get_pc","","",null,[[]]],[5,"init_traps","","This function performs the low-overhead signal handler…",null,[[]]],[5,"real_init","","",null,[[]]],[5,"raise_user_trap","","Raises a user-defined trap immediately.",null,[[["box",3],["error",8]]]],[5,"raise_lib_trap","","Raises a trap from inside library code immediately.",null,[[["trap",4]]]],[5,"resume_panic","","Carries a Rust panic across wasm code and resumes the…",null,[[["box",3],["any",8]]]],[5,"reset_guard_page","","",null,[[]]],[5,"wasmer_call_trampoline","","Call the wasm function pointed to by `callee`.",null,[[["vmfunctionenvironment",19],["vmtrampoline",6]],[["trap",4],["result",4]]]],[5,"catch_traps","","Catches any wasm traps that happen within the execution of…",null,[[["vmfunctionenvironment",19]],[["trap",4],["result",4]]]],[5,"catch_traps_with_result","","Catches any wasm traps that happen within the execution of…",null,[[["vmfunctionenvironment",19]],[["result",4],["trap",4]]]],[5,"setup_unix_sigaltstack","","A module for registering a custom alternate signal stack…",null,[[],[["trap",4],["result",4]]]],[5,"RegisterSetjmp","","",null,null],[5,"Unwind","","",null,null],[0,"tls","","",null,null],[5,"set","wasmer_vm::trap::traphandlers::tls","Configures thread local state such that for the duration…",null,[[["callthreadstate",3]]]],[5,"with","","Returns the last pointer configured with `set` above.…",null,[[]]],[17,"PTR","","",null,null],[7,"PREV_SIGSEGV","wasmer_vm::trap::traphandlers","",null,null],[7,"PREV_SIGBUS","","",null,null],[7,"PREV_SIGILL","","",null,null],[7,"PREV_SIGFPE","","",null,null],[11,"new_from_wasm","wasmer_vm","Construct a new VM `Trap` with the given the program…",47,[[["option",4],["backtrace",3],["trapcode",4]]]],[11,"new_from_runtime","","Construct a new runtime `Trap` with the given trap code.…",47,[[["trapcode",4]]]],[11,"new_from_user","","Construct a new Out of Memory (OOM) `Trap`.",47,[[["box",3],["error",8]]]],[11,"new","wasmer_vm::trap::traphandlers","",60,[[["vmfunctionenvironment",19]]]],[11,"with","","",60,[[],[["trap",4],["result",4]]]],[11,"any_instance","","",60,[[]]],[11,"unwind_with","","",60,[[["unwindreason",4]]]],[11,"handle_trap","","Trap handler using our thread-local state.",60,[[["option",4],["trapcode",4]]]],[0,"vmcontext","wasmer_vm","This file declares `VMContext` and several related structs…",null,null],[3,"VMFunctionImport","wasmer_vm::vmcontext","An imported function.",null,null],[12,"body","","A pointer to the imported function body.",19,null],[12,"environment","","A pointer to the `VMContext` that owns the function or…",19,null],[3,"VMDynamicFunctionContext","","The `VMDynamicFunctionContext` is the context that dynamic…",null,null],[12,"address","","The address of the inner dynamic function.",17,null],[12,"ctx","","The context that the inner dynamic function will receive.",17,null],[3,"VMFunctionBody","","A placeholder byte-sized type which is just used to…",null,null],[12,"0","","",18,null],[3,"VMTableImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"definition","","A pointer to the imported table description.",26,null],[12,"from","","A pointer to the `Table` that owns the table description.",26,null],[3,"VMMemoryImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"definition","","A pointer to the imported memory description.",23,null],[12,"from","","A pointer to the `Memory` that owns the memory description.",23,null],[3,"VMGlobalImport","","The fields compiled code needs to access to utilize a…",null,null],[12,"definition","","A pointer to the imported global variable description.",21,null],[12,"from","","A pointer to the `Global` that owns the global description.",21,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","The start address which is always valid, even if the…",22,null],[12,"current_length","","The current logical size of this linear memory in bytes.",22,null],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a…",null,null],[12,"base","","Pointer to the table data.",25,null],[12,"current_elements","","The current number of elements in the table.",25,null],[3,"VMGlobalDefinition","","The storage for a WebAssembly global defined within the…",null,null],[12,"storage","","",20,null],[3,"VMSharedSignatureIndex","","An index into the shared signature registry, usable for…",null,null],[12,"0","","",24,null],[3,"VMCallerCheckedAnyfunc","","The VM caller-checked \\\"anyfunc\\\" record, for caller-side…",null,null],[12,"func_ptr","","Function body.",16,null],[12,"type_index","","Function signature id.",16,null],[12,"vmctx","","Function `VMContext` or host env.",16,null],[3,"VMBuiltinFunctionIndex","","An index type for builtin functions.",null,null],[12,"0","","",15,null],[3,"VMBuiltinFunctionsArray","","An array that stores addresses of builtin functions. We…",null,null],[12,"ptrs","","",63,null],[3,"VMContext","","The VM \\\"context\\\", which is pointed to by the `vmctx` arg…",null,null],[19,"VMFunctionEnvironment","","Union representing the first parameter passed when calling…",null,null],[12,"vmctx","","Wasm functions take a pointer to [`VMContext`].",31,null],[12,"host_env","","Host functions can have custom environments.",31,null],[19,"VMGlobalDefinitionStorage","","A typesafe wrapper around the storage for a global…",null,null],[12,"as_i32","","",64,null],[12,"as_u32","","",64,null],[12,"as_f32","","",64,null],[12,"as_i64","","",64,null],[12,"as_u64","","",64,null],[12,"as_f64","","",64,null],[12,"as_u128","","",64,null],[12,"bytes","","",64,null],[4,"VMFunctionKind","","A function kind is a calling convention into and out of…",null,null],[13,"Static","","A static function has the native signature: `extern \\\"C\\\"…",50,null],[13,"Dynamic","","A dynamic function has the native signature: `extern \\\"C\\\"…",50,null],[6,"VMTrampoline","","",null,null],[11,"is_null","wasmer_vm","Check whether the pointer stored is null or not.",31,[[]]],[11,"memory_copy","","Do an unsynchronized, non-atomic `memory.copy` for the…",22,[[],[["trap",4],["result",4]]]],[11,"memory_fill","","Perform the `memory.fill` operation for the memory in an…",22,[[],[["trap",4],["result",4]]]],[11,"new","","Construct a `VMGlobalDefinition`.",20,[[]]],[11,"to_i32","","Return the value as an i32.",20,[[]]],[11,"as_i32_mut","","Return a mutable reference to the value as an i32.",20,[[]]],[11,"to_u32","","Return a reference to the value as an u32.",20,[[]]],[11,"as_u32_mut","","Return a mutable reference to the value as an u32.",20,[[]]],[11,"to_i64","","Return a reference to the value as an i64.",20,[[]]],[11,"as_i64_mut","","Return a mutable reference to the value as an i64.",20,[[]]],[11,"to_u64","","Return a reference to the value as an u64.",20,[[]]],[11,"as_u64_mut","","Return a mutable reference to the value as an u64.",20,[[]]],[11,"to_f32","","Return a reference to the value as an f32.",20,[[]]],[11,"as_f32_mut","","Return a mutable reference to the value as an f32.",20,[[]]],[11,"to_f64","","Return a reference to the value as an f64.",20,[[]]],[11,"as_f64_mut","","Return a mutable reference to the value as an f64.",20,[[]]],[11,"to_u128","","Return a reference to the value as an u128.",20,[[]]],[11,"as_u128_mut","","Return a mutable reference to the value as an u128.",20,[[]]],[11,"to_bytes","","Return a reference to the value as bytes.",20,[[]]],[11,"as_bytes_mut","","Return a mutable reference to the value as bytes.",20,[[]]],[11,"new","","Create a new `VMSharedSignatureIndex`.",24,[[]]],[11,"get_memory32_grow_index","","Returns an index for wasm\'s `memory.grow` builtin function.",15,[[]]],[11,"get_imported_memory32_grow_index","","Returns an index for wasm\'s imported `memory.grow` builtin…",15,[[]]],[11,"get_memory32_size_index","","Returns an index for wasm\'s `memory.size` builtin function.",15,[[]]],[11,"get_imported_memory32_size_index","","Returns an index for wasm\'s imported `memory.size` builtin…",15,[[]]],[11,"get_table_copy_index","","Returns an index for wasm\'s `table.copy` when both tables…",15,[[]]],[11,"get_table_init_index","","Returns an index for wasm\'s `table.init`.",15,[[]]],[11,"get_elem_drop_index","","Returns an index for wasm\'s `elem.drop`.",15,[[]]],[11,"get_local_memory_copy_index","","Returns an index for wasm\'s `memory.copy` for locally…",15,[[]]],[11,"get_imported_memory_copy_index","","Returns an index for wasm\'s `memory.copy` for imported…",15,[[]]],[11,"get_memory_fill_index","","Returns an index for wasm\'s `memory.fill` for locally…",15,[[]]],[11,"get_imported_memory_fill_index","","Returns an index for wasm\'s `memory.fill` for imported…",15,[[]]],[11,"get_memory_init_index","","Returns an index for wasm\'s `memory.init` instruction.",15,[[]]],[11,"get_data_drop_index","","Returns an index for wasm\'s `data.drop` instruction.",15,[[]]],[11,"get_raise_trap_index","","Returns an index for wasm\'s `raise_trap` instruction.",15,[[]]],[11,"builtin_functions_total_number","","Returns the total number of builtin functions.",15,[[]]],[11,"index","","Return the index as an u32 number.",15,[[]]],[11,"len","wasmer_vm::vmcontext","",63,[[]]],[11,"initialized","","",63,[[]]],[11,"instance","wasmer_vm","Return a mutable reference to the associated `Instance`.",65,[[],["instance",3]]],[11,"host_state","","Return a reference to the host state associated with this…",65,[[],["any",8]]],[0,"vmoffsets","","Offsets and sizes of various structs in wasmer-vm\'s…",null,null],[3,"VMOffsets","wasmer_vm::vmoffsets","This class computes offsets to fields within `VMContext`…",null,null],[12,"pointer_size","","The size in bytes of a pointer on the target.",28,null],[12,"num_signature_ids","","The number of signature declarations in the module.",28,null],[12,"num_imported_functions","","The number of imported functions in the module.",28,null],[12,"num_imported_tables","","The number of imported tables in the module.",28,null],[12,"num_imported_memories","","The number of imported memories in the module.",28,null],[12,"num_imported_globals","","The number of imported globals in the module.",28,null],[12,"num_local_tables","","The number of defined tables in the module.",28,null],[12,"num_local_memories","","The number of defined memories in the module.",28,null],[12,"num_local_globals","","The number of defined globals in the module.",28,null],[3,"TargetSharedSignatureIndex","","Target specific type for shared signature index.",null,null],[12,"0","","",27,null],[5,"cast_to_u32","","",null,[[]]],[5,"align","","Align an offset used in this module to a specific…",null,[[]]],[11,"new","wasmer_vm","Return a new `VMOffsets` instance, for a given pointer size.",28,[[["moduleinfo",3]]]],[11,"new_for_trampolines","","Return a new `VMOffsets` instance, for a given pointer…",28,[[]]],[11,"vmfunction_import_body","","The offset of the `body` field.",28,[[]]],[11,"vmfunction_import_vmctx","","The offset of the `vmctx` field.",28,[[]]],[11,"size_of_vmfunction_import","","Return the size of `VMFunctionImport`.",28,[[]]],[11,"vmdynamicfunction_import_context_address","","The offset of the `address` field.",28,[[]]],[11,"vmdynamicfunction_import_context_ctx","","The offset of the `ctx` field.",28,[[]]],[11,"size_of_vmdynamicfunction_import_context","","Return the size of `VMDynamicFunctionContext`.",28,[[]]],[11,"size_of_vmfunction_body_ptr","","The size of the `current_elements` field.",28,[[]]],[11,"vmtable_import_definition","","The offset of the `definition` field.",28,[[]]],[11,"vmtable_import_from","","The offset of the `from` field.",28,[[]]],[11,"size_of_vmtable_import","","Return the size of `VMTableImport`.",28,[[]]],[11,"vmtable_definition_base","","The offset of the `base` field.",28,[[]]],[11,"vmtable_definition_current_elements","","The offset of the `current_elements` field.",28,[[]]],[11,"size_of_vmtable_definition_current_elements","","The size of the `current_elements` field.",28,[[]]],[11,"size_of_vmtable_definition","","Return the size of `VMTableDefinition`.",28,[[]]],[11,"vmmemory_import_definition","","The offset of the `from` field.",28,[[]]],[11,"vmmemory_import_from","","The offset of the `from` field.",28,[[]]],[11,"size_of_vmmemory_import","","Return the size of `VMMemoryImport`.",28,[[]]],[11,"vmmemory_definition_base","","The offset of the `base` field.",28,[[]]],[11,"vmmemory_definition_current_length","","The offset of the `current_length` field.",28,[[]]],[11,"size_of_vmmemory_definition_current_length","","The size of the `current_length` field.",28,[[]]],[11,"size_of_vmmemory_definition","","Return the size of `VMMemoryDefinition`.",28,[[]]],[11,"vmglobal_import_definition","","The offset of the `definition` field.",28,[[]]],[11,"vmglobal_import_from","","The offset of the `from` field.",28,[[]]],[11,"size_of_vmglobal_import","","Return the size of `VMGlobalImport`.",28,[[]]],[11,"size_of_vmglobal_local","","Return the size of a pointer to a `VMGlobalDefinition`;",28,[[]]],[11,"size_of_vmshared_signature_index","","Return the size of `VMSharedSignatureIndex`.",28,[[]]],[11,"vmcaller_checked_anyfunc_func_ptr","","The offset of the `func_ptr` field.",28,[[]]],[11,"vmcaller_checked_anyfunc_type_index","","The offset of the `type_index` field.",28,[[]]],[11,"vmcaller_checked_anyfunc_vmctx","","The offset of the `vmctx` field.",28,[[]]],[11,"size_of_vmcaller_checked_anyfunc","","Return the size of `VMCallerCheckedAnyfunc`.",28,[[]]],[11,"vmctx_signature_ids_begin","","The offset of the `signature_ids` array.",28,[[]]],[11,"vmctx_imported_functions_begin","","The offset of the `tables` array.",28,[[]]],[11,"vmctx_imported_tables_begin","","The offset of the `tables` array.",28,[[]]],[11,"vmctx_imported_memories_begin","","The offset of the `memories` array.",28,[[]]],[11,"vmctx_imported_globals_begin","","The offset of the `globals` array.",28,[[]]],[11,"vmctx_tables_begin","","The offset of the `tables` array.",28,[[]]],[11,"vmctx_memories_begin","","The offset of the `memories` array.",28,[[]]],[11,"vmctx_globals_begin","","The offset of the `globals` array.",28,[[]]],[11,"vmctx_builtin_functions_begin","","The offset of the builtin functions array.",28,[[]]],[11,"size_of_vmctx","","Return the size of the `VMContext` allocation.",28,[[]]],[11,"vmctx_vmshared_signature_id","","Return the offset to `VMSharedSignatureIndex` index `index`.",28,[[["signatureindex",3]]]],[11,"vmctx_vmfunction_import","","Return the offset to `VMFunctionImport` index `index`.",28,[[["functionindex",3]]]],[11,"vmctx_vmtable_import","","Return the offset to `VMTableImport` index `index`.",28,[[["tableindex",3]]]],[11,"vmctx_vmmemory_import","","Return the offset to `VMMemoryImport` index `index`.",28,[[["memoryindex",3]]]],[11,"vmctx_vmglobal_import","","Return the offset to `VMGlobalImport` index `index`.",28,[[["globalindex",3]]]],[11,"vmctx_vmtable_definition","","Return the offset to `VMTableDefinition` index `index`.",28,[[["localtableindex",3]]]],[11,"vmctx_vmmemory_definition","","Return the offset to `VMMemoryDefinition` index `index`.",28,[[["localmemoryindex",3]]]],[11,"vmctx_vmglobal_definition","","Return the offset to the `VMGlobalDefinition` index `index`.",28,[[["localglobalindex",3]]]],[11,"vmctx_vmfunction_import_body","","Return the offset to the `body` field in `*const…",28,[[["functionindex",3]]]],[11,"vmctx_vmfunction_import_vmctx","","Return the offset to the `vmctx` field in `*const…",28,[[["functionindex",3]]]],[11,"vmctx_vmtable_import_definition","","Return the offset to the `definition` field in…",28,[[["tableindex",3]]]],[11,"vmctx_vmtable_definition_base","","Return the offset to the `base` field in…",28,[[["localtableindex",3]]]],[11,"vmctx_vmtable_definition_current_elements","","Return the offset to the `current_elements` field in…",28,[[["localtableindex",3]]]],[11,"vmctx_vmmemory_import_definition","","Return the offset to the `from` field in `VMMemoryImport`…",28,[[["memoryindex",3]]]],[11,"vmctx_vmmemory_import_from","","Return the offset to the `vmctx` field in `VMMemoryImport`…",28,[[["memoryindex",3]]]],[11,"vmctx_vmmemory_definition_base","","Return the offset to the `base` field in…",28,[[["localmemoryindex",3]]]],[11,"vmctx_vmmemory_definition_current_length","","Return the offset to the `current_length` field in…",28,[[["localmemoryindex",3]]]],[11,"vmctx_vmglobal_import_definition","","Return the offset to the `from` field in `VMGlobalImport`…",28,[[["globalindex",3]]]],[11,"vmctx_builtin_function","","Return the offset to builtin function in…",28,[[["vmbuiltinfunctionindex",3]]]],[11,"new","","Constructs `TargetSharedSignatureIndex`.",27,[[]]],[11,"index","","Returns index value.",27,[[]]],[0,"libcalls","","Runtime library calls.",null,null],[4,"LibCall","wasmer_vm::libcalls","The name of a runtime library routine.",null,null],[13,"CeilF32","","ceil.f32",66,null],[13,"CeilF64","","ceil.f64",66,null],[13,"FloorF32","","floor.f32",66,null],[13,"FloorF64","","floor.f64",66,null],[13,"NearestF32","","nearest.f32",66,null],[13,"NearestF64","","nearest.f64",66,null],[13,"Probestack","","probe for stack overflow. These are emitted for functions…",66,null],[13,"RaiseTrap","","A custom trap",66,null],[13,"TruncF32","","trunc.f32",66,null],[13,"TruncF64","","frunc.f64",66,null],[5,"wasmer_f32_ceil","","Implementation of f32.ceil",null,[[]]],[5,"wasmer_f32_floor","","Implementation of f32.floor",null,[[]]],[5,"wasmer_f32_trunc","","Implementation of f32.trunc",null,[[]]],[5,"wasmer_f32_nearest","","Implementation of f32.nearest",null,[[]]],[5,"wasmer_f64_ceil","","Implementation of f64.ceil",null,[[]]],[5,"wasmer_f64_floor","","Implementation of f64.floor",null,[[]]],[5,"wasmer_f64_trunc","","Implementation of f64.trunc",null,[[]]],[5,"wasmer_f64_nearest","","Implementation of f64.nearest",null,[[]]],[5,"wasmer_memory32_grow","","Implementation of memory.grow for locally-defined 32-bit…",null,[[]]],[5,"wasmer_imported_memory32_grow","","Implementation of memory.grow for imported 32-bit memories.",null,[[]]],[5,"wasmer_memory32_size","","Implementation of memory.size for locally-defined 32-bit…",null,[[]]],[5,"wasmer_imported_memory32_size","","Implementation of memory.size for imported 32-bit memories.",null,[[]]],[5,"wasmer_table_copy","","Implementation of `table.copy`.",null,[[]]],[5,"wasmer_table_init","","Implementation of `table.init`.",null,[[]]],[5,"wasmer_elem_drop","","Implementation of `elem.drop`.",null,[[]]],[5,"wasmer_local_memory_copy","","Implementation of `memory.copy` for locally defined…",null,[[]]],[5,"wasmer_imported_memory_copy","","Implementation of `memory.copy` for imported memories.",null,[[]]],[5,"wasmer_memory_fill","","Implementation of `memory.fill` for locally defined…",null,[[]]],[5,"wasmer_imported_memory_fill","","Implementation of `memory.fill` for imported memories.",null,[[]]],[5,"wasmer_memory_init","","Implementation of `memory.init`.",null,[[]]],[5,"wasmer_data_drop","","Implementation of `data.drop`.",null,[[]]],[5,"wasmer_raise_trap","","Implementation for raising a trap",null,[[["trapcode",4]]]],[7,"wasmer_probestack","","Probestack check",null,null],[11,"function_pointer","","The function pointer to a libcall",66,[[]]],[11,"to_function_name","","Return the function name associated to the libcall.",66,[[]]],[6,"ImportInitializerFuncPtr","wasmer_vm","The function pointer to call with data and an [`Instance`]…",null,null],[6,"VMTrampoline","","",null,null],[7,"PROBESTACK","","The probestack based on the Rust probestack",null,null],[17,"VERSION","","Version number of this crate.",null,null],[8,"Memory","","Trait for implementing Wasm Memory used by Wasmer.",null,null],[10,"ty","","Returns the memory type for this memory.",55,[[],["memorytype",3]]],[10,"style","","Returns the memory style for this memory.",55,[[],["memorystyle",4]]],[10,"size","","Returns the number of allocated wasm pages.",55,[[],["pages",3]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",55,[[["pages",3]],[["memoryerror",4],["result",4],["pages",3]]]],[10,"vmmemory","","Return a [`VMMemoryDefinition`] for exposing the memory to…",55,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[8,"Table","","Trait for implementing the interface of a Wasm table.",null,null],[10,"style","","Returns the style for this Table.",59,[[],["tablestyle",4]]],[10,"ty","","Returns the type for this Table.",59,[[],["tabletype",3]]],[10,"size","","Returns the number of allocated elements.",59,[[]]],[10,"grow","","Grow table by the specified amount of elements.",59,[[],["option",4]]],[10,"get","","Get reference to the specified element.",59,[[],[["option",4],["vmcallercheckedanyfunc",3]]]],[10,"set","","Set reference to the specified element.",59,[[["vmcallercheckedanyfunc",3]],[["trap",4],["result",4]]]],[10,"vmtable","","Return a `VMTableDefinition` for exposing the table to…",59,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"copy","wasmer_vm::table","Copy `len` elements from `src_table[src_index..]` into…",59,[[["table",8]],[["trap",4],["result",4]]]],[11,"from","wasmer_vm","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"equivalent","","",42,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"equivalent","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","wasmer_vm::instance","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","wasmer_vm::instance::ref","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","wasmer_vm::memory","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","wasmer_vm::module","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","wasmer_vm::sig_registry","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","wasmer_vm::table","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","wasmer_vm::trap::traphandlers","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","wasmer_vm::vmcontext","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","wasmer_vm::libcalls","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"equivalent","","",66,[[]]],[11,"ty","wasmer_vm","Returns the type for this memory.",8,[[],["memorytype",3]]],[11,"style","","Returns the memory style for this memory.",8,[[],["memorystyle",4]]],[11,"size","","Returns the number of allocated wasm pages.",8,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of wasm pages.",8,[[["pages",3]],[["memoryerror",4],["result",4],["pages",3]]]],[11,"vmmemory","","Return a `VMMemoryDefinition` for exposing the memory to…",8,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[11,"ty","","Returns the type for this Table.",14,[[],["tabletype",3]]],[11,"style","","Returns the style for this Table.",14,[[],["tablestyle",4]]],[11,"size","","Returns the number of allocated elements.",14,[[]]],[11,"grow","","Grow table by the specified amount of elements.",14,[[],["option",4]]],[11,"get","","Get reference to the specified element.",14,[[],[["option",4],["vmcallercheckedanyfunc",3]]]],[11,"set","","Set reference to the specified element.",14,[[["vmcallercheckedanyfunc",3]],[["trap",4],["result",4]]]],[11,"vmtable","","Return a `VMTableDefinition` for exposing the table to…",14,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"drop","","",6,[[]]],[11,"drop","wasmer_vm::instance::ref","Drop the `InstanceRef`.",52,[[]]],[11,"drop","wasmer_vm","",35,[[]]],[11,"drop","","",9,[[]]],[11,"drop","wasmer_vm::trap::traphandlers","",60,[[]]],[11,"from","wasmer_vm","",32,[[["vmexportfunction",3]]]],[11,"from","","",32,[[["vmexporttable",3]]]],[11,"from","","",32,[[["vmexportmemory",3]]]],[11,"from","","",32,[[["vmexportglobal",3]]]],[11,"len","","",10,[[]]],[11,"len","","",11,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"next","","",11,[[],["option",4]]],[11,"clone","","",0,[[],["vmexportfunction",3]]],[11,"clone","","",1,[[],["vmexporttable",3]]],[11,"clone","","",2,[[],["vmexportmemory",3]]],[11,"clone","","",3,[[],["vmexportglobal",3]]],[11,"clone","","",33,[[],["globalerror",4]]],[11,"clone","","",5,[[],["imports",3]]],[11,"clone","wasmer_vm::instance::ref","Makes a clone of `InstanceRef`.",52,[[]]],[11,"clone","wasmer_vm","",35,[[]]],[11,"clone","","",37,[[],["memoryerror",4]]],[11,"clone","","",42,[[],["memorystyle",4]]],[11,"clone","wasmer_vm::module","",56,[[],["moduleid",3]]],[11,"clone","wasmer_vm","",12,[[],["moduleinfo",3]]],[11,"clone","","",45,[[],["tablestyle",4]]],[11,"clone","","",46,[[],["trapcode",4]]],[11,"clone","","",31,[[],["vmfunctionenvironment",19]]],[11,"clone","","",19,[[],["vmfunctionimport",3]]],[11,"clone","","",17,[[]]],[11,"clone","","",50,[[],["vmfunctionkind",4]]],[11,"clone","","",26,[[],["vmtableimport",3]]],[11,"clone","","",23,[[],["vmmemoryimport",3]]],[11,"clone","","",21,[[],["vmglobalimport",3]]],[11,"clone","","",22,[[],["vmmemorydefinition",3]]],[11,"clone","","",25,[[],["vmtabledefinition",3]]],[11,"clone","wasmer_vm::vmcontext","",64,[[],["vmglobaldefinitionstorage",19]]],[11,"clone","wasmer_vm","",20,[[],["vmglobaldefinition",3]]],[11,"clone","","",24,[[],["vmsharedsignatureindex",3]]],[11,"clone","","",16,[[],["vmcallercheckedanyfunc",3]]],[11,"clone","","",15,[[],["vmbuiltinfunctionindex",3]]],[11,"clone","","",28,[[],["vmoffsets",3]]],[11,"clone","","",27,[[],["targetsharedsignatureindex",3]]],[11,"clone","wasmer_vm::libcalls","",66,[[],["libcall",4]]],[11,"clone","wasmer_vm","",29,[[],["functionbodyptr",3]]],[11,"clone","","",30,[[],["sectionbodyptr",3]]],[11,"default","wasmer_vm::module","",56,[[]]],[11,"default","wasmer_vm::sig_registry","",57,[[],["inner",3]]],[11,"default","wasmer_vm","",24,[[]]],[11,"default","","",16,[[]]],[11,"eq","","",0,[[["vmexportfunction",3]]]],[11,"ne","","",0,[[["vmexportfunction",3]]]],[11,"eq","","",33,[[["globalerror",4]]]],[11,"ne","","",33,[[["globalerror",4]]]],[11,"eq","wasmer_vm::instance::ref","Two `InstanceRef` are equal if and only if `Self.instance`…",52,[[]]],[11,"eq","wasmer_vm","",7,[[["instancehandle",3]]]],[11,"ne","","",7,[[["instancehandle",3]]]],[11,"eq","","",37,[[["memoryerror",4]]]],[11,"ne","","",37,[[["memoryerror",4]]]],[11,"eq","","",42,[[["memorystyle",4]]]],[11,"ne","","",42,[[["memorystyle",4]]]],[11,"eq","","",46,[[["trapcode",4]]]],[11,"eq","","",31,[[]]],[11,"eq","","",50,[[["vmfunctionkind",4]]]],[11,"eq","","",24,[[["vmsharedsignatureindex",3]]]],[11,"ne","","",24,[[["vmsharedsignatureindex",3]]]],[11,"eq","wasmer_vm::libcalls","",66,[[["libcall",4]]]],[11,"deref","wasmer_vm","",29,[[]]],[11,"deref","","",30,[[]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::instance::ref","",52,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",35,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::instance","",51,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::memory","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",9,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::module","",56,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::sig_registry","",57,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::table","",58,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::vmcontext","",64,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::libcalls","",66,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::libcalls","",66,[[["formatter",3]],["result",6]]],[11,"hash","wasmer_vm","",33,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",24,[[]]],[11,"hash","wasmer_vm::libcalls","",66,[[]]],[11,"from_str","wasmer_vm","",46,[[],["result",4]]],[11,"size_of_val","","",0,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",4,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::instance::ref","",52,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::instance","",51,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm","",35,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",7,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",42,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",8,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::memory","",54,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",53,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm","",9,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::module","",56,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm","",12,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",13,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::sig_registry","",57,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm","",45,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",14,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::table","",58,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm","",46,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",31,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",19,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",50,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",26,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",23,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",21,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",22,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",25,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::vmcontext","",64,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm","",20,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",24,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",16,[[["memoryusagetracker",8]]]],[11,"size_of_val","","",28,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm::libcalls","",66,[[["memoryusagetracker",8]]]],[11,"size_of_val","wasmer_vm","",29,[[["memoryusagetracker",8]]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","wasmer_vm::libcalls","",66,[[],["result",4]]],[11,"serialize","wasmer_vm","",42,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","wasmer_vm::libcalls","",66,[[],["result",4]]]],"p":[[3,"VMExportFunction"],[3,"VMExportTable"],[3,"VMExportMemory"],[3,"VMExportGlobal"],[3,"Global"],[3,"Imports"],[3,"InstanceAllocator"],[3,"InstanceHandle"],[3,"LinearMemory"],[3,"Mmap"],[3,"ExportsIterator"],[3,"ImportsIterator"],[3,"ModuleInfo"],[3,"SignatureRegistry"],[3,"LinearTable"],[3,"VMBuiltinFunctionIndex"],[3,"VMCallerCheckedAnyfunc"],[3,"VMDynamicFunctionContext"],[3,"VMFunctionBody"],[3,"VMFunctionImport"],[3,"VMGlobalDefinition"],[3,"VMGlobalImport"],[3,"VMMemoryDefinition"],[3,"VMMemoryImport"],[3,"VMSharedSignatureIndex"],[3,"VMTableDefinition"],[3,"VMTableImport"],[3,"TargetSharedSignatureIndex"],[3,"VMOffsets"],[3,"FunctionBodyPtr"],[3,"SectionBodyPtr"],[19,"VMFunctionEnvironment"],[4,"VMExport"],[4,"GlobalError"],[13,"IncorrectType"],[4,"ImportFunctionEnv"],[13,"Env"],[4,"MemoryError"],[13,"CouldNotGrow"],[13,"InvalidMemory"],[13,"MinimumMemoryTooLarge"],[13,"MaximumMemoryTooLarge"],[4,"MemoryStyle"],[13,"Dynamic"],[13,"Static"],[4,"TableStyle"],[4,"TrapCode"],[4,"Trap"],[13,"Wasm"],[13,"Runtime"],[4,"VMFunctionKind"],[3,"Instance"],[3,"InstanceRef"],[3,"WasmMmap"],[4,"VMMemoryDefinitionOwnership"],[8,"Memory"],[3,"ModuleId"],[3,"Inner"],[4,"VMTableDefinitionOwnership"],[8,"Table"],[3,"CallThreadState"],[4,"UnwindReason"],[13,"RuntimeTrap"],[3,"VMBuiltinFunctionsArray"],[19,"VMGlobalDefinitionStorage"],[3,"VMContext"],[4,"LibCall"]]},\
"wasmer_wasi":{"doc":"Wasmer\'s WASI implementation","i":[[3,"Fd","wasmer_wasi","",null,null],[12,"rights","","",0,null],[12,"rights_inheriting","","",0,null],[12,"flags","","",0,null],[12,"offset","","",0,null],[12,"open_flags","","Flags that determine how the [`Fd`] can be used.",0,null],[12,"inode","","",0,null],[3,"Pipe","","For piping stdio. Stores all output / input in a…",null,null],[12,"buffer","","",1,null],[3,"Stderr","","A wrapper type around Stderr that implements `WasiFile`…",null,null],[3,"Stdin","","A wrapper type around Stdin that implements `WasiFile` and…",null,null],[3,"Stdout","","A wrapper type around Stdout that implements `WasiFile`…",null,null],[3,"WasiFs","","Warning, modifying these fields directly may cause…",null,null],[12,"preopen_fds","","",2,null],[12,"name_map","","",2,null],[12,"inodes","","",2,null],[12,"fd_map","","",2,null],[12,"next_fd","","",2,null],[12,"inode_counter","","",2,null],[12,"orphan_fds","","for fds still open after the file has been deleted",2,null],[3,"WasiState","","Top level data type containing all* the state with which…",null,null],[12,"fs","","",3,null],[12,"args","","",3,null],[12,"envs","","",3,null],[3,"WasiStateBuilder","","Convenient builder API for configuring WASI via…",null,null],[12,"args","","",4,null],[12,"envs","","",4,null],[12,"preopens","","",4,null],[12,"setup_fs_fn","","",4,null],[12,"stdout_override","","",4,null],[12,"stderr_override","","",4,null],[12,"stdin_override","","",4,null],[3,"WasiEnv","","The environment provided to the WASI imports.",null,null],[12,"state","","Shared state of the WASI system. Manages all the data that…",5,null],[12,"memory","","",5,null],[4,"WasiFsError","","Error type for external users",null,null],[13,"BaseNotDirectory","","The fd given as a base was not a directory so the…",6,null],[13,"NotAFile","","Expected a file but found not a file",6,null],[13,"InvalidFd","","The fd given was not usable",6,null],[13,"AlreadyExists","","File exists",6,null],[13,"IOError","","Something failed when doing IO. These errors can generally…",6,null],[13,"AddressInUse","","The address was in use",6,null],[13,"AddressNotAvailable","","The address could not be found",6,null],[13,"BrokenPipe","","A pipe was closed",6,null],[13,"ConnectionAborted","","The connection was aborted",6,null],[13,"ConnectionRefused","","The connection request was refused",6,null],[13,"ConnectionReset","","The connection was reset",6,null],[13,"Interrupted","","The operation was interrupted before it could finish",6,null],[13,"InvalidData","","Invalid internal data, if the argument data is invalid,…",6,null],[13,"InvalidInput","","The provided data is invalid",6,null],[13,"NotConnected","","Could not perform the operation because there was not an…",6,null],[13,"EntityNotFound","","The requested file or directory could not be found",6,null],[13,"NoDevice","","The requested device couldn\'t be accessed",6,null],[13,"PermissionDenied","","Caller was not allowed to perform this operation",6,null],[13,"TimedOut","","The operation did not complete within the given amount of…",6,null],[13,"UnexpectedEof","","Found EOF when EOF was not expected",6,null],[13,"WouldBlock","","Operation would block, this error lets the caller know…",6,null],[13,"WriteZero","","A call to write returned 0",6,null],[13,"UnknownError","","A WASI error without an external name. If you encounter…",6,null],[4,"WasiStateCreationError","","Error type returned when bad data is given to…",null,null],[13,"EnvironmentVariableFormatError","","",7,null],[13,"ArgumentContainsNulByte","","",7,null],[13,"PreopenedDirectoryNotFound","","",7,null],[13,"PreopenedDirectoryError","","",7,null],[13,"MappedDirAliasFormattingError","","",7,null],[13,"WasiFsCreationError","","",7,null],[13,"WasiFsSetupError","","",7,null],[13,"WasiFsError","","",7,null],[4,"WasiVersion","","The version of WASI. This is determined by the imports…",null,null],[13,"Snapshot0","","`wasi_unstable`.",8,null],[13,"Snapshot1","","`wasi_snapshot_preview1`.",8,null],[13,"Latest","","Latest version.",8,null],[4,"WasiError","","This is returned in `RuntimeError`. Use `downcast` or…",null,null],[13,"Exit","","",9,null],[13,"UnknownWasiVersion","","",9,null],[5,"get_wasi_version","","Detect the version of WASI being used based on the import…",null,[[["module",3]],[["wasiversion",4],["option",4]]]],[5,"is_wasi_module","","Check if a provided module is compiled for some version of…",null,[[["module",3]]]],[5,"generate_import_object_from_env","","Create an [`ImportObject`] with an existing [`WasiEnv`].…",null,[[["wasiversion",4],["wasienv",3],["store",3]],["importobject",3]]],[5,"get_path_open_for_store","","",null,[[["wasienv",3],["store",3]],["function",3]]],[5,"generate_import_object_snapshot0","","Combines a state generating function with the import list…",null,[[["wasienv",3],["store",3]],["importobject",3]]],[5,"generate_import_object_snapshot1","","Combines a state generating function with the import list…",null,[[["wasienv",3],["store",3]],["importobject",3]]],[0,"macros","","Macros to simplify some common WASI-specific tasks.",null,null],[0,"ptr","","This is a wrapper around the `WasmPtr` abstraction that…",null,null],[3,"Array","wasmer_wasi::ptr","The `Array` marker type. This type can be used like…",null,null],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a `WasmNativeType`…",null,null],[16,"Native","","Native Wasm type.",10,null],[10,"from_native","","Convert a value of kind `Self::Native` to `Self`.",10,[[]]],[10,"to_native","","Convert self to `Self::Native`.",10,[[]]],[3,"Item","","The `Item` marker type. This is the default and does not…",null,null],[3,"Memory","","A WebAssembly `memory` instance.",null,null],[12,"store","","",11,null],[12,"memory","","",11,null],[8,"ValueType","","Trait for a Value type. A Value type is a type that is…",null,null],[3,"BaseWasmPtr","","A zero-cost type that represents a pointer to something in…",null,null],[12,"offset","","",12,null],[12,"_phantom","","",12,null],[3,"WasmPtr","","",null,null],[12,"0","","",13,null],[11,"new","","",13,[[]]],[11,"offset","","",13,[[]]],[11,"deref","","",13,[[["memory",3]],[["result",4],["cell",3],["__wasi_errno_t",6]]]],[11,"deref","","",13,[[["memory",3]],[["result",4],["__wasi_errno_t",6]]]],[11,"get_utf8_str","","",13,[[["memory",3]],["option",4]]],[11,"get_utf8_string","","",13,[[["memory",3]],[["option",4],["string",3]]]],[0,"state","wasmer_wasi","WARNING: the API exposed here is unstable and very…",null,null],[3,"Inode","wasmer_wasi::state","An index (and generation) into an `Arena`.",null,null],[12,"index","","",14,null],[12,"generation","","",14,null],[3,"InodeVal","","A file that Wasi knows about that may or may not be open",null,null],[12,"stat","","",15,null],[12,"is_preopened","","",15,null],[12,"name","","",15,null],[12,"kind","","",15,null],[3,"Fd","","",null,null],[12,"rights","","",0,null],[12,"rights_inheriting","","",0,null],[12,"flags","","",0,null],[12,"offset","","",0,null],[12,"open_flags","","Flags that determine how the [`Fd`] can be used.",0,null],[12,"inode","","",0,null],[3,"WasiFs","","Warning, modifying these fields directly may cause…",null,null],[12,"preopen_fds","","",2,null],[12,"name_map","","",2,null],[12,"inodes","","",2,null],[12,"fd_map","","",2,null],[12,"next_fd","","",2,null],[12,"inode_counter","","",2,null],[12,"orphan_fds","","for fds still open after the file has been deleted",2,null],[3,"WasiState","","Top level data type containing all* the state with which…",null,null],[12,"fs","","",3,null],[12,"args","","",3,null],[12,"envs","","",3,null],[4,"Kind","","The core of the filesystem abstraction. Includes…",null,null],[13,"File","","",16,null],[12,"handle","wasmer_wasi::state::Kind","the open file, if it\'s open",17,null],[12,"path","","The path on the host system where the file is located This…",17,null],[12,"fd","","Marks the file as a special file that only one `fd` can…",17,null],[13,"Dir","wasmer_wasi::state","",16,null],[12,"parent","wasmer_wasi::state::Kind","Parent directory",18,null],[12,"path","","The path on the host system where the directory is located",18,null],[12,"entries","","The entries of a directory are lazily filled.",18,null],[13,"Root","wasmer_wasi::state","The same as Dir but without the irrelevant bits The root…",16,null],[12,"entries","wasmer_wasi::state::Kind","",19,null],[13,"Symlink","wasmer_wasi::state","The first two fields are data about the symlink the last…",16,null],[12,"base_po_dir","wasmer_wasi::state::Kind","The preopened dir that this symlink file is relative to…",20,null],[12,"path_to_symlink","","The path to the symlink from the `base_po_dir`",20,null],[12,"relative_path","","the value of the symlink as a relative path",20,null],[13,"Buffer","wasmer_wasi::state","",16,null],[12,"buffer","wasmer_wasi::state::Kind","",21,null],[5,"host_file_type_to_wasi_file_type","wasmer_wasi::state","",null,[[["filetype",3]],["__wasi_filetype_t",6]]],[0,"builder","","Builder system for configuring a [`WasiState`] and…",null,null],[3,"WasiStateBuilder","wasmer_wasi::state::builder","Convenient builder API for configuring WASI via…",null,null],[12,"args","","",4,null],[12,"envs","","",4,null],[12,"preopens","","",4,null],[12,"setup_fs_fn","","",4,null],[12,"stdout_override","","",4,null],[12,"stderr_override","","",4,null],[12,"stdin_override","","",4,null],[3,"PreopenDirBuilder","","Builder for preopened directories.",null,null],[12,"path","","",22,null],[12,"alias","","",22,null],[12,"read","","",22,null],[12,"write","","",22,null],[12,"create","","",22,null],[3,"PreopenedDir","","The built version of `PreopenDirBuilder`",null,null],[12,"path","","",23,null],[12,"alias","","",23,null],[12,"read","","",23,null],[12,"write","","",23,null],[12,"create","","",23,null],[4,"WasiStateCreationError","","Error type returned when bad data is given to…",null,null],[13,"EnvironmentVariableFormatError","","",7,null],[13,"ArgumentContainsNulByte","","",7,null],[13,"PreopenedDirectoryNotFound","","",7,null],[13,"PreopenedDirectoryError","","",7,null],[13,"MappedDirAliasFormattingError","","",7,null],[13,"WasiFsCreationError","","",7,null],[13,"WasiFsSetupError","","",7,null],[13,"WasiFsError","","",7,null],[5,"create_wasi_state","","Creates an empty [`WasiStateBuilder`].",null,[[],["wasistatebuilder",3]]],[5,"validate_mapped_dir_alias","","",null,[[],[["wasistatecreationerror",4],["result",4]]]],[11,"env","wasmer_wasi","Add an environment variable pair.",4,[[]]],[11,"arg","","Add an argument.",4,[[]]],[11,"envs","","Add multiple environment variable pairs.",4,[[]]],[11,"args","","Add multiple arguments.",4,[[]]],[11,"preopen_dir","","Preopen a directory",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"preopen","","Preopen a directory and configure it.",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"preopen_dirs","","Preopen a directory.",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"map_dir","","Preopen a directory with a different name exposed to the…",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"map_dirs","","Preopen directorys with a different names exposed to the…",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"stdout","","Overwrite the default WASI `stdout`, if you want to hold…",4,[[["wasifile",8],["box",3]]]],[11,"stderr","","Overwrite the default WASI `stderr`, if you want to hold…",4,[[["wasifile",8],["box",3]]]],[11,"stdin","","Overwrite the default WASI `stdin`, if you want to hold on…",4,[[["wasifile",8],["box",3]]]],[11,"setup_fs","","Setup the WASI filesystem before running",4,[[["fn",8],["box",3]]]],[11,"build","","Consumes the [`WasiStateBuilder`] and produces a…",4,[[],[["result",4],["wasistatecreationerror",4],["wasistate",3]]]],[11,"finalize","","Consumes the [`WasiStateBuilder`] and produces a [`WasiEnv`]",4,[[],[["result",4],["wasienv",3],["wasistatecreationerror",4]]]],[11,"new","wasmer_wasi::state::builder","Create an empty builder",22,[[]]],[11,"directory","","Point the preopened directory to the path given by `po_dir`",22,[[]]],[11,"alias","","Make this preopened directory appear to the WASI program…",22,[[]]],[11,"read","","Set read permissions affecting files in the directory",22,[[]]],[11,"write","","Set write permissions affecting files in the directory",22,[[]]],[11,"create","","Set create permissions affecting files in the directory",22,[[]]],[11,"build","","",22,[[],[["preopeneddir",3],["result",4],["wasistatecreationerror",4]]]],[0,"types","wasmer_wasi::state","",null,null],[3,"PollEventBuilder","wasmer_wasi::state::types","",null,null],[12,"inner","","",24,null],[3,"PollEventIter","","",null,null],[12,"pes","","",25,null],[12,"i","","",25,null],[3,"HostFile","","A thin wrapper around `std::fs::File`",null,null],[12,"inner","","",26,null],[12,"host_path","","",26,null],[12,"flags","","",26,null],[3,"Stdout","","A wrapper type around Stdout that implements `WasiFile`…",null,null],[3,"Stderr","","A wrapper type around Stderr that implements `WasiFile`…",null,null],[3,"Stdin","","A wrapper type around Stdin that implements `WasiFile` and…",null,null],[3,"Pipe","","For piping stdio. Stores all output / input in a…",null,null],[12,"buffer","","",1,null],[4,"WasiFsError","","Error type for external users",null,null],[13,"BaseNotDirectory","","The fd given as a base was not a directory so the…",6,null],[13,"NotAFile","","Expected a file but found not a file",6,null],[13,"InvalidFd","","The fd given was not usable",6,null],[13,"AlreadyExists","","File exists",6,null],[13,"IOError","","Something failed when doing IO. These errors can generally…",6,null],[13,"AddressInUse","","The address was in use",6,null],[13,"AddressNotAvailable","","The address could not be found",6,null],[13,"BrokenPipe","","A pipe was closed",6,null],[13,"ConnectionAborted","","The connection was aborted",6,null],[13,"ConnectionRefused","","The connection request was refused",6,null],[13,"ConnectionReset","","The connection was reset",6,null],[13,"Interrupted","","The operation was interrupted before it could finish",6,null],[13,"InvalidData","","Invalid internal data, if the argument data is invalid,…",6,null],[13,"InvalidInput","","The provided data is invalid",6,null],[13,"NotConnected","","Could not perform the operation because there was not an…",6,null],[13,"EntityNotFound","","The requested file or directory could not be found",6,null],[13,"NoDevice","","The requested device couldn\'t be accessed",6,null],[13,"PermissionDenied","","Caller was not allowed to perform this operation",6,null],[13,"TimedOut","","The operation did not complete within the given amount of…",6,null],[13,"UnexpectedEof","","Found EOF when EOF was not expected",6,null],[13,"WouldBlock","","Operation would block, this error lets the caller know…",6,null],[13,"WriteZero","","A call to write returned 0",6,null],[13,"UnknownError","","A WASI error without an external name. If you encounter…",6,null],[4,"PollEvent","","",null,null],[13,"PollIn","","Data available to read",27,null],[13,"PollOut","","Data available to write (will still block if data is…",27,null],[13,"PollError","","Something didn\'t work. ignored as input",27,null],[13,"PollHangUp","","Connection closed. ignored as input",27,null],[13,"PollInvalid","","Invalid request. ignored as input",27,null],[5,"iterate_poll_events","","",null,[[],["polleventiter",3]]],[5,"poll_event_set_to_platform_poll_events","","",null,[[]]],[5,"platform_poll_events_to_pollevent_set","","",null,[[]]],[5,"poll","","",null,[[],[["result",4],["wasifserror",4]]]],[5,"__init10095839713170728602","","",null,[[]]],[5,"host_file_bytes_available","","",null,[[],[["wasifserror",4],["result",4]]]],[5,"__init17928626087104593939","","",null,[[]]],[5,"__init18259907151022521602","","",null,[[]]],[5,"__init13015983451510593879","","",null,[[]]],[5,"__init6402086000070743308","","",null,[[]]],[6,"PollEventSet","","",null,null],[7,"__init10095839713170728602___rust_ctor___ctor","","",null,null],[7,"__init17928626087104593939___rust_ctor___ctor","","",null,null],[7,"__init18259907151022521602___rust_ctor___ctor","","",null,null],[7,"__init13015983451510593879___rust_ctor___ctor","","",null,null],[7,"__init6402086000070743308___rust_ctor___ctor","","",null,null],[17,"_WasiFile_registry","","",null,null],[8,"WasiFile","","This trait relies on your file closing when it goes out of…",null,null],[10,"last_accessed","","the last time the file was accessed in nanoseconds as a…",28,[[],["__wasi_timestamp_t",6]]],[10,"last_modified","","the last time the file was modified in nanoseconds as a…",28,[[],["__wasi_timestamp_t",6]]],[10,"created_time","","the time at which the file was created in nanoseconds as a…",28,[[],["__wasi_timestamp_t",6]]],[11,"set_last_accessed","","set the last time the file was accessed in nanoseconds as…",28,[[["__wasi_timestamp_t",6]]]],[11,"set_last_modified","","set the last time the file was modified in nanoseconds as…",28,[[["__wasi_timestamp_t",6]]]],[11,"set_created_time","","set the time at which the file was created in nanoseconds…",28,[[["__wasi_timestamp_t",6]]]],[10,"size","","the size of the file in bytes",28,[[]]],[10,"set_len","","Change the size of the file, if the `new_size` is greater…",28,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[10,"unlink","","Request deletion of the file",28,[[],[["result",4],["wasifserror",4]]]],[11,"sync_to_disk","","Store file contents and metadata to disk Default…",28,[[],[["result",4],["wasifserror",4]]]],[11,"rename_file","","Moves the file to a new location NOTE: the signature of…",28,[[["path",3]],[["result",4],["wasifserror",4]]]],[10,"bytes_available","","Returns the number of bytes available. This function must…",28,[[],[["wasifserror",4],["result",4]]]],[11,"get_raw_fd","","Used for polling. Default returns `None` because this…",28,[[],["option",4]]],[8,"Upcastable","","Trait needed to get downcasting from `WasiFile` to work.",null,null],[10,"upcast_any_ref","","",29,[[],["any",8]]],[10,"upcast_any_mut","","",29,[[],["any",8]]],[10,"upcast_any_box","","",29,[[["box",3]],[["any",8],["box",3]]]],[8,"WasiPath","","",null,null],[11,"from_wasi_err","wasmer_wasi","",6,[[["__wasi_errno_t",6]],["wasifserror",4]]],[11,"into_wasi_err","","",6,[[],["__wasi_errno_t",6]]],[11,"downcast_ref","wasmer_wasi::state::types","",28,[[],["option",4]]],[11,"downcast_mut","","",28,[[],["option",4]]],[11,"from_i16","","",27,[[],[["option",4],["pollevent",4]]]],[11,"new","","",24,[[],["polleventbuilder",3]]],[11,"add","","",24,[[["pollevent",4]],["polleventbuilder",3]]],[11,"build","","",24,[[]]],[18,"READ","","",26,null],[18,"WRITE","","",26,null],[18,"APPEND","","",26,null],[11,"new","","creates a new host file from a `std::fs::File` and a path",26,[[["file",3],["pathbuf",3]]]],[11,"metadata","","",26,[[],["metadata",3]]],[11,"new","wasmer_wasi","",1,[[]]],[17,"VIRTUAL_ROOT_FD","wasmer_wasi::state","the fd value of the virtual root",null,null],[17,"ALL_RIGHTS","","all the rights enabled",null,null],[17,"STDIN_DEFAULT_RIGHTS","","",null,null],[17,"STDOUT_DEFAULT_RIGHTS","","",null,null],[17,"STDERR_DEFAULT_RIGHTS","","",null,null],[17,"MAX_SYMLINKS","","A completely aribtrary \\\"big enough\\\" number used as the…",null,null],[18,"READ","wasmer_wasi","This [`Fd`] can be used with read system calls.",0,null],[18,"WRITE","","This [`Fd`] can be used with write system calls.",0,null],[18,"APPEND","","This [`Fd`] can append in write system calls. Note that…",0,null],[18,"TRUNCATE","","This [`Fd`] will delete everything before writing. Note…",0,null],[18,"CREATE","","This [`Fd`] may create a file before writing to it. Note…",0,null],[11,"new","","Internal function for constructing a [`WasiFs`]. Please…",2,[[],[["string",3],["result",4]]]],[11,"new_with_preopen","","Created for the builder API. like `new` but with more…",2,[[],[["string",3],["result",4]]]],[11,"new_init","","Private helper function to init the filesystem, called in…",2,[[],[["string",3],["result",4]]]],[11,"stdout","","Get the `WasiFile` object at stdout",2,[[],[["wasifserror",4],["option",4],["result",4]]]],[11,"stdout_mut","","Get the `WasiFile` object at stdout mutably",2,[[],[["result",4],["wasifserror",4],["option",4]]]],[11,"stderr","","Get the `WasiFile` object at stderr",2,[[],[["wasifserror",4],["option",4],["result",4]]]],[11,"stderr_mut","","Get the `WasiFile` object at stderr mutably",2,[[],[["result",4],["wasifserror",4],["option",4]]]],[11,"stdin","","Get the `WasiFile` object at stdin",2,[[],[["wasifserror",4],["option",4],["result",4]]]],[11,"stdin_mut","","Get the `WasiFile` object at stdin mutably",2,[[],[["result",4],["wasifserror",4],["option",4]]]],[11,"std_dev_get","","Internal helper function to get a standard device handle.…",2,[[["__wasi_fd_t",6]],[["wasifserror",4],["option",4],["result",4]]]],[11,"std_dev_get_mut","","Internal helper function to mutably get a standard device…",2,[[["__wasi_fd_t",6]],[["result",4],["wasifserror",4],["option",4]]]],[11,"get_next_inode_index","","Returns the next available inode index for creating a new…",2,[[]]],[11,"open_dir_all","","This function is like create dir all, but it also opens…",2,[[["__wasi_fdflags_t",6],["__wasi_rights_t",6],["string",3],["__wasi_fd_t",6]],[["result",4],["wasifserror",4],["__wasi_fd_t",6]]]],[11,"open_file_at","","Opens a user-supplied file in the directory specified with…",2,[[["__wasi_fdflags_t",6],["wasifile",8],["__wasi_rights_t",6],["string",3],["box",3],["__wasi_fd_t",6]],[["result",4],["wasifserror",4],["__wasi_fd_t",6]]]],[11,"swap_file","","Change the backing of a given file descriptor Returns the…",2,[[["wasifile",8],["box",3],["__wasi_fd_t",6]],[["option",4],["result",4],["wasifserror",4]]]],[11,"filestat_resync_size","","refresh size from filesystem",2,[[["__wasi_fd_t",6]],[["result",4],["__wasi_filesize_t",6],["__wasi_errno_t",6]]]],[11,"get_inode_at_path_inner","","Internal part of the core path resolution function which…",2,[[["__wasi_fd_t",6]],[["inode",3],["__wasi_errno_t",6],["result",4]]]],[11,"path_into_pre_open_and_relative_path","","Splits a path into the first preopened directory that is a…",2,[[["path",3]],[["__wasi_errno_t",6],["result",4]]]],[11,"path_relative_to_fd","","",2,[[["inode",3],["__wasi_fd_t",6]],[["result",4],["pathbuf",3],["__wasi_errno_t",6]]]],[11,"path_depth_from_fd","","finds the number of directories between the fd and the…",2,[[["inode",3],["__wasi_fd_t",6]],[["result",4],["__wasi_errno_t",6]]]],[11,"get_inode_at_path","","gets a host file from a base directory and a path this…",2,[[["__wasi_fd_t",6]],[["inode",3],["__wasi_errno_t",6],["result",4]]]],[11,"get_parent_inode_at_path","","Returns the parent Dir or Root that the file at a given…",2,[[["path",3],["__wasi_fd_t",6]],[["result",4],["__wasi_errno_t",6]]]],[11,"get_fd","","",2,[[["__wasi_fd_t",6]],[["result",4],["__wasi_errno_t",6],["fd",3]]]],[11,"get_inodeval_mut","","gets either a normal inode or an orphaned inode",2,[[["__wasi_fd_t",6]],[["inodeval",3],["__wasi_errno_t",6],["result",4]]]],[11,"filestat_fd","","",2,[[["__wasi_fd_t",6]],[["__wasi_errno_t",6],["result",4],["__wasi_filestat_t",3]]]],[11,"fdstat","","",2,[[["__wasi_fd_t",6]],[["result",4],["__wasi_fdstat_t",3],["__wasi_errno_t",6]]]],[11,"prestat_fd","","",2,[[["__wasi_fd_t",6]],[["__wasi_prestat_t",3],["__wasi_errno_t",6],["result",4]]]],[11,"flush","","",2,[[["__wasi_fd_t",6]],[["result",4],["__wasi_errno_t",6]]]],[11,"create_inode","","Creates an inode and inserts it given a Kind and some…",2,[[["kind",4],["string",3]],[["inode",3],["__wasi_errno_t",6],["result",4]]]],[11,"create_inode_with_default_stat","","Creates an inode and inserts it given a Kind, does not…",2,[[["kind",4],["string",3]],["inode",3]]],[11,"create_inode_with_stat","","Creates an inode with the given filestat and inserts it.",2,[[["kind",4],["__wasi_filestat_t",3],["string",3]],["inode",3]]],[11,"create_fd","","",2,[[["__wasi_fdflags_t",6],["__wasi_rights_t",6],["inode",3]],[["result",4],["__wasi_errno_t",6],["__wasi_fd_t",6]]]],[11,"remove_inode","","Low level function to remove an inode, that is it deletes…",2,[[["inode",3]],[["option",4],["inodeval",3]]]],[11,"create_virtual_root","","",2,[[],["inode",3]]],[11,"create_stdout","","",2,[[]]],[11,"create_stdin","","",2,[[]]],[11,"create_stderr","","",2,[[]]],[11,"create_std_dev_inner","","",2,[[["__wasi_fdflags_t",6],["wasifile",8],["__wasi_rights_t",6],["box",3],["__wasi_fd_t",6]]]],[11,"get_stat_for_kind","","",2,[[["kind",4]],[["option",4],["__wasi_filestat_t",3]]]],[11,"close_fd","","Closes an open FD, handling all details such as FD being…",2,[[["__wasi_fd_t",6]],[["result",4],["__wasi_errno_t",6]]]],[11,"new","","Create a [`WasiStateBuilder`] to construct a validated…",3,[[],["wasistatebuilder",3]]],[11,"freeze","","Turn the WasiState into bytes",3,[[],[["vec",3],["option",4]]]],[11,"unfreeze","","Get a WasiState from bytes",3,[[],["option",4]]],[0,"syscalls","","",null,null],[5,"write_bytes_inner","wasmer_wasi::syscalls","",null,[[["memory",3],["write",8]],[["result",4],["__wasi_errno_t",6]]]],[5,"write_bytes","","",null,[[["memory",3],["write",8]],[["result",4],["__wasi_errno_t",6]]]],[5,"read_bytes","","",null,[[["read",8],["memory",3]],[["result",4],["__wasi_errno_t",6]]]],[5,"has_rights","","checks that `rights_check_set` is a subset of `rights_set`",null,[[["__wasi_rights_t",6]]]],[5,"write_buffer_array","","",null,[[["wasmptr",3],["wasmptr",3],["memory",3],["array",3]],["__wasi_errno_t",6]]],[5,"get_current_time_in_nanos","","",null,[[],[["__wasi_timestamp_t",6],["result",4],["__wasi_errno_t",6]]]],[5,"args_get","","`args_get()`Read command-line argument data. The sizes of…",null,[[["wasmptr",3],["wasmptr",3],["wasienv",3],["array",3]],["__wasi_errno_t",6]]],[5,"args_sizes_get","","`args_sizes_get()`Return command-line argument data sizes.…",null,[[["wasienv",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"clock_res_get","","`clock_res_get()`Get the resolution of the specified clock…",null,[[["__wasi_clockid_t",6],["wasienv",3],["__wasi_timestamp_t",6],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"clock_time_get","","`clock_time_get()`Get the time of the specified clock…",null,[[["__wasi_clockid_t",6],["wasienv",3],["__wasi_timestamp_t",6],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"environ_get","","`environ_get()`Read environment variable data. The sizes…",null,[[["wasmptr",3],["wasmptr",3],["wasienv",3],["array",3]],["__wasi_errno_t",6]]],[5,"environ_sizes_get","","`environ_sizes_get()`Return command-line argument data…",null,[[["wasienv",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"fd_advise","","`fd_advise()`Advise the system about how a file will be…",null,[[["wasienv",3],["__wasi_advice_t",6],["__wasi_filesize_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_allocate","","`fd_allocate`Allocate extra space for a file descriptor…",null,[[["wasienv",3],["__wasi_filesize_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_close","","`fd_close()`Close an open file descriptor Inputs:",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_datasync","","`fd_datasync()`Synchronize the file data to disk Inputs:",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_fdstat_get","","`fd_fdstat_get()`Get metadata of a file descriptor Input:",null,[[["wasmptr",3],["wasienv",3],["__wasi_fdstat_t",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_fdstat_set_flags","","`fd_fdstat_set_flags()`Set file descriptor flags for a…",null,[[["wasienv",3],["__wasi_fdflags_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_fdstat_set_rights","","`fd_fdstat_set_rights()`Set the rights of a file…",null,[[["__wasi_rights_t",6],["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_filestat_get","","`fd_filestat_get()`Get the metadata of an open file Input:",null,[[["wasmptr",3],["__wasi_filestat_t",3],["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_filestat_set_size","","`fd_filestat_set_size()`Change the size of an open file,…",null,[[["wasienv",3],["__wasi_filesize_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_filestat_set_times","","`fd_filestat_set_times()`Set timestamp metadata on a file…",null,[[["wasienv",3],["__wasi_timestamp_t",6],["__wasi_fstflags_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_pread","","`fd_pread()`Read from the file at the given offset without…",null,[[["wasmptr",3],["array",3],["__wasi_iovec_t",3],["wasienv",3],["wasmptr",3],["__wasi_filesize_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_prestat_get","","`fd_prestat_get()`Get metadata about a preopened file…",null,[[["__wasi_prestat_t",3],["wasienv",3],["wasmptr",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_prestat_dir_name","","",null,[[["array",3],["wasmptr",3],["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_pwrite","","`fd_pwrite()`Write to a file without adjusting its offset…",null,[[["array",3],["wasmptr",3],["__wasi_ciovec_t",3],["wasienv",3],["wasmptr",3],["__wasi_filesize_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_read","","`fd_read()`Read data from file descriptor Inputs:",null,[[["wasmptr",3],["array",3],["__wasi_iovec_t",3],["wasienv",3],["wasmptr",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_readdir","","`fd_readdir()`Read data from directory specified by file…",null,[[["array",3],["wasmptr",3],["__wasi_dircookie_t",6],["wasienv",3],["wasmptr",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_renumber","","`fd_renumber()`Atomically copy file descriptor Inputs:",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_seek","","`fd_seek()`Update file descriptor offset Inputs:",null,[[["wasmptr",3],["__wasi_filedelta_t",6],["__wasi_whence_t",6],["wasienv",3],["__wasi_filesize_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_sync","","`fd_sync()`Synchronize file and metadata to disk (TODO:…",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_tell","","`fd_tell()`Get the offset of the file descriptor Inputs:",null,[[["wasmptr",3],["wasienv",3],["__wasi_filesize_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_write","","`fd_write()`Write data to the file descriptor Inputs:",null,[[["array",3],["wasmptr",3],["__wasi_ciovec_t",3],["wasienv",3],["wasmptr",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_create_directory","","`path_create_directory()`Create directory at a path Inputs:",null,[[["array",3],["wasmptr",3],["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_filestat_get","","`path_filestat_get()`Access metadata about a file or…",null,[[["array",3],["wasmptr",3],["wasmptr",3],["__wasi_filestat_t",3],["wasienv",3],["__wasi_lookupflags_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_filestat_set_times","","`path_filestat_set_times()`Update time metadata on a file…",null,[[["array",3],["__wasi_fstflags_t",6],["wasmptr",3],["wasienv",3],["__wasi_lookupflags_t",6],["__wasi_timestamp_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_link","","`path_link()`Create a hard link Inputs:",null,[[["array",3],["wasmptr",3],["wasienv",3],["__wasi_lookupflags_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_open","","`path_open()`Open file located at the given path Inputs:",null,[[["__wasi_rights_t",6],["wasmptr",3],["wasmptr",3],["wasienv",3],["__wasi_lookupflags_t",6],["__wasi_oflags_t",6],["array",3],["__wasi_fd_t",6],["__wasi_fdflags_t",6]],["__wasi_errno_t",6]]],[5,"path_open_dynamic","","",null,[[["wasienv",3]],[["result",4],["vec",3],["runtimeerror",3]]]],[5,"path_readlink","","`path_readlink()`Read the value of a symlink Inputs:",null,[[["array",3],["wasmptr",3],["wasienv",3],["wasmptr",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_remove_directory","","Returns __WASI_ENOTEMTPY if directory is not empty",null,[[["array",3],["wasmptr",3],["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_rename","","`path_rename()`Rename a file or directory Inputs:",null,[[["array",3],["wasmptr",3],["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"path_symlink","","`path_symlink()`Create a symlink Inputs:",null,[[["__wasi_fd_t",6],["wasmptr",3],["wasienv",3],["array",3]],["__wasi_errno_t",6]]],[5,"path_unlink_file","","`path_unlink_file()`Unlink a file, deleting if the number…",null,[[["array",3],["wasmptr",3],["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"poll_oneoff","","`poll_oneoff()`Concurrently poll for a set of events Inputs:",null,[[["__wasi_event_t",3],["__wasi_subscription_t",3],["wasmptr",3],["wasienv",3],["wasmptr",3],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"proc_exit","","",null,[[["wasienv",3],["__wasi_exitcode_t",6]]]],[5,"proc_raise","","",null,[[["wasienv",3],["__wasi_signal_t",6]],["__wasi_errno_t",6]]],[5,"random_get","","`random_get()`Fill buffer with high-quality random data.…",null,[[["wasienv",3],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"sched_yield","","`sched_yield()`Yields execution of the thread",null,[[["wasienv",3]],["__wasi_errno_t",6]]],[5,"sock_recv","","",null,[[["wasmptr",3],["wasmptr",3],["wasienv",3],["array",3],["__wasi_iovec_t",3],["__wasi_fd_t",6],["wasmptr",3],["__wasi_riflags_t",6],["__wasi_roflags_t",6]],["__wasi_errno_t",6]]],[5,"sock_send","","",null,[[["array",3],["wasmptr",3],["__wasi_ciovec_t",3],["wasienv",3],["__wasi_siflags_t",6],["wasmptr",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"sock_shutdown","","",null,[[["wasienv",3],["__wasi_sdflags_t",6],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[0,"types","","",null,null],[3,"__wasi_ciovec_t","wasmer_wasi::syscalls::types","",null,null],[12,"buf","","",30,null],[12,"buf_len","","",30,null],[3,"__wasi_dirent_t","","",null,null],[12,"d_next","","",31,null],[12,"d_ino","","",31,null],[12,"d_namlen","","",31,null],[12,"d_type","","",31,null],[3,"__wasi_event_fd_readwrite_t","","",null,null],[12,"nbytes","","",32,null],[12,"flags","","",32,null],[3,"__wasi_event_t","","",null,null],[12,"userdata","","",33,null],[12,"error","","",33,null],[12,"type_","","",33,null],[12,"u","","",33,null],[3,"__wasi_prestat_u_dir_t","","",null,null],[12,"pr_name_len","","",34,null],[3,"__wasi_prestat_t","","",null,null],[12,"pr_type","","",35,null],[12,"u","","",35,null],[3,"__wasi_fdstat_t","","",null,null],[12,"fs_filetype","","",36,null],[12,"fs_flags","","",36,null],[12,"fs_rights_base","","",36,null],[12,"fs_rights_inheriting","","",36,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",37,null],[12,"st_ino","","",37,null],[12,"st_filetype","","",37,null],[12,"st_nlink","","",37,null],[12,"st_size","","",37,null],[12,"st_atim","","",37,null],[12,"st_mtim","","",37,null],[12,"st_ctim","","",37,null],[3,"__wasi_iovec_t","","",null,null],[12,"buf","","",38,null],[12,"buf_len","","",38,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"clock_id","","",39,null],[12,"timeout","","",39,null],[12,"precision","","",39,null],[12,"flags","","",39,null],[3,"__wasi_subscription_fs_readwrite_t","","",null,null],[12,"fd","","",40,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",41,null],[12,"type_","","",41,null],[12,"u","","",41,null],[3,"WasiSubscription","","Safe Rust wrapper around `__wasi_subscription_t`",null,null],[12,"user_data","","",42,null],[12,"event_type","","",42,null],[19,"__wasi_event_u","","",null,null],[12,"fd_readwrite","","",43,null],[19,"__wasi_prestat_u","","",null,null],[12,"dir","","",44,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",45,null],[12,"fd_readwrite","","",45,null],[4,"EventEnum","","",null,null],[13,"FdReadWrite","","",46,null],[12,"nbytes","wasmer_wasi::syscalls::types::EventEnum","",47,null],[12,"flags","","",47,null],[4,"PrestatEnum","wasmer_wasi::syscalls::types","",null,null],[13,"Dir","","",48,null],[12,"pr_name_len","wasmer_wasi::syscalls::types::PrestatEnum","",49,null],[4,"EventType","wasmer_wasi::syscalls::types","Safe Rust wrapper around `__wasi_subscription_t::type_`…",null,null],[13,"Clock","","",50,null],[13,"Read","","",50,null],[13,"Write","","",50,null],[4,"SubscriptionEnum","","",null,null],[13,"Clock","","",51,null],[13,"FdReadWrite","","",51,null],[5,"dirent_to_le_bytes","","",null,[[["__wasi_dirent_t",3]],["vec",3]]],[5,"eventtype_to_str","","",null,[[["__wasi_eventtype_t",6]]]],[5,"wasi_filetype_to_name","","",null,[[["__wasi_filetype_t",6]]]],[5,"print_right_set","","function for debugging rights issues",null,[[["__wasi_rights_t",6]]]],[5,"right_to_string","","expects a single right, returns None if out of bounds or >…",null,[[["__wasi_rights_t",6]],["option",4]]],[0,"snapshot0","","",null,null],[3,"__wasi_subscription_clock_t","wasmer_wasi::syscalls::types::snapshot0","",null,null],[12,"userdata","","",52,null],[12,"clock_id","","",52,null],[12,"timeout","","",52,null],[12,"precision","","",52,null],[12,"flags","","",52,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",53,null],[12,"type_","","",53,null],[12,"u","","",53,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",54,null],[12,"st_ino","","",54,null],[12,"st_filetype","","",54,null],[12,"st_nlink","","",54,null],[12,"st_size","","",54,null],[12,"st_atim","","",54,null],[12,"st_mtim","","",54,null],[12,"st_ctim","","",54,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",55,null],[12,"fd_readwrite","","",55,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[6,"__wasi_advice_t","wasmer_wasi::syscalls::types","",null,null],[6,"__wasi_clockid_t","","",null,null],[6,"__wasi_device_t","","",null,null],[6,"__wasi_dircookie_t","","",null,null],[6,"__wasi_errno_t","","",null,null],[6,"__wasi_eventrwflags_t","","",null,null],[6,"__wasi_eventtype_t","","",null,null],[6,"__wasi_exitcode_t","","",null,null],[6,"__wasi_fd_t","","",null,null],[6,"__wasi_fdflags_t","","",null,null],[6,"__wasi_preopentype_t","","",null,null],[6,"__wasi_filedelta_t","","",null,null],[6,"__wasi_filesize_t","","",null,null],[6,"__wasi_filetype_t","","",null,null],[6,"__wasi_fstflags_t","","",null,null],[6,"__wasi_inode_t","","",null,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_lookupflags_t","","",null,null],[6,"__wasi_oflags_t","","",null,null],[6,"__wasi_riflags_t","","",null,null],[6,"__wasi_rights_t","","",null,null],[6,"__wasi_roflags_t","","",null,null],[6,"__wasi_sdflags_t","","",null,null],[6,"__wasi_siflags_t","","",null,null],[6,"__wasi_signal_t","","",null,null],[6,"__wasi_subclockflags_t","","",null,null],[6,"__wasi_timestamp_t","","",null,null],[6,"__wasi_userdata_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_ADVICE_NORMAL","","",null,null],[17,"__WASI_ADVICE_SEQUENTIAL","","",null,null],[17,"__WASI_ADVICE_RANDOM","","",null,null],[17,"__WASI_ADVICE_WILLNEED","","",null,null],[17,"__WASI_ADVICE_DONTNEED","","",null,null],[17,"__WASI_ADVICE_NOREUSE","","",null,null],[17,"__WASI_CLOCK_REALTIME","","",null,null],[17,"__WASI_CLOCK_MONOTONIC","","",null,null],[17,"__WASI_CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"__WASI_CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"__WASI_DIRCOOKIE_START","","",null,null],[17,"__WASI_ESUCCESS","","",null,null],[17,"__WASI_E2BIG","","",null,null],[17,"__WASI_EACCES","","",null,null],[17,"__WASI_EADDRINUSE","","",null,null],[17,"__WASI_EADDRNOTAVAIL","","",null,null],[17,"__WASI_EAFNOSUPPORT","","",null,null],[17,"__WASI_EAGAIN","","",null,null],[17,"__WASI_EALREADY","","",null,null],[17,"__WASI_EBADF","","",null,null],[17,"__WASI_EBADMSG","","",null,null],[17,"__WASI_EBUSY","","",null,null],[17,"__WASI_ECANCELED","","",null,null],[17,"__WASI_ECHILD","","",null,null],[17,"__WASI_ECONNABORTED","","",null,null],[17,"__WASI_ECONNREFUSED","","",null,null],[17,"__WASI_ECONNRESET","","",null,null],[17,"__WASI_EDEADLK","","",null,null],[17,"__WASI_EDESTADDRREQ","","",null,null],[17,"__WASI_EDOM","","",null,null],[17,"__WASI_EDQUOT","","",null,null],[17,"__WASI_EEXIST","","",null,null],[17,"__WASI_EFAULT","","",null,null],[17,"__WASI_EFBIG","","",null,null],[17,"__WASI_EHOSTUNREACH","","",null,null],[17,"__WASI_EIDRM","","",null,null],[17,"__WASI_EILSEQ","","",null,null],[17,"__WASI_EINPROGRESS","","",null,null],[17,"__WASI_EINTR","","",null,null],[17,"__WASI_EINVAL","","",null,null],[17,"__WASI_EIO","","",null,null],[17,"__WASI_EISCONN","","",null,null],[17,"__WASI_EISDIR","","",null,null],[17,"__WASI_ELOOP","","",null,null],[17,"__WASI_EMFILE","","",null,null],[17,"__WASI_EMLINK","","",null,null],[17,"__WASI_EMSGSIZE","","",null,null],[17,"__WASI_EMULTIHOP","","",null,null],[17,"__WASI_ENAMETOOLONG","","",null,null],[17,"__WASI_ENETDOWN","","",null,null],[17,"__WASI_ENETRESET","","",null,null],[17,"__WASI_ENETUNREACH","","",null,null],[17,"__WASI_ENFILE","","",null,null],[17,"__WASI_ENOBUFS","","",null,null],[17,"__WASI_ENODEV","","",null,null],[17,"__WASI_ENOENT","","",null,null],[17,"__WASI_ENOEXEC","","",null,null],[17,"__WASI_ENOLCK","","",null,null],[17,"__WASI_ENOLINK","","",null,null],[17,"__WASI_ENOMEM","","",null,null],[17,"__WASI_ENOMSG","","",null,null],[17,"__WASI_ENOPROTOOPT","","",null,null],[17,"__WASI_ENOSPC","","",null,null],[17,"__WASI_ENOSYS","","",null,null],[17,"__WASI_ENOTCONN","","",null,null],[17,"__WASI_ENOTDIR","","",null,null],[17,"__WASI_ENOTEMPTY","","",null,null],[17,"__WASI_ENOTRECOVERABLE","","",null,null],[17,"__WASI_ENOTSOCK","","",null,null],[17,"__WASI_ENOTSUP","","",null,null],[17,"__WASI_ENOTTY","","",null,null],[17,"__WASI_ENXIO","","",null,null],[17,"__WASI_EOVERFLOW","","",null,null],[17,"__WASI_EOWNERDEAD","","",null,null],[17,"__WASI_EPERM","","",null,null],[17,"__WASI_EPIPE","","",null,null],[17,"__WASI_EPROTO","","",null,null],[17,"__WASI_EPROTONOSUPPORT","","",null,null],[17,"__WASI_EPROTOTYPE","","",null,null],[17,"__WASI_ERANGE","","",null,null],[17,"__WASI_EROFS","","",null,null],[17,"__WASI_ESPIPE","","",null,null],[17,"__WASI_ESRCH","","",null,null],[17,"__WASI_ESTALE","","",null,null],[17,"__WASI_ETIMEDOUT","","",null,null],[17,"__WASI_ETXTBSY","","",null,null],[17,"__WASI_EXDEV","","",null,null],[17,"__WASI_ENOTCAPABLE","","",null,null],[17,"__WASI_EVENT_FD_READWRITE_HANGUP","","",null,null],[17,"__WASI_EVENTTYPE_CLOCK","","",null,null],[17,"__WASI_EVENTTYPE_FD_READ","","",null,null],[17,"__WASI_EVENTTYPE_FD_WRITE","","",null,null],[17,"__WASI_STDIN_FILENO","","",null,null],[17,"__WASI_STDOUT_FILENO","","",null,null],[17,"__WASI_STDERR_FILENO","","",null,null],[17,"__WASI_FDFLAG_APPEND","","",null,null],[17,"__WASI_FDFLAG_DSYNC","","",null,null],[17,"__WASI_FDFLAG_NONBLOCK","","",null,null],[17,"__WASI_FDFLAG_RSYNC","","",null,null],[17,"__WASI_FDFLAG_SYNC","","",null,null],[17,"__WASI_PREOPENTYPE_DIR","","",null,null],[17,"__WASI_FILETYPE_UNKNOWN","","",null,null],[17,"__WASI_FILETYPE_BLOCK_DEVICE","","",null,null],[17,"__WASI_FILETYPE_CHARACTER_DEVICE","","",null,null],[17,"__WASI_FILETYPE_DIRECTORY","","",null,null],[17,"__WASI_FILETYPE_REGULAR_FILE","","",null,null],[17,"__WASI_FILETYPE_SOCKET_DGRAM","","",null,null],[17,"__WASI_FILETYPE_SOCKET_STREAM","","",null,null],[17,"__WASI_FILETYPE_SYMBOLIC_LINK","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM_NOW","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM_NOW","","",null,null],[17,"__WASI_LOOKUP_SYMLINK_FOLLOW","","",null,null],[17,"__WASI_O_CREAT","","",null,null],[17,"__WASI_O_DIRECTORY","","",null,null],[17,"__WASI_O_EXCL","","",null,null],[17,"__WASI_O_TRUNC","","",null,null],[17,"__WASI_SOCK_RECV_PEEK","","",null,null],[17,"__WASI_SOCK_RECV_WAITALL","","",null,null],[17,"__WASI_RIGHT_FD_DATASYNC","","",null,null],[17,"__WASI_RIGHT_FD_READ","","",null,null],[17,"__WASI_RIGHT_FD_SEEK","","",null,null],[17,"__WASI_RIGHT_FD_FDSTAT_SET_FLAGS","","",null,null],[17,"__WASI_RIGHT_FD_SYNC","","",null,null],[17,"__WASI_RIGHT_FD_TELL","","",null,null],[17,"__WASI_RIGHT_FD_WRITE","","",null,null],[17,"__WASI_RIGHT_FD_ADVISE","","",null,null],[17,"__WASI_RIGHT_FD_ALLOCATE","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_FILE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_OPEN","","",null,null],[17,"__WASI_RIGHT_FD_READDIR","","",null,null],[17,"__WASI_RIGHT_PATH_READLINK","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_PATH_SYMLINK","","",null,null],[17,"__WASI_RIGHT_PATH_REMOVE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_UNLINK_FILE","","",null,null],[17,"__WASI_RIGHT_POLL_FD_READWRITE","","",null,null],[17,"__WASI_RIGHT_SOCK_SHUTDOWN","","",null,null],[17,"__WASI_SOCK_RECV_DATA_TRUNCATED","","",null,null],[17,"__WASI_SHUT_RD","","",null,null],[17,"__WASI_SHUT_WR","","",null,null],[17,"__WASI_SIGHUP","","",null,null],[17,"__WASI_SIGINT","","",null,null],[17,"__WASI_SIGQUIT","","",null,null],[17,"__WASI_SIGILL","","",null,null],[17,"__WASI_SIGTRAP","","",null,null],[17,"__WASI_SIGABRT","","",null,null],[17,"__WASI_SIGBUS","","",null,null],[17,"__WASI_SIGFPE","","",null,null],[17,"__WASI_SIGKILL","","",null,null],[17,"__WASI_SIGUSR1","","",null,null],[17,"__WASI_SIGSEGV","","",null,null],[17,"__WASI_SIGUSR2","","",null,null],[17,"__WASI_SIGPIPE","","",null,null],[17,"__WASI_SIGALRM","","",null,null],[17,"__WASI_SIGTERM","","",null,null],[17,"__WASI_SIGCHLD","","",null,null],[17,"__WASI_SIGCONT","","",null,null],[17,"__WASI_SIGSTOP","","",null,null],[17,"__WASI_SIGTSTP","","",null,null],[17,"__WASI_SIGTTIN","","",null,null],[17,"__WASI_SIGTTOU","","",null,null],[17,"__WASI_SIGURG","","",null,null],[17,"__WASI_SIGXCPU","","",null,null],[17,"__WASI_SIGXFSZ","","",null,null],[17,"__WASI_SIGVTALRM","","",null,null],[17,"__WASI_SIGPROF","","",null,null],[17,"__WASI_SIGWINCH","","",null,null],[17,"__WASI_SIGPOLL","","",null,null],[17,"__WASI_SIGPWR","","",null,null],[17,"__WASI_SIGSYS","","",null,null],[17,"__WASI_SUBSCRIPTION_CLOCK_ABSTIME","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[11,"untagged","","",46,[[],["__wasi_event_u",19]]],[11,"tagged","","",33,[[],[["eventenum",4],["option",4]]]],[11,"untagged","","",48,[[],["__wasi_prestat_u",19]]],[11,"tagged","","",35,[[],[["prestatenum",4],["option",4]]]],[11,"raw_tag","","",50,[[],["__wasi_eventtype_t",6]]],[11,"tagged","","",41,[[],[["option",4],["subscriptionenum",4]]]],[0,"unix","wasmer_wasi::syscalls","",null,null],[5,"platform_clock_res_get","wasmer_wasi::syscalls::unix","",null,[[["__wasi_clockid_t",6],["cell",3]],["__wasi_errno_t",6]]],[5,"platform_clock_time_get","","",null,[[["__wasi_clockid_t",6],["__wasi_timestamp_t",6],["cell",3]],["__wasi_errno_t",6]]],[0,"legacy","wasmer_wasi::syscalls","These modules provide wrappers and implementations for…",null,null],[0,"snapshot0","wasmer_wasi::syscalls::legacy","",null,null],[5,"fd_filestat_get","wasmer_wasi::syscalls::legacy::snapshot0","Wrapper around `syscalls::fd_filestat_get` with extra…",null,[[["wasmptr",3],["__wasi_fd_t",6],["__wasi_filestat_t",3],["wasienv",3]],["__wasi_errno_t",6]]],[5,"path_filestat_get","","Wrapper around `syscalls::path_filestat_get` with extra…",null,[[["__wasi_lookupflags_t",6],["__wasi_fd_t",6],["wasmptr",3],["wasmptr",3],["wasienv",3],["__wasi_filestat_t",3],["array",3]],["__wasi_errno_t",6]]],[5,"fd_seek","","Wrapper around `syscalls::fd_seek` with extra logic to…",null,[[["__wasi_fd_t",6],["__wasi_filedelta_t",6],["wasienv",3],["__wasi_whence_t",6],["wasmptr",3],["__wasi_filesize_t",6]],["__wasi_errno_t",6]]],[5,"poll_oneoff","","Wrapper around `syscalls::poll_oneoff` with extra logic to…",null,[[["__wasi_event_t",3],["wasmptr",3],["wasmptr",3],["wasienv",3],["__wasi_subscription_t",3],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[0,"utils","wasmer_wasi","",null,null],[4,"WasiVersion","wasmer_wasi::utils","The version of WASI. This is determined by the imports…",null,null],[13,"Snapshot0","","`wasi_unstable`.",8,null],[13,"Snapshot1","","`wasi_snapshot_preview1`.",8,null],[13,"Latest","","Latest version.",8,null],[5,"is_wasi_module","","Check if a provided module is compiled for some version of…",null,[[["module",3]]]],[5,"get_wasi_version","","Detect the version of WASI being used based on the import…",null,[[["module",3]],[["wasiversion",4],["option",4]]]],[17,"SNAPSHOT0_NAMESPACE","","Namespace for the `Snapshot0` version.",null,null],[17,"SNAPSHOT1_NAMESPACE","","Namespace for the `Snapshot1` version.",null,null],[0,"types","wasmer_wasi","",null,null],[3,"__wasi_ciovec_t","wasmer_wasi::types","",null,null],[12,"buf","","",30,null],[12,"buf_len","","",30,null],[3,"__wasi_dirent_t","","",null,null],[12,"d_next","","",31,null],[12,"d_ino","","",31,null],[12,"d_namlen","","",31,null],[12,"d_type","","",31,null],[3,"__wasi_event_fd_readwrite_t","","",null,null],[12,"nbytes","","",32,null],[12,"flags","","",32,null],[3,"__wasi_event_t","","",null,null],[12,"userdata","","",33,null],[12,"error","","",33,null],[12,"type_","","",33,null],[12,"u","","",33,null],[3,"__wasi_prestat_u_dir_t","","",null,null],[12,"pr_name_len","","",34,null],[3,"__wasi_prestat_t","","",null,null],[12,"pr_type","","",35,null],[12,"u","","",35,null],[3,"__wasi_fdstat_t","","",null,null],[12,"fs_filetype","","",36,null],[12,"fs_flags","","",36,null],[12,"fs_rights_base","","",36,null],[12,"fs_rights_inheriting","","",36,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",37,null],[12,"st_ino","","",37,null],[12,"st_filetype","","",37,null],[12,"st_nlink","","",37,null],[12,"st_size","","",37,null],[12,"st_atim","","",37,null],[12,"st_mtim","","",37,null],[12,"st_ctim","","",37,null],[3,"__wasi_iovec_t","","",null,null],[12,"buf","","",38,null],[12,"buf_len","","",38,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"clock_id","","",39,null],[12,"timeout","","",39,null],[12,"precision","","",39,null],[12,"flags","","",39,null],[3,"__wasi_subscription_fs_readwrite_t","","",null,null],[12,"fd","","",40,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",41,null],[12,"type_","","",41,null],[12,"u","","",41,null],[3,"WasiSubscription","","Safe Rust wrapper around `__wasi_subscription_t`",null,null],[12,"user_data","","",42,null],[12,"event_type","","",42,null],[19,"__wasi_event_u","","",null,null],[12,"fd_readwrite","","",43,null],[19,"__wasi_prestat_u","","",null,null],[12,"dir","","",44,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",45,null],[12,"fd_readwrite","","",45,null],[4,"EventEnum","","",null,null],[13,"FdReadWrite","","",46,null],[12,"nbytes","wasmer_wasi::types::EventEnum","",47,null],[12,"flags","","",47,null],[4,"PrestatEnum","wasmer_wasi::types","",null,null],[13,"Dir","","",48,null],[12,"pr_name_len","wasmer_wasi::types::PrestatEnum","",49,null],[4,"EventType","wasmer_wasi::types","Safe Rust wrapper around `__wasi_subscription_t::type_`…",null,null],[13,"Clock","","",50,null],[13,"Read","","",50,null],[13,"Write","","",50,null],[4,"SubscriptionEnum","","",null,null],[13,"Clock","","",51,null],[13,"FdReadWrite","","",51,null],[5,"dirent_to_le_bytes","","",null,[[["__wasi_dirent_t",3]],["vec",3]]],[5,"eventtype_to_str","","",null,[[["__wasi_eventtype_t",6]]]],[5,"wasi_filetype_to_name","","",null,[[["__wasi_filetype_t",6]]]],[5,"print_right_set","","function for debugging rights issues",null,[[["__wasi_rights_t",6]]]],[5,"right_to_string","","expects a single right, returns None if out of bounds or >…",null,[[["__wasi_rights_t",6]],["option",4]]],[0,"snapshot0","","",null,null],[3,"__wasi_subscription_clock_t","wasmer_wasi::types::snapshot0","",null,null],[12,"userdata","","",52,null],[12,"clock_id","","",52,null],[12,"timeout","","",52,null],[12,"precision","","",52,null],[12,"flags","","",52,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",53,null],[12,"type_","","",53,null],[12,"u","","",53,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",54,null],[12,"st_ino","","",54,null],[12,"st_filetype","","",54,null],[12,"st_nlink","","",54,null],[12,"st_size","","",54,null],[12,"st_atim","","",54,null],[12,"st_mtim","","",54,null],[12,"st_ctim","","",54,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",55,null],[12,"fd_readwrite","","",55,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[6,"__wasi_advice_t","wasmer_wasi::types","",null,null],[6,"__wasi_clockid_t","","",null,null],[6,"__wasi_device_t","","",null,null],[6,"__wasi_dircookie_t","","",null,null],[6,"__wasi_errno_t","","",null,null],[6,"__wasi_eventrwflags_t","","",null,null],[6,"__wasi_eventtype_t","","",null,null],[6,"__wasi_exitcode_t","","",null,null],[6,"__wasi_fd_t","","",null,null],[6,"__wasi_fdflags_t","","",null,null],[6,"__wasi_preopentype_t","","",null,null],[6,"__wasi_filedelta_t","","",null,null],[6,"__wasi_filesize_t","","",null,null],[6,"__wasi_filetype_t","","",null,null],[6,"__wasi_fstflags_t","","",null,null],[6,"__wasi_inode_t","","",null,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_lookupflags_t","","",null,null],[6,"__wasi_oflags_t","","",null,null],[6,"__wasi_riflags_t","","",null,null],[6,"__wasi_rights_t","","",null,null],[6,"__wasi_roflags_t","","",null,null],[6,"__wasi_sdflags_t","","",null,null],[6,"__wasi_siflags_t","","",null,null],[6,"__wasi_signal_t","","",null,null],[6,"__wasi_subclockflags_t","","",null,null],[6,"__wasi_timestamp_t","","",null,null],[6,"__wasi_userdata_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_ADVICE_NORMAL","","",null,null],[17,"__WASI_ADVICE_SEQUENTIAL","","",null,null],[17,"__WASI_ADVICE_RANDOM","","",null,null],[17,"__WASI_ADVICE_WILLNEED","","",null,null],[17,"__WASI_ADVICE_DONTNEED","","",null,null],[17,"__WASI_ADVICE_NOREUSE","","",null,null],[17,"__WASI_CLOCK_REALTIME","","",null,null],[17,"__WASI_CLOCK_MONOTONIC","","",null,null],[17,"__WASI_CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"__WASI_CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"__WASI_DIRCOOKIE_START","","",null,null],[17,"__WASI_ESUCCESS","","",null,null],[17,"__WASI_E2BIG","","",null,null],[17,"__WASI_EACCES","","",null,null],[17,"__WASI_EADDRINUSE","","",null,null],[17,"__WASI_EADDRNOTAVAIL","","",null,null],[17,"__WASI_EAFNOSUPPORT","","",null,null],[17,"__WASI_EAGAIN","","",null,null],[17,"__WASI_EALREADY","","",null,null],[17,"__WASI_EBADF","","",null,null],[17,"__WASI_EBADMSG","","",null,null],[17,"__WASI_EBUSY","","",null,null],[17,"__WASI_ECANCELED","","",null,null],[17,"__WASI_ECHILD","","",null,null],[17,"__WASI_ECONNABORTED","","",null,null],[17,"__WASI_ECONNREFUSED","","",null,null],[17,"__WASI_ECONNRESET","","",null,null],[17,"__WASI_EDEADLK","","",null,null],[17,"__WASI_EDESTADDRREQ","","",null,null],[17,"__WASI_EDOM","","",null,null],[17,"__WASI_EDQUOT","","",null,null],[17,"__WASI_EEXIST","","",null,null],[17,"__WASI_EFAULT","","",null,null],[17,"__WASI_EFBIG","","",null,null],[17,"__WASI_EHOSTUNREACH","","",null,null],[17,"__WASI_EIDRM","","",null,null],[17,"__WASI_EILSEQ","","",null,null],[17,"__WASI_EINPROGRESS","","",null,null],[17,"__WASI_EINTR","","",null,null],[17,"__WASI_EINVAL","","",null,null],[17,"__WASI_EIO","","",null,null],[17,"__WASI_EISCONN","","",null,null],[17,"__WASI_EISDIR","","",null,null],[17,"__WASI_ELOOP","","",null,null],[17,"__WASI_EMFILE","","",null,null],[17,"__WASI_EMLINK","","",null,null],[17,"__WASI_EMSGSIZE","","",null,null],[17,"__WASI_EMULTIHOP","","",null,null],[17,"__WASI_ENAMETOOLONG","","",null,null],[17,"__WASI_ENETDOWN","","",null,null],[17,"__WASI_ENETRESET","","",null,null],[17,"__WASI_ENETUNREACH","","",null,null],[17,"__WASI_ENFILE","","",null,null],[17,"__WASI_ENOBUFS","","",null,null],[17,"__WASI_ENODEV","","",null,null],[17,"__WASI_ENOENT","","",null,null],[17,"__WASI_ENOEXEC","","",null,null],[17,"__WASI_ENOLCK","","",null,null],[17,"__WASI_ENOLINK","","",null,null],[17,"__WASI_ENOMEM","","",null,null],[17,"__WASI_ENOMSG","","",null,null],[17,"__WASI_ENOPROTOOPT","","",null,null],[17,"__WASI_ENOSPC","","",null,null],[17,"__WASI_ENOSYS","","",null,null],[17,"__WASI_ENOTCONN","","",null,null],[17,"__WASI_ENOTDIR","","",null,null],[17,"__WASI_ENOTEMPTY","","",null,null],[17,"__WASI_ENOTRECOVERABLE","","",null,null],[17,"__WASI_ENOTSOCK","","",null,null],[17,"__WASI_ENOTSUP","","",null,null],[17,"__WASI_ENOTTY","","",null,null],[17,"__WASI_ENXIO","","",null,null],[17,"__WASI_EOVERFLOW","","",null,null],[17,"__WASI_EOWNERDEAD","","",null,null],[17,"__WASI_EPERM","","",null,null],[17,"__WASI_EPIPE","","",null,null],[17,"__WASI_EPROTO","","",null,null],[17,"__WASI_EPROTONOSUPPORT","","",null,null],[17,"__WASI_EPROTOTYPE","","",null,null],[17,"__WASI_ERANGE","","",null,null],[17,"__WASI_EROFS","","",null,null],[17,"__WASI_ESPIPE","","",null,null],[17,"__WASI_ESRCH","","",null,null],[17,"__WASI_ESTALE","","",null,null],[17,"__WASI_ETIMEDOUT","","",null,null],[17,"__WASI_ETXTBSY","","",null,null],[17,"__WASI_EXDEV","","",null,null],[17,"__WASI_ENOTCAPABLE","","",null,null],[17,"__WASI_EVENT_FD_READWRITE_HANGUP","","",null,null],[17,"__WASI_EVENTTYPE_CLOCK","","",null,null],[17,"__WASI_EVENTTYPE_FD_READ","","",null,null],[17,"__WASI_EVENTTYPE_FD_WRITE","","",null,null],[17,"__WASI_STDIN_FILENO","","",null,null],[17,"__WASI_STDOUT_FILENO","","",null,null],[17,"__WASI_STDERR_FILENO","","",null,null],[17,"__WASI_FDFLAG_APPEND","","",null,null],[17,"__WASI_FDFLAG_DSYNC","","",null,null],[17,"__WASI_FDFLAG_NONBLOCK","","",null,null],[17,"__WASI_FDFLAG_RSYNC","","",null,null],[17,"__WASI_FDFLAG_SYNC","","",null,null],[17,"__WASI_PREOPENTYPE_DIR","","",null,null],[17,"__WASI_FILETYPE_UNKNOWN","","",null,null],[17,"__WASI_FILETYPE_BLOCK_DEVICE","","",null,null],[17,"__WASI_FILETYPE_CHARACTER_DEVICE","","",null,null],[17,"__WASI_FILETYPE_DIRECTORY","","",null,null],[17,"__WASI_FILETYPE_REGULAR_FILE","","",null,null],[17,"__WASI_FILETYPE_SOCKET_DGRAM","","",null,null],[17,"__WASI_FILETYPE_SOCKET_STREAM","","",null,null],[17,"__WASI_FILETYPE_SYMBOLIC_LINK","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM_NOW","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM_NOW","","",null,null],[17,"__WASI_LOOKUP_SYMLINK_FOLLOW","","",null,null],[17,"__WASI_O_CREAT","","",null,null],[17,"__WASI_O_DIRECTORY","","",null,null],[17,"__WASI_O_EXCL","","",null,null],[17,"__WASI_O_TRUNC","","",null,null],[17,"__WASI_SOCK_RECV_PEEK","","",null,null],[17,"__WASI_SOCK_RECV_WAITALL","","",null,null],[17,"__WASI_RIGHT_FD_DATASYNC","","",null,null],[17,"__WASI_RIGHT_FD_READ","","",null,null],[17,"__WASI_RIGHT_FD_SEEK","","",null,null],[17,"__WASI_RIGHT_FD_FDSTAT_SET_FLAGS","","",null,null],[17,"__WASI_RIGHT_FD_SYNC","","",null,null],[17,"__WASI_RIGHT_FD_TELL","","",null,null],[17,"__WASI_RIGHT_FD_WRITE","","",null,null],[17,"__WASI_RIGHT_FD_ADVISE","","",null,null],[17,"__WASI_RIGHT_FD_ALLOCATE","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_FILE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_OPEN","","",null,null],[17,"__WASI_RIGHT_FD_READDIR","","",null,null],[17,"__WASI_RIGHT_PATH_READLINK","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_PATH_SYMLINK","","",null,null],[17,"__WASI_RIGHT_PATH_REMOVE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_UNLINK_FILE","","",null,null],[17,"__WASI_RIGHT_POLL_FD_READWRITE","","",null,null],[17,"__WASI_RIGHT_SOCK_SHUTDOWN","","",null,null],[17,"__WASI_SOCK_RECV_DATA_TRUNCATED","","",null,null],[17,"__WASI_SHUT_RD","","",null,null],[17,"__WASI_SHUT_WR","","",null,null],[17,"__WASI_SIGHUP","","",null,null],[17,"__WASI_SIGINT","","",null,null],[17,"__WASI_SIGQUIT","","",null,null],[17,"__WASI_SIGILL","","",null,null],[17,"__WASI_SIGTRAP","","",null,null],[17,"__WASI_SIGABRT","","",null,null],[17,"__WASI_SIGBUS","","",null,null],[17,"__WASI_SIGFPE","","",null,null],[17,"__WASI_SIGKILL","","",null,null],[17,"__WASI_SIGUSR1","","",null,null],[17,"__WASI_SIGSEGV","","",null,null],[17,"__WASI_SIGUSR2","","",null,null],[17,"__WASI_SIGPIPE","","",null,null],[17,"__WASI_SIGALRM","","",null,null],[17,"__WASI_SIGTERM","","",null,null],[17,"__WASI_SIGCHLD","","",null,null],[17,"__WASI_SIGCONT","","",null,null],[17,"__WASI_SIGSTOP","","",null,null],[17,"__WASI_SIGTSTP","","",null,null],[17,"__WASI_SIGTTIN","","",null,null],[17,"__WASI_SIGTTOU","","",null,null],[17,"__WASI_SIGURG","","",null,null],[17,"__WASI_SIGXCPU","","",null,null],[17,"__WASI_SIGXFSZ","","",null,null],[17,"__WASI_SIGVTALRM","","",null,null],[17,"__WASI_SIGPROF","","",null,null],[17,"__WASI_SIGWINCH","","",null,null],[17,"__WASI_SIGPOLL","","",null,null],[17,"__WASI_SIGPWR","","",null,null],[17,"__WASI_SIGSYS","","",null,null],[17,"__WASI_SUBSCRIPTION_CLOCK_ABSTIME","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[17,"ALL_RIGHTS","wasmer_wasi","all the rights enabled",null,null],[17,"VIRTUAL_ROOT_FD","","the fd value of the virtual root",null,null],[8,"WasiFile","","This trait relies on your file closing when it goes out of…",null,null],[10,"last_accessed","","the last time the file was accessed in nanoseconds as a…",28,[[],["__wasi_timestamp_t",6]]],[10,"last_modified","","the last time the file was modified in nanoseconds as a…",28,[[],["__wasi_timestamp_t",6]]],[10,"created_time","","the time at which the file was created in nanoseconds as a…",28,[[],["__wasi_timestamp_t",6]]],[11,"set_last_accessed","wasmer_wasi::state::types","set the last time the file was accessed in nanoseconds as…",28,[[["__wasi_timestamp_t",6]]]],[11,"set_last_modified","","set the last time the file was modified in nanoseconds as…",28,[[["__wasi_timestamp_t",6]]]],[11,"set_created_time","","set the time at which the file was created in nanoseconds…",28,[[["__wasi_timestamp_t",6]]]],[10,"size","wasmer_wasi","the size of the file in bytes",28,[[]]],[10,"set_len","","Change the size of the file, if the `new_size` is greater…",28,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[10,"unlink","","Request deletion of the file",28,[[],[["result",4],["wasifserror",4]]]],[11,"sync_to_disk","wasmer_wasi::state::types","Store file contents and metadata to disk Default…",28,[[],[["result",4],["wasifserror",4]]]],[11,"rename_file","","Moves the file to a new location NOTE: the signature of…",28,[[["path",3]],[["result",4],["wasifserror",4]]]],[10,"bytes_available","wasmer_wasi","Returns the number of bytes available. This function must…",28,[[],[["wasifserror",4],["result",4]]]],[11,"get_raw_fd","wasmer_wasi::state::types","Used for polling. Default returns `None` because this…",28,[[],["option",4]]],[11,"memory_ref","wasmer_wasi","Get access to the underlying data.",5,[[],[["option",4],["memory",3]]]],[11,"memory_ref_unchecked","","Gets the item without checking if it\'s been initialized.",5,[[],["memory",3]]],[11,"new","","",5,[[["wasistate",3]]]],[11,"import_object","","",5,[[["module",3]],[["result",4],["importobject",3],["wasierror",4]]]],[11,"state","","Get the WASI state",5,[[],[["mutexguard",3],["wasistate",3]]]],[11,"memory","","Get a reference to the memory",5,[[],["memory",3]]],[11,"get_memory_and_wasi_state","","",5,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"erased_serialize","","",56,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"erased_serialize","","",57,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"erased_serialize","","",58,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","wasmer_wasi::ptr","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"init","","",59,[[]]],[11,"deref","","",59,[[]]],[11,"deref_mut","","",59,[[]]],[11,"drop","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from_array","","",12,[[]]],[11,"from_slice","","",12,[[],[["result",4],["tryfromsliceerror",3]]]],[11,"into_array","","",12,[[]]],[11,"empty_array","","",12,[[]]],[11,"from_c_struct","","",12,[[]]],[11,"into_c_struct","","",12,[[]]],[11,"wasm_types","","",12,[[]]],[11,"equivalent","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from_array","","",13,[[]]],[11,"from_slice","","",13,[[],[["result",4],["tryfromsliceerror",3]]]],[11,"into_array","","",13,[[]]],[11,"empty_array","","",13,[[]]],[11,"from_c_struct","","",13,[[]]],[11,"into_c_struct","","",13,[[]]],[11,"wasm_types","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","wasmer_wasi::state","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"erased_serialize","","",16,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","wasmer_wasi::state::builder","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","wasmer_wasi::state::types","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"par_bridge","","",25,[[],["iterbridge",3]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","wasmer_wasi::syscalls::types","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"equivalent","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"equivalent","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"erased_serialize","","",37,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"equivalent","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"equivalent","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"equivalent","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"init","","",41,[[]]],[11,"deref","","",41,[[]]],[11,"deref_mut","","",41,[[]]],[11,"drop","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","wasmer_wasi::syscalls::types::snapshot0","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"equivalent","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"equivalent","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"erased_serialize","","",54,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"to_export","wasmer_wasi::ptr","",11,[[],["export",4]]],[11,"get_self_from_extern","","",11,[[["extern",4]],[["exporterror",4],["memory",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",12,[[["wasmptr",3]]]],[11,"clone","","",11,[[],["memory",3]]],[11,"clone","","",12,[[],["wasmptr",3]]],[11,"size_of_val","","",11,[[["memoryusagetracker",8]]]],[11,"to_native","","",12,[[]]],[11,"from_native","","",12,[[],["wasmptr",3]]],[11,"eq","wasmer_wasi::state","",14,[[["index",3]]]],[11,"ne","","",14,[[["index",3]]]],[11,"cmp","","",14,[[["index",3]],["ordering",4]]],[11,"partial_cmp","","",14,[[["index",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["index",3]]]],[11,"le","","",14,[[["index",3]]]],[11,"gt","","",14,[[["index",3]]]],[11,"ge","","",14,[[["index",3]]]],[11,"serialize","","",14,[[],["result",4]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",14,[[],["index",3]]],[11,"hash","","",14,[[]]],[11,"deserialize","","",14,[[],[["index",3],["result",4]]]],[11,"last_accessed","wasmer_wasi::state::types","",26,[[]]],[11,"set_last_accessed","","",26,[[["__wasi_timestamp_t",6]]]],[11,"last_modified","","",26,[[]]],[11,"set_last_modified","","",26,[[["__wasi_timestamp_t",6]]]],[11,"created_time","","",26,[[]]],[11,"set_created_time","","",26,[[["__wasi_timestamp_t",6]]]],[11,"size","","",26,[[]]],[11,"set_len","","",26,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",26,[[],[["result",4],["wasifserror",4]]]],[11,"sync_to_disk","","",26,[[],[["result",4],["wasifserror",4]]]],[11,"rename_file","","",26,[[["path",3]],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",26,[[],[["wasifserror",4],["result",4]]]],[11,"get_raw_fd","","",26,[[],["option",4]]],[11,"last_accessed","wasmer_wasi","",58,[[]]],[11,"last_modified","","",58,[[]]],[11,"created_time","","",58,[[]]],[11,"size","","",58,[[]]],[11,"set_len","","",58,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",58,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",58,[[],[["wasifserror",4],["result",4]]]],[11,"get_raw_fd","","",58,[[],["option",4]]],[11,"last_accessed","","",56,[[]]],[11,"last_modified","","",56,[[]]],[11,"created_time","","",56,[[]]],[11,"size","","",56,[[]]],[11,"set_len","","",56,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",56,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",56,[[],[["wasifserror",4],["result",4]]]],[11,"get_raw_fd","","",56,[[],["option",4]]],[11,"last_accessed","","",57,[[]]],[11,"last_modified","","",57,[[]]],[11,"created_time","","",57,[[]]],[11,"size","","",57,[[]]],[11,"set_len","","",57,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",57,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",57,[[],[["wasifserror",4],["result",4]]]],[11,"get_raw_fd","","",57,[[],["option",4]]],[11,"last_accessed","","",1,[[]]],[11,"last_modified","","",1,[[]]],[11,"created_time","","",1,[[]]],[11,"size","","",1,[[]]],[11,"set_len","","",1,[[],[["result",4],["wasifserror",4]]]],[11,"unlink","","",1,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",1,[[],[["wasifserror",4],["result",4]]]],[11,"from","wasmer_wasi::ptr","",13,[[]]],[11,"from","wasmer_wasi","",6,[[["error",3]]]],[11,"next","wasmer_wasi::state::types","",25,[[],["option",4]]],[11,"clone","wasmer_wasi::ptr","",13,[[]]],[11,"clone","wasmer_wasi","",6,[[],["wasifserror",4]]],[11,"clone","wasmer_wasi::state::types","",27,[[],["pollevent",4]]],[11,"clone","","",24,[[],["polleventbuilder",3]]],[11,"clone","wasmer_wasi::syscalls::types","",30,[[],["__wasi_ciovec_t",3]]],[11,"clone","","",31,[[],["__wasi_dirent_t",3]]],[11,"clone","","",32,[[],["__wasi_event_fd_readwrite_t",3]]],[11,"clone","","",43,[[],["__wasi_event_u",19]]],[11,"clone","","",46,[[],["eventenum",4]]],[11,"clone","","",33,[[],["__wasi_event_t",3]]],[11,"clone","","",34,[[],["__wasi_prestat_u_dir_t",3]]],[11,"clone","","",44,[[],["__wasi_prestat_u",19]]],[11,"clone","","",35,[[],["__wasi_prestat_t",3]]],[11,"clone","","",48,[[],["prestatenum",4]]],[11,"clone","","",36,[[],["__wasi_fdstat_t",3]]],[11,"clone","","",37,[[],["__wasi_filestat_t",3]]],[11,"clone","","",38,[[],["__wasi_iovec_t",3]]],[11,"clone","","",39,[[],["__wasi_subscription_clock_t",3]]],[11,"clone","","",40,[[],["__wasi_subscription_fs_readwrite_t",3]]],[11,"clone","","",45,[[],["__wasi_subscription_u",19]]],[11,"clone","","",41,[[],["__wasi_subscription_t",3]]],[11,"clone","","",50,[[],["eventtype",4]]],[11,"clone","","",42,[[],["wasisubscription",3]]],[11,"clone","wasmer_wasi::syscalls::types::snapshot0","",52,[[],["__wasi_subscription_clock_t",3]]],[11,"clone","","",55,[[],["__wasi_subscription_u",19]]],[11,"clone","","",53,[[],["__wasi_subscription_t",3]]],[11,"clone","","",54,[[],["__wasi_filestat_t",3]]],[11,"clone","wasmer_wasi","",8,[[],["wasiversion",4]]],[11,"clone","","",5,[[],["wasienv",3]]],[11,"default","","",4,[[],["wasistatebuilder",3]]],[11,"default","wasmer_wasi::state::builder","",22,[[],["preopendirbuilder",3]]],[11,"default","","",23,[[],["preopeneddir",3]]],[11,"default","wasmer_wasi","",1,[[],["pipe",3]]],[11,"default","wasmer_wasi::syscalls::types","",37,[[]]],[11,"eq","wasmer_wasi::ptr","",13,[[]]],[11,"eq","wasmer_wasi","",7,[[["wasistatecreationerror",4]]]],[11,"ne","","",7,[[["wasistatecreationerror",4]]]],[11,"eq","","",6,[[["wasifserror",4]]]],[11,"ne","","",6,[[["wasifserror",4]]]],[11,"eq","wasmer_wasi::syscalls::types","",30,[[["__wasi_ciovec_t",3]]]],[11,"ne","","",30,[[["__wasi_ciovec_t",3]]]],[11,"eq","","",31,[[["__wasi_dirent_t",3]]]],[11,"ne","","",31,[[["__wasi_dirent_t",3]]]],[11,"eq","","",32,[[["__wasi_event_fd_readwrite_t",3]]]],[11,"ne","","",32,[[["__wasi_event_fd_readwrite_t",3]]]],[11,"eq","","",34,[[["__wasi_prestat_u_dir_t",3]]]],[11,"ne","","",34,[[["__wasi_prestat_u_dir_t",3]]]],[11,"eq","","",36,[[["__wasi_fdstat_t",3]]]],[11,"ne","","",36,[[["__wasi_fdstat_t",3]]]],[11,"eq","","",37,[[["__wasi_filestat_t",3]]]],[11,"ne","","",37,[[["__wasi_filestat_t",3]]]],[11,"eq","","",38,[[["__wasi_iovec_t",3]]]],[11,"ne","","",38,[[["__wasi_iovec_t",3]]]],[11,"eq","","",39,[[["__wasi_subscription_clock_t",3]]]],[11,"ne","","",39,[[["__wasi_subscription_clock_t",3]]]],[11,"eq","","",40,[[["__wasi_subscription_fs_readwrite_t",3]]]],[11,"ne","","",40,[[["__wasi_subscription_fs_readwrite_t",3]]]],[11,"eq","wasmer_wasi::syscalls::types::snapshot0","",52,[[["__wasi_subscription_clock_t",3]]]],[11,"ne","","",52,[[["__wasi_subscription_clock_t",3]]]],[11,"eq","","",54,[[["__wasi_filestat_t",3]]]],[11,"ne","","",54,[[["__wasi_filestat_t",3]]]],[11,"eq","wasmer_wasi","",8,[[["wasiversion",4]]]],[11,"fmt","wasmer_wasi::ptr","",13,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state::builder","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi","",6,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state::types","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::syscalls::types","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::syscalls::types::snapshot0","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"try_from","wasmer_wasi::syscalls::types","",42,[[["__wasi_subscription_t",3]],["result",4]]],[11,"try_from","","",41,[[["wasisubscription",3]],["result",4]]],[11,"source","wasmer_wasi","",7,[[],[["option",4],["error",8]]]],[11,"read","wasmer_wasi::state::types","",26,[[],["result",6]]],[11,"read_to_end","","",26,[[["vec",3]],["result",6]]],[11,"read_to_string","","",26,[[["string",3]],["result",6]]],[11,"read_exact","","",26,[[],["result",6]]],[11,"read","wasmer_wasi","",58,[[],["result",6]]],[11,"read_to_end","","",58,[[["vec",3]],["result",6]]],[11,"read_to_string","","",58,[[["string",3]],["result",6]]],[11,"read_exact","","",58,[[],["result",6]]],[11,"read","","",56,[[],["result",6]]],[11,"read_to_end","","",56,[[["vec",3]],["result",6]]],[11,"read_to_string","","",56,[[["string",3]],["result",6]]],[11,"read_exact","","",56,[[],["result",6]]],[11,"read","","",57,[[],["result",6]]],[11,"read_to_end","","",57,[[["vec",3]],["result",6]]],[11,"read_to_string","","",57,[[["string",3]],["result",6]]],[11,"read_exact","","",57,[[],["result",6]]],[11,"read","","",1,[[],["result",6]]],[11,"seek","wasmer_wasi::state::types","",26,[[["seekfrom",4]],["result",6]]],[11,"seek","wasmer_wasi","",58,[[["seekfrom",4]],["result",6]]],[11,"seek","","",56,[[["seekfrom",4]],["result",6]]],[11,"seek","","",57,[[["seekfrom",4]],["result",6]]],[11,"seek","","",1,[[["seekfrom",4]],["result",6]]],[11,"write","wasmer_wasi::state::types","",26,[[],["result",6]]],[11,"flush","","",26,[[],["result",6]]],[11,"write_all","","",26,[[],["result",6]]],[11,"write_fmt","","",26,[[["arguments",3]],["result",6]]],[11,"write","wasmer_wasi","",58,[[],["result",6]]],[11,"flush","","",58,[[],["result",6]]],[11,"write_all","","",58,[[],["result",6]]],[11,"write_fmt","","",58,[[["arguments",3]],["result",6]]],[11,"write","","",56,[[],["result",6]]],[11,"flush","","",56,[[],["result",6]]],[11,"write_all","","",56,[[],["result",6]]],[11,"write_fmt","","",56,[[["arguments",3]],["result",6]]],[11,"write","","",57,[[],["result",6]]],[11,"flush","","",57,[[],["result",6]]],[11,"write_all","","",57,[[],["result",6]]],[11,"write_fmt","","",57,[[["arguments",3]],["result",6]]],[11,"write","","",1,[[],["result",6]]],[11,"flush","","",1,[[],["result",6]]],[11,"init_with_instance","","",5,[[["instance",3]],[["hostenviniterror",4],["result",4]]]],[11,"to_native","wasmer_wasi::ptr","",13,[[]]],[11,"from_native","","",13,[[]]],[11,"deserialize","wasmer_wasi::state::types","",26,[[],[["hostfile",3],["result",4]]]],[11,"deserialize","wasmer_wasi","",58,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","wasmer_wasi::state","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","wasmer_wasi","",0,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","wasmer_wasi::syscalls::types","",37,[[],["result",4]]],[11,"deserialize","wasmer_wasi::syscalls::types::snapshot0","",54,[[],["result",4]]],[11,"serialize","wasmer_wasi::state::types","",28,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","wasmer_wasi","",58,[[],["result",4]]],[11,"serialize","","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","wasmer_wasi::state","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","wasmer_wasi","",0,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","wasmer_wasi::syscalls::types","",37,[[],["result",4]]],[11,"serialize","wasmer_wasi::syscalls::types::snapshot0","",54,[[],["result",4]]],[11,"new","wasmer_wasi::ptr","Creates a new host `Memory` from the provided…",11,[[["store",3],["memorytype",3]],[["memory",3],["memoryerror",4],["result",4]]]],[11,"ty","","Returns the [`MemoryType`] of the `Memory`.",11,[[],["memorytype",3]]],[11,"store","","Returns the [`Store`] where the `Memory` belongs.",11,[[],["store",3]]],[11,"data_unchecked","","Retrieve a slice of the memory contents.",11,[[]]],[11,"data_unchecked_mut","","Retrieve a mutable slice of the memory contents.",11,[[]]],[11,"data_ptr","","Returns the pointer to the raw bytes of the `Memory`.",11,[[]]],[11,"data_size","","Returns the size (in bytes) of the `Memory`.",11,[[]]],[11,"size","","Returns the size (in [`Pages`]) of the `Memory`.",11,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of WebAssembly…",11,[[],[["result",4],["pages",3],["memoryerror",4]]]],[11,"view","","Return a \\\"view\\\" of the currently accessible memory. By…",11,[[],[["memoryview",3],["nonatomically",3]]]],[11,"same","","Returns whether or not these two memories refer to the…",11,[[["memory",3]]]],[11,"new","","Create a new `WasmPtr` at the given offset.",12,[[],["wasmptr",3]]],[11,"offset","","Get the offset into Wasm linear memory for this `WasmPtr`.",12,[[]]],[11,"deref","","Dereference the `WasmPtr` getting access to a `&Cell<T>`…",12,[[["memory",3]],[["option",4],["cell",3]]]],[11,"deref_mut","","Mutably dereference this `WasmPtr` getting a `&mut…",12,[[["memory",3]],[["cell",3],["option",4]]]],[11,"deref","","Dereference the `WasmPtr` getting access to a `&[Cell<T>]`…",12,[[["memory",3]],["option",4]]],[11,"deref_mut","","Mutably dereference this `WasmPtr` getting a `&mut…",12,[[["memory",3]],["option",4]]],[11,"get_utf8_str","","Get a UTF-8 string from the `WasmPtr` with the given length.",12,[[["memory",3]],["option",4]]],[11,"get_utf8_string","","Get a UTF-8 `String` from the `WasmPtr` with the given…",12,[[["memory",3]],[["string",3],["option",4]]]],[11,"get_utf8_str_with_nul","","Get a UTF-8 string from the `WasmPtr`, where the string is…",12,[[["memory",3]],["option",4]]],[11,"get_utf8_string_with_nul","","Get a UTF-8 `String` from the `WasmPtr`, where the string…",12,[[["memory",3]],[["string",3],["option",4]]]],[11,"from_raw_parts","wasmer_wasi::state","Create a new `Index` from its raw parts.",14,[[],["index",3]]],[11,"into_raw_parts","","Convert this `Index` into its raw parts.",14,[[]]]],"p":[[3,"Fd"],[3,"Pipe"],[3,"WasiFs"],[3,"WasiState"],[3,"WasiStateBuilder"],[3,"WasiEnv"],[4,"WasiFsError"],[4,"WasiStateCreationError"],[4,"WasiVersion"],[4,"WasiError"],[8,"FromToNativeWasmType"],[3,"Memory"],[3,"BaseWasmPtr"],[3,"WasmPtr"],[3,"Inode"],[3,"InodeVal"],[4,"Kind"],[13,"File"],[13,"Dir"],[13,"Root"],[13,"Symlink"],[13,"Buffer"],[3,"PreopenDirBuilder"],[3,"PreopenedDir"],[3,"PollEventBuilder"],[3,"PollEventIter"],[3,"HostFile"],[4,"PollEvent"],[8,"WasiFile"],[8,"Upcastable"],[3,"__wasi_ciovec_t"],[3,"__wasi_dirent_t"],[3,"__wasi_event_fd_readwrite_t"],[3,"__wasi_event_t"],[3,"__wasi_prestat_u_dir_t"],[3,"__wasi_prestat_t"],[3,"__wasi_fdstat_t"],[3,"__wasi_filestat_t"],[3,"__wasi_iovec_t"],[3,"__wasi_subscription_clock_t"],[3,"__wasi_subscription_fs_readwrite_t"],[3,"__wasi_subscription_t"],[3,"WasiSubscription"],[19,"__wasi_event_u"],[19,"__wasi_prestat_u"],[19,"__wasi_subscription_u"],[4,"EventEnum"],[13,"FdReadWrite"],[4,"PrestatEnum"],[13,"Dir"],[4,"EventType"],[4,"SubscriptionEnum"],[3,"__wasi_subscription_clock_t"],[3,"__wasi_subscription_t"],[3,"__wasi_filestat_t"],[19,"__wasi_subscription_u"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Array"],[3,"Item"]]},\
"wasmer_wasi_experimental_io_devices":{"doc":"","i":[[3,"FrameBufferState","wasmer_wasi_experimental_io_devices","",null,null],[12,"data_1","","",0,null],[12,"data_2","","",0,null],[12,"x_size","","",0,null],[12,"y_size","","",0,null],[12,"front_buffer","","",0,null],[12,"window","","",0,null],[12,"last_mouse_pos","","",0,null],[12,"inputs","","",0,null],[12,"keys_pressed","","",0,null],[3,"FrameBuffer","","",null,null],[12,"fb_type","","",1,null],[12,"cursor","","",1,null],[4,"FrameBufferFileType","","",null,null],[13,"Buffer","","",2,null],[13,"Resolution","","",2,null],[13,"Draw","","",2,null],[13,"Input","","",2,null],[5,"__init9363348193884183279","","",null,[[]]],[5,"initialize","","",null,[[["wasifs",3]],[["result",4],["string",3]]]],[0,"util","","",null,null],[4,"InputEvent","wasmer_wasi_experimental_io_devices::util","",null,null],[13,"KeyPress","","",3,null],[13,"KeyRelease","","",3,null],[13,"MouseEvent","","",3,null],[13,"MouseMoved","","",3,null],[13,"WindowClosed","","",3,null],[5,"bytes_for_input_event","","Returns the tag as the first return value The data as the…",null,[[["inputevent",4]]]],[5,"map_key_to_bytes","","",null,[[["key",4]]]],[17,"KEY_PRESS","","",null,null],[17,"MOUSE_MOVE","","",null,null],[17,"KEY_RELEASE","","",null,null],[17,"MOUSE_PRESS_LEFT","","",null,null],[17,"MOUSE_PRESS_RIGHT","","",null,null],[17,"MOUSE_PRESS_MIDDLE","","",null,null],[17,"WINDOW_CLOSED","","",null,null],[7,"__init9363348193884183279___rust_ctor___ctor","wasmer_wasi_experimental_io_devices","",null,null],[17,"FRAMEBUFFER_STATE","","",null,null],[17,"MAX_X","","",null,null],[17,"MAX_Y","","",null,null],[18,"MAX_INPUTS","","an arbitrary large number",0,null],[11,"new","","",0,[[]]],[11,"create_window","","",0,[[],["window",3]]],[11,"resize","","",0,[[],["option",4]]],[11,"push_input_event","","",0,[[["inputevent",4]],["option",4]]],[11,"fill_input_buffer","","",0,[[],["option",4]]],[11,"draw","","",0,[[]]],[11,"get_idx_info","","",0,[[],["option",4]]],[11,"get_byte","","",0,[[],["option",4]]],[11,"set_byte","","",0,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",2,[[]]],[11,"from","wasmer_wasi_experimental_io_devices::util","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["any",8],["global",3],["box",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",3,[[]]],[11,"clone","","",3,[[],["inputevent",4]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi_experimental_io_devices","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"read","","",1,[[],["result",6]]],[11,"read_to_end","","",1,[[["vec",3]],["result",6]]],[11,"read_to_string","","",1,[[["string",3]],["result",6]]],[11,"read_exact","","",1,[[],["result",6]]],[11,"seek","","",1,[[["seekfrom",4]],["result",6]]],[11,"write","","",1,[[],["result",6]]],[11,"flush","","",1,[[],["result",6]]],[11,"write_all","","",1,[[],["result",6]]],[11,"write_fmt","","",1,[[["arguments",3]],["result",6]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"last_accessed","","",1,[[]]],[11,"last_modified","","",1,[[]]],[11,"created_time","","",1,[[]]],[11,"size","","",1,[[]]],[11,"set_len","","",1,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",1,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",1,[[],[["result",4],["wasifserror",4]]]]],"p":[[3,"FrameBufferState"],[3,"FrameBuffer"],[4,"FrameBufferFileType"],[4,"InputEvent"]]},\
"wasmer_wast":{"doc":"Implementation of the WAST text format for wasmer.","i":[[3,"DirectiveError","wasmer_wast","A Directive Error",null,null],[12,"line","","The line where the directive is defined",0,null],[12,"col","","The column where the directive is defined",0,null],[12,"message","","The failing message received when running the directive",0,null],[3,"DirectiveErrors","","A structure holding the list of all executed directives",null,null],[12,"filename","","The filename where the error occured",1,null],[12,"errors","","The list of errors",1,null],[3,"WasiTest","","Crate holding metadata parsed from the WASI WAST about the…",null,null],[12,"wasm_path","","",2,null],[12,"args","","",2,null],[12,"envs","","",2,null],[12,"dirs","","",2,null],[12,"mapped_dirs","","",2,null],[12,"temp_dirs","","",2,null],[12,"assert_return","","",2,null],[12,"stdin","","",2,null],[12,"assert_stdout","","",2,null],[12,"assert_stderr","","",2,null],[3,"Wast","","The wast test script language allows modules to be defined…",null,null],[12,"current","","Wast files have a concept of a \\\"current\\\" module, which is…",3,null],[12,"import_object","","The Import Object that all wast tests will have",3,null],[12,"instances","","The instances in the test",3,null],[12,"allowed_instantiation_failures","","Allowed failures (ideally this should be empty)",3,null],[12,"match_trap_messages","","If the (expected from .wast, actual) message pair is in…",3,null],[12,"current_is_allowed_failure","","If the current module was an allowed failure, we allow…",3,null],[12,"store","","The wasm Store",3,null],[12,"fail_fast","","A flag indicating if Wast tests should stop as soon as one…",3,null],[12,"disable_assert_trap_exhaustion","","A flag indicating that assert_trap and assert_exhaustion…",3,null],[5,"spectest_importobject","","Return an instance implementing the \\\"spectest\\\" interface…",null,[[["store",3]],["importobject",3]]],[0,"error","","",null,null],[3,"DirectiveError","wasmer_wast::error","A Directive Error",null,null],[12,"line","","The line where the directive is defined",0,null],[12,"col","","The column where the directive is defined",0,null],[12,"message","","The failing message received when running the directive",0,null],[3,"DirectiveErrors","","A structure holding the list of all executed directives",null,null],[12,"filename","","The filename where the error occured",1,null],[12,"errors","","The list of errors",1,null],[0,"spectest","wasmer_wast","",null,null],[5,"spectest_importobject","wasmer_wast::spectest","Return an instance implementing the \\\"spectest\\\" interface…",null,[[["store",3]],["importobject",3]]],[0,"wasi_wast","wasmer_wast","",null,null],[3,"WasiTest","wasmer_wast::wasi_wast","Crate holding metadata parsed from the WASI WAST about the…",null,null],[12,"wasm_path","","",2,null],[12,"args","","",2,null],[12,"envs","","",2,null],[12,"dirs","","",2,null],[12,"mapped_dirs","","",2,null],[12,"temp_dirs","","",2,null],[12,"assert_return","","",2,null],[12,"stdin","","",2,null],[12,"assert_stdout","","",2,null],[12,"assert_stderr","","",2,null],[3,"Envs","","",null,null],[12,"envs","","",4,null],[3,"Args","","",null,null],[12,"args","","",5,null],[3,"Preopens","","",null,null],[12,"preopens","","",6,null],[3,"MapDirs","","",null,null],[12,"map_dirs","","",7,null],[3,"TempDirs","","",null,null],[12,"temp_dirs","","",8,null],[3,"AssertReturn","","",null,null],[12,"return_value","","",9,null],[3,"Stdin","","",null,null],[12,"stream","","",10,null],[3,"AssertStdout","","",null,null],[12,"expected","","",11,null],[3,"AssertStderr","","",null,null],[12,"expected","","",12,null],[3,"OutputCapturerer","","",null,null],[12,"output","","",13,null],[5,"get_stdout_output","","",null,[[["wasistate",3]],[["string",3],["result",6]]]],[5,"get_stderr_output","","",null,[[["wasistate",3]],[["string",3],["result",6]]]],[5,"__init7752682021542986611","","",null,[[]]],[0,"wasi_kw","","",null,null],[3,"wasi_test","wasmer_wast::wasi_wast::wasi_kw","",null,null],[12,"0","","",14,null],[3,"envs","","",null,null],[12,"0","","",15,null],[3,"args","","",null,null],[12,"0","","",16,null],[3,"preopens","","",null,null],[12,"0","","",17,null],[3,"map_dirs","","",null,null],[12,"0","","",18,null],[3,"temp_dirs","","",null,null],[12,"0","","",19,null],[3,"assert_return","","",null,null],[12,"0","","",20,null],[3,"stdin","","",null,null],[12,"0","","",21,null],[3,"assert_stdout","","",null,null],[12,"0","","",22,null],[3,"assert_stderr","","",null,null],[12,"0","","",23,null],[3,"fake_i64_const","","",null,null],[12,"0","","",24,null],[7,"__init7752682021542986611___rust_ctor___ctor","wasmer_wast::wasi_wast","",null,null],[17,"BASE_TEST_DIR","","",null,null],[11,"lex_string","wasmer_wast","Turn a WASI WAST string into a list of tokens.",2,[[],[["result",6],["parsebuffer",3]]]],[11,"parse_tokens","","Turn a WASI WAST list of tokens into a `WasiTest` struct.",2,[[["parsebuffer",3]],["result",6]]],[11,"run","","Execute the WASI test and assert.",2,[[["store",3]],["result",6]]],[11,"create_wasi_env","","Create the wasi env with the given metadata.",2,[[],["result",6]]],[11,"get_version","","Get the correct [`WasiVersion`] from the Wasm [`Module`].",2,[[["module",3]],[["result",6],["wasiversion",4]]]],[11,"get_imports","","Get the correct WASI import object for the given module…",2,[[["module",3],["wasienv",3],["store",3]],[["result",6],["importobject",3]]]],[11,"new","wasmer_wast::wasi_wast","",13,[[]]],[0,"wast","wasmer_wast","",null,null],[3,"Wast","wasmer_wast::wast","The wast test script language allows modules to be defined…",null,null],[12,"current","","Wast files have a concept of a \\\"current\\\" module, which is…",3,null],[12,"import_object","","The Import Object that all wast tests will have",3,null],[12,"instances","","The instances in the test",3,null],[12,"allowed_instantiation_failures","","Allowed failures (ideally this should be empty)",3,null],[12,"match_trap_messages","","If the (expected from .wast, actual) message pair is in…",3,null],[12,"current_is_allowed_failure","","If the current module was an allowed failure, we allow…",3,null],[12,"store","","The wasm Store",3,null],[12,"fail_fast","","A flag indicating if Wast tests should stop as soon as one…",3,null],[12,"disable_assert_trap_exhaustion","","A flag indicating that assert_trap and assert_exhaustion…",3,null],[5,"extract_lane_as_i8","","",null,[[]]],[5,"extract_lane_as_i16","","",null,[[]]],[5,"extract_lane_as_i32","","",null,[[]]],[5,"extract_lane_as_i64","","",null,[[]]],[5,"val_matches","","",null,[[["val",6],["assertexpression",4]],["result",6]]],[5,"f32_matches","","",null,[[["nanpattern",4]]]],[5,"f64_matches","","",null,[[["nanpattern",4]]]],[5,"v128_matches","","",null,[[["v128pattern",4]]]],[5,"v128_format","","",null,[[["v128pattern",4]],["v128pattern",4]]],[8,"NaNCheck","","",null,null],[10,"is_arithmetic_nan","","",25,[[]]],[10,"is_canonical_nan","","",25,[[]]],[11,"new","wasmer_wast","Construct a new instance of `Wast` with a given imports.",3,[[["importobject",3],["store",3]]]],[11,"allow_instantiation_failures","","A list of instantiation failures to allow.",3,[[]]],[11,"allow_trap_message","","A list of alternative messages to permit for a trap failure.",3,[[]]],[11,"disable_assert_and_exhaustion","","Do not run any code in assert_trap or assert_exhaustion.",3,[[]]],[11,"new_with_spectest","","Construct a new instance of `Wast` with the spectests…",3,[[["store",3]]]],[11,"get_instance","","",3,[[["option",4]],[["instance",3],["result",6]]]],[11,"perform_execute","","Perform the action portion of a command.",3,[[["wastexecute",4]],[["vec",3],["result",6]]]],[11,"perform_invoke","","",3,[[["wastinvoke",3]],[["vec",3],["result",6]]]],[11,"assert_return","","",3,[[["vec",3],["result",6]],["result",6]]],[11,"assert_trap","","",3,[[["vec",3],["result",6]],["result",6]]],[11,"run_directive","","",3,[[["wastdirective",4]],["result",6]]],[11,"run_buffer","","Run a wast script from a byte buffer.",3,[[],["result",6]]],[11,"run_file","","Run a wast script from a file.",3,[[["path",3]],["result",6]]],[11,"module","","Define a module and register it.",3,[[["option",4]],["result",6]]],[11,"instantiate","","",3,[[],[["instance",3],["result",6]]]],[11,"register","","Register an instance to make it available for performing…",3,[[["option",4]],["result",6]]],[11,"invoke","","Invoke an exported function from an instance.",3,[[["option",4]],[["vec",3],["result",6]]]],[11,"get","","Get the value of an exported global from an instance.",3,[[["option",4]],[["vec",3],["result",6]]]],[11,"runtime_value","","Translate from a `script::Value` to a `Val`.",3,[[["expression",3]],[["val",6],["result",6]]]],[11,"matches_message_assert_unlinkable","","",3,[[]]],[11,"matches_message_assert_invalid","","",3,[[]]],[11,"matches_message_assert_trap","","",3,[[]]],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","wasmer_wast::wasi_wast","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"vzip","","",13,[[]]],[11,"from","wasmer_wast::wasi_wast::wasi_kw","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"clone","wasmer_wast","",2,[[],["wasitest",3]]],[11,"clone","wasmer_wast::wasi_wast","",4,[[],["envs",3]]],[11,"clone","","",5,[[],["args",3]]],[11,"clone","","",6,[[],["preopens",3]]],[11,"clone","","",7,[[],["mapdirs",3]]],[11,"clone","","",8,[[],["tempdirs",3]]],[11,"clone","","",9,[[],["assertreturn",3]]],[11,"clone","","",10,[[],["stdin",3]]],[11,"clone","","",11,[[],["assertstdout",3]]],[11,"clone","","",12,[[],["assertstderr",3]]],[11,"eq","","",9,[[["assertreturn",3]]]],[11,"ne","","",9,[[["assertreturn",3]]]],[11,"eq","","",10,[[["stdin",3]]]],[11,"ne","","",10,[[["stdin",3]]]],[11,"eq","","",11,[[["assertstdout",3]]]],[11,"ne","","",11,[[["assertstdout",3]]]],[11,"eq","","",12,[[["assertstderr",3]]]],[11,"ne","","",12,[[["assertstderr",3]]]],[11,"fmt","wasmer_wast","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wast::wasi_wast::wasi_kw","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wast::wasi_wast","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wast","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","wasmer_wast::wasi_wast","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"read","","",13,[[],["result",6]]],[11,"read_to_end","","",13,[[["vec",3]],["result",6]]],[11,"read_to_string","","",13,[[["string",3]],["result",6]]],[11,"read_exact","","",13,[[],["result",6]]],[11,"seek","","",13,[[["seekfrom",4]],["result",6]]],[11,"write","","",13,[[],["result",6]]],[11,"flush","","",13,[[],["result",6]]],[11,"write_all","","",13,[[],["result",6]]],[11,"write_fmt","","",13,[[["arguments",3]],["result",6]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"last_accessed","","",13,[[],["__wasi_timestamp_t",6]]],[11,"last_modified","","",13,[[],["__wasi_timestamp_t",6]]],[11,"created_time","","",13,[[],["__wasi_timestamp_t",6]]],[11,"size","","",13,[[]]],[11,"set_len","","",13,[[["__wasi_filesize_t",6]],[["wasifserror",4],["result",4]]]],[11,"unlink","","",13,[[],[["wasifserror",4],["result",4]]]],[11,"bytes_available","","",13,[[],[["result",4],["wasifserror",4]]]],[11,"parse","wasmer_wast::wasi_wast::wasi_kw","",14,[[["parser",3]],["result",6]]],[11,"parse","","",15,[[["parser",3]],["result",6]]],[11,"parse","","",16,[[["parser",3]],["result",6]]],[11,"parse","","",17,[[["parser",3]],["result",6]]],[11,"parse","","",18,[[["parser",3]],["result",6]]],[11,"parse","","",19,[[["parser",3]],["result",6]]],[11,"parse","","",20,[[["parser",3]],["result",6]]],[11,"parse","","",21,[[["parser",3]],["result",6]]],[11,"parse","","",22,[[["parser",3]],["result",6]]],[11,"parse","","",23,[[["parser",3]],["result",6]]],[11,"parse","","",24,[[["parser",3]],["result",6]]],[11,"parse","wasmer_wast","",2,[[["parser",3]],["result",6]]],[11,"parse","wasmer_wast::wasi_wast","",4,[[["parser",3]],["result",6]]],[11,"parse","","",5,[[["parser",3]],["result",6]]],[11,"parse","","",6,[[["parser",3]],["result",6]]],[11,"parse","","",7,[[["parser",3]],["result",6]]],[11,"parse","","",8,[[["parser",3]],["result",6]]],[11,"parse","","",9,[[["parser",3]],["result",6]]],[11,"parse","","",10,[[["parser",3]],["result",6]]],[11,"parse","","",11,[[["parser",3]],["result",6]]],[11,"parse","","",12,[[["parser",3]],["result",6]]],[11,"peek","wasmer_wast::wasi_wast::wasi_kw","",14,[[["cursor",3]]]],[11,"display","","",14,[[]]],[11,"peek","","",15,[[["cursor",3]]]],[11,"display","","",15,[[]]],[11,"peek","","",16,[[["cursor",3]]]],[11,"display","","",16,[[]]],[11,"peek","","",17,[[["cursor",3]]]],[11,"display","","",17,[[]]],[11,"peek","","",18,[[["cursor",3]]]],[11,"display","","",18,[[]]],[11,"peek","","",19,[[["cursor",3]]]],[11,"display","","",19,[[]]],[11,"peek","","",20,[[["cursor",3]]]],[11,"display","","",20,[[]]],[11,"peek","","",21,[[["cursor",3]]]],[11,"display","","",21,[[]]],[11,"peek","","",22,[[["cursor",3]]]],[11,"display","","",22,[[]]],[11,"peek","","",23,[[["cursor",3]]]],[11,"display","","",23,[[]]],[11,"peek","","",24,[[["cursor",3]]]],[11,"display","","",24,[[]]]],"p":[[3,"DirectiveError"],[3,"DirectiveErrors"],[3,"WasiTest"],[3,"Wast"],[3,"Envs"],[3,"Args"],[3,"Preopens"],[3,"MapDirs"],[3,"TempDirs"],[3,"AssertReturn"],[3,"Stdin"],[3,"AssertStdout"],[3,"AssertStderr"],[3,"OutputCapturerer"],[3,"wasi_test"],[3,"envs"],[3,"args"],[3,"preopens"],[3,"map_dirs"],[3,"temp_dirs"],[3,"assert_return"],[3,"stdin"],[3,"assert_stdout"],[3,"assert_stderr"],[3,"fake_i64_const"],[8,"NaNCheck"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);